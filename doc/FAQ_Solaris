============================================================
Frequently Asked Questions (FAQ) for PostgreSQL 7.2
Sun Solaris specific
to be read in conjunction with the installation instructions
============================================================
last updated:        $Date: 2001-12-10 13:02:20 $

current maintainer:  Peter Eisentraut <peter_e@gmx.net>


Contents:

1) What tools do I need to build and install PostgreSQL on Solaris?
2) Why do I get problems when building with OpenSSL support?
3) Why does configure complain about a failed test program?


1) What tools do I need to build and install PostgreSQL on Solaris?

You will need

- GNU zip (for installing the documentation)
- GNU make
- GNU readline library (optional)

Both GCC and the Sun compiler suite work.

If you like Solaris packages, you can find these tools here:
http://www.sunfreeware.com

If you prefer sources, look here:
http://www.gnu.org/order/ftp.html


2) Why do I get problems when building with OpenSSL support?

When you build PostgreSQL with OpenSSL support you might get
compilation errors in the following files:

src/backend/libpq/crypt.c
src/backend/libpq/password.c
src/interfaces/libpq/fe-auth.c
src/interfaces/libpq/fe-connect.c

This is because of a namespace conflict between the standard
/usr/include/crypt.h header and the header files provided by OpenSSL.

Upgrading your OpenSSL installation to version 0.9.6a fixes this
problem.


3) Why does configure complain about a failed test program?

This is probably a case of the run-time linker being unable to find
libz or some other non-standard library, such as libssl.  To point it
to the right location, set the LD_LIBRARY_PATH environment variable,
e.g.,

LD_LIBRARY_PATH=/usr/local/lib:/usr/local/ssl/lib
export LD_LIBRARY_PATH

and restart configure.  You will also have to keep this setting
whenever you run any of the installed PostgreSQL programs.

Alternatively, set the environment variable LD_RUN_PATH.  See the
ld(1) man page for more information.
