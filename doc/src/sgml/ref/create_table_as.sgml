<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/create_table_as.sgml,v 1.19 2003/12/13 23:59:07 neilc Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATETABLEAS">
 <refmeta>
  <refentrytitle id="sql-createtableas-title">CREATE TABLE AS</refentrytitle>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE TABLE AS</refname>
  <refpurpose>create a new table from the results of a query</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createtableas">
  <primary>CREATE TABLE AS</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE [ [ GLOBAL | LOCAL ] { TEMPORARY | TEMP } ] TABLE <replaceable>table_name</replaceable> [ (<replaceable>column_name</replaceable> [, ...] ) ]
    AS <replaceable>query</replaceable>
</synopsis>
 </refsynopsisdiv>
  
 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE TABLE AS</command> creates a table and fills it
   with data computed by a <command>SELECT</command> command or an
   <command>EXECUTE</command> that runs a prepared
   <command>SELECT</command> command.  The table columns have the
   names and data types associated with the output columns of the
   <command>SELECT</command> (except that you can override the column
   names by giving an explicit list of new column names).
  </para>

  <para>
   <command>CREATE TABLE AS</command> bears some resemblance to
   creating a view, but it is really quite different: it creates a new
   table and evaluates the query just once to fill the new table
   initially.  The new table will not track subsequent changes to the
   source tables of the query.  In contrast, a view re-evaluates its
   defining <command>SELECT</command> statement whenever it is
   queried.
  </para>
 </refsect1>

 <refsect1>
  <title>Parameters</title>

  <variablelist>
   <varlistentry>
    <term><literal>GLOBAL</literal> or <literal>LOCAL</literal></term>
    <listitem>
     <para>
      Ignored for compatibility. Refer to <xref
      linkend="sql-createtable" endterm="sql-createtable-title"> for
      details.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <varlistentry>
    <term><literal>TEMPORARY</> or <literal>TEMP</></term>
    <listitem>
     <para>
      If specified, the table is created as a temporary table.
      Refer to <xref linkend="sql-createtable" endterm="sql-createtable-title"> for details.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>table_name</replaceable></term>
    <listitem>
     <para>
      The name (optionally schema-qualified) of the table to be created.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>column_name</replaceable></term>
    <listitem>
     <para>
      The name of a column in the new table.  If column names are not
      provided, they are taken from the output column names of the
      query.  If the table is created out of an
      <command>EXECUTE</command> command, a column name list can
      currently not be specified.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>query</replaceable></term>
    <listitem>
     <para>
      A query statement (that is, a <command>SELECT</command> command
      or an <command>EXECUTE</command> command that runs a prepared
      <command>SELECT</command> command).  Refer to <xref
      linkend="sql-select" endterm="sql-select-title"> or <xref
      linkend="sql-execute" endterm="sql-execute-title">,
      respectively, for a description of the allowed syntax.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   This command is functionally similar to <xref
   linkend="sql-selectinto" endterm="sql-selectinto-title">, but it is
   preferred since it is less likely to be confused with other uses of
   the <command>SELECT INTO</command> syntax.
  </para>

  <para>
   Prior to <productname>PostgreSQL</> 7.5, <command>CREATE TABLE
   AS</command> always included OIDs in the table it
   produced. Furthermore, these OIDs were newly generated: they were
   distinct from the OIDs of any of the rows in the source tables of
   the <command>SELECT</command> or <command>EXECUTE</command>
   statement. Therefore, if <command>CREATE TABLE AS</command> was
   frequently executed, the OID counter would be rapidly
   incremented. As of <productname>PostgreSQL</> 7.5, the inclusion of
   OIDs in the table generated by <command>CREATE TABLE AS</command>
   is controlled by the <varname>default_with_oids</varname>
   configuration variable. This variable currently defaults to true,
   but will likely default to false in a future release of
   <productname>PostgreSQL</>.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibility</title>

  <para>
   This command is modeled after an <productname>Oracle</productname>
   feature.  There is no command with equivalent functionality in
   the SQL standard.  However, a combination of <literal>CREATE
   TABLE</literal> and <literal>INSERT ... SELECT</literal> can
   accomplish the same thing with little more effort.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createtable" endterm="sql-createtable-title"></member>
   <member><xref linkend="sql-execute" endterm="sql-execute-title"></member>
   <member><xref linkend="sql-select" endterm="sql-select-title"></member>
   <member><xref linkend="sql-selectinto" endterm="sql-selectinto-title"></member>
  </simplelist>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
