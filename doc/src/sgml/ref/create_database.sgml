<REFENTRY ID="SQL-CREATEDATABASE">
 <REFMETA>
  <REFENTRYTITLE>
   CREATE DATABASE
  </REFENTRYTITLE>
  <REFMISCINFO>SQL - Language Statements</REFMISCINFO>
 </REFMETA>
 <REFNAMEDIV>
  <REFNAME>
   CREATE DATABASE
  </REFNAME>
  <REFPURPOSE>
   Creates a new database
  </REFPURPOSE>
 <REFSYNOPSISDIV>
  <REFSYNOPSISDIVINFO>
   <DATE>1998-04-15</DATE>
  </REFSYNOPSISDIVINFO>
  <SYNOPSIS>
CREATE DATABASE <REPLACEABLE CLASS="PARAMETER">name</REPLACEABLE> [ WITH LOCATION = '<replaceable class="parameter">dbpath</replaceable>' ]
  </SYNOPSIS>
  
  <REFSECT2 ID="R2-SQL-CREATEDATABASE-1">
   <REFSECT2INFO>
    <DATE>1998-04-15</DATE>
   </REFSECT2INFO>
   <TITLE>
    Inputs
   </TITLE>
   <PARA>
       <VARIABLELIST>
	<VARLISTENTRY>
	 <TERM>
	  <replaceable class="parameter">name</replaceable>
	 </TERM>
	 <LISTITEM>
	  <PARA>
	   The name of a database to create.
	  </PARA>
	 </LISTITEM>
	</VARLISTENTRY>
	<VARLISTENTRY>
	 <TERM>
	  <replaceable class="parameter">dbpath</replaceable>
	 </TERM>
	 <LISTITEM>
	  <PARA>
	   An alternate location can be specified as either an
	   environment variable known to the backend server
	   (e.g. '<envar>PGDATA2</envar>') or as an absolute path name
	   (e.g. '<filename>/usr/local/pgsql/data</filename>').
	   In either case, the location must be pre-configured
	   by <command>initlocation</command>.
	  </PARA>
	 </LISTITEM>
	</VARLISTENTRY>
       </VARIABLELIST>
  </REFSECT2>

  <REFSECT2 ID="R2-SQL-CREATEDATABASE-2">
   <REFSECT2INFO>
    <DATE>1998-04-15</DATE>
   </REFSECT2INFO>
   <TITLE>
    Outputs
   </TITLE>
   <PARA>

       <VARIABLELIST>
	<VARLISTENTRY>
	 <TERM>
	  <ReturnValue>CREATEDB</ReturnValue>
	 </TERM>
	 <LISTITEM>
	  <PARA>
          Message returned if the command completes successfully.
	  </PARA>
	 </LISTITEM>
	</VARLISTENTRY>
	<VARLISTENTRY>
	 <TERM>
	  <ReturnValue>WARN:  createdb: database "<replaceable class="parameter">name</replaceable>" already exists.</ReturnValue>
	 </TERM>
	 <LISTITEM>
	  <PARA>
	   This occurs if <replaceable class="parameter">database</replaceable> specified already exists.
	  </PARA>
	 </LISTITEM>
	</VARLISTENTRY>
	<VARLISTENTRY>
	 <TERM>
	  <ReturnValue>ERROR:  Unable to create database directory <replaceable class="parameter">directory</replaceable>
</ReturnValue>
	 </TERM>
	 <LISTITEM>
	  <PARA>
There was a problem with creating the required directory; this operation will
need permissions for the <literal>postgres</literal> user on the specified location.

   </VARIABLELIST>
  </REFSECT2>
 </REFSYNOPSISDIV>
 
 <REFSECT1 ID="R1-SQL-CREATEDATABASE-1">
  <REFSECT1INFO>
   <DATE>1998-04-15</DATE>
  </REFSECT1INFO>
  <TITLE>
   Description
  </TITLE>
  <PARA>
   <command>CREATE DATABASE</command> creates a new Postgres database.
   The creator becomes the administrator of the new database.
  </PARA>
  
  <REFSECT2 ID="R2-SQL-CREATEDATABASE-3">
   <REFSECT2INFO>
    <DATE>1998-04-15</DATE>
   </REFSECT2INFO>
   <TITLE>
    Notes
   </TITLE>
   <PARA>
    <command>CREATE DATABASE</command> is a <productname>Postgres</productname>
 language extension.
   </PARA>
   <para>
    Use <command>DROP DATABASE</command> to remove a database.
   </para>
  </REFSECT2>
  
 <REFSECT1 ID="R1-SQL-CREATEDATABASE-2">
  <TITLE>
   Usage
  </TITLE>
  <PARA>
   To create a new database:
  </PARA>
  <ProgramListing>
<prompt>olly=></prompt> <userinput>create database lusiadas;</userinput>
  </ProgramListing>
  <PARA>
   To create a new database in an alternate area <filename>~/private_db</filename>:
  </PARA>
  <ProgramListing>
<prompt>$</prompt> <userinput>mkdir private_db</userinput>
<prompt>$</prompt> <userinput>initlocation ~/private_db</userinput>
<computeroutput>Creating Postgres database system directory /home/olly/private_db/base</computeroutput>

<prompt>$</prompt> <userinput>psql olly</userinput>
<computeroutput>Welcome to the POSTGRESQL interactive sql monitor:
  Please read the file COPYRIGHT for copyright terms of POSTGRESQL

   type \? for help on slash commands
   type \q to quit
   type \g or terminate with semicolon to execute query
 You are currently connected to the database: template1

<prompt>olly=></prompt></computeroutput> <userinput>create database elsewhere with location = '/home/olly/private_db';</userinput>
    <computeroutput>CREATEDB</computeroutput>
  </ProgramListing>
 </REFSECT1>
 
 <REFSECT1 ID="R1-SQL-CREATEDATABASE-3">
  <TITLE>
   Bugs
  </TITLE>
  <PARA>
   There are security and data integrity issues
 involved with using alternate database locations
   specified with absolute path names, and by default
only an environment variable known to the backend may be
specified for an alternate location.
 See the Administrator's Guide for more information.
  </PARA>
 </refsect1>

<!--
comment from Olly; response from Thomas...
  <comment>
   initlocation does not create a PG_VERSION file in the specified location.
   How will Postgres handle the situation if it is upgraded to an 
   incompatible database version?
  </comment>
Hmm. This isn't an issue since the upgrade would do a dump/reload from the main database area also.
Not sure if the dump/reload would guarantee that the alternate data area gets refreshed though...
-->
 
 <REFSECT1 ID="R1-SQL-CREATEDATABASE-4">
  <TITLE>
   Compatibility
  </TITLE>
  <PARA>
  
  <REFSECT2 ID="R2-SQL-CREATEDATABASE-4">
   <REFSECT2INFO>
    <DATE>1998-04-15</DATE>
   </REFSECT2INFO>
   <TITLE>
    SQL92
   </TITLE>
   <PARA>
    There is no <command>CREATE DATABASE</command> statement in SQL92.
   </PARA>
   <para>
    The equivalent command in standard SQL is <command>CREATE SCHEMA</command>.
   </para>
  </refsect2>
 </refsect1>
</REFENTRY>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
