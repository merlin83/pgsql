#include <locale.h>
#include <string.h>
#include <stdlib.h>

exec sql whenever sqlerror sqlprint;

exec sql include sqlca;

EXEC SQL type errtype is enum
{
	OK   = 0,
	ERR  = 1,
	WARN = 2
};

int
main (void)
{
EXEC SQL BEGIN DECLARE SECTION;
	struct 
	{
		errtype e :2;
		int code :14;
	} error = {1, 147};
	int i = 1;
	int *did = &i;
	int a[10] = {9,8,7,6,5,4,3,2,1,0};
	char text[25] = "klmnopqrst";
	char *t = (char *)malloc(10);
	double f;
	bool b = true;
	varchar database[3];
EXEC SQL END DECLARE SECTION;
	FILE *dbgs;

	strcpy(t, "0123456789");
	setlocale(LC_ALL, "de_DE");
        
	if ((dbgs = fopen("log", "w")) != NULL)
                ECPGdebug(1, dbgs);

	strcpy(database.arr, "mm");
        EXEC SQL CONNECT TO :database;

	EXEC SQL SET AUTOCOMMIT = ON;

 	EXEC SQL BEGIN WORK;

	EXEC SQL CREATE TABLE test (f float, i int, a int[10], text char(10), b bool, t int, err int);

	EXEC SQL INSERT INTO test(f,i,a,text,b,t,err) VALUES(404.90,3,'{0,1,2,3,4,5,6,7,8,9}','abcdefghij','f',0,0);

	EXEC SQL INSERT INTO test(f,i,a,text,b,t,err) VALUES(140787.0,2,:a,:text,'t',2,14);
	
EXEC SQL IFDEF BIT_FIELD_IS_NOT_ACCESSIBLE;
	EXEC SQL INSERT INTO test(f,i,a,text,b,t,err) VALUES(14.07,:did,:a,:t,:b,:error);
EXEC SQL ELSE;
	EXEC SQL INSERT INTO test(f,i,a,text,b,t,err) VALUES(14.07,:did,:a,:t,:b,1,147);
	error.code=0;
EXEC SQL ENDIF;

	EXEC SQL COMMIT;

	EXEC SQL BEGIN WORK; 

	EXEC SQL SELECT f,text,b
         INTO :f,:text,:b
         FROM test
         WHERE i = 1;

	printf("Found f=%f text=%10.10s b=%d\n", f, text, b);

	f=140787;
	EXEC SQL SELECT a,text
	 INTO :a,:t
	 FROM test
	 WHERE f = :f;

	for (i = 0; i < 10; i++)
		printf("Found a[%d] = %d\n", i, a[i]);

	printf("Found text=%10.10s\n", t);

	EXEC SQL SELECT a
	 INTO :text
	 FROM test
	 WHERE f = :f;

	printf("Found text=%s\n", text);

	EXEC SQL DROP TABLE test;

	EXEC SQL COMMIT;

	EXEC SQL DISCONNECT;

	if (dbgs != NULL)
                fclose(dbgs);

	return (0);
}
