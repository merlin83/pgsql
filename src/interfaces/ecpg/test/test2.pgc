#include <stdio.h>

exec sql include header_test;

exec sql type c is char reference;
typedef char* c;

exec sql type ind is union { int integer; short smallinteger; };
typedef union { int integer; short smallinteger; } ind;

int
main ()
{
	typedef struct { long born; short age; } birthinfo;
	exec sql type birthinfo is struct { long born; short age; };
exec sql begin declare section;
	struct personal_struct	{	varchar name[8];
					birthinfo birth;
				} personal;
	struct personal_indicator {	int ind_name;
					birthinfo ind_birth;
				  } ind_personal;
	int ind_married;
	ind children;
	ind ind_children;
	char married[9];
	c testname="Petra";
	char *query="select name, born, age, married, children from meskes where name = :var1";
exec sql end declare section;

	exec sql var ind_married is long;

	exec sql declare cur cursor for
	       select name, born, age, married, children from meskes;

	char msg[128], command[128];
	FILE *dbgs;

	if ((dbgs = fopen("log", "w")) != NULL)
                ECPGdebug(1, dbgs);

	strcpy(msg, "connect");
	exec sql connect to unix:postgresql://localhost:5432/mm; 

	strcpy(msg, "create");
	exec sql create table meskes(name char(8), born integer, age smallint, married char(8), children integer);

	strcpy(msg, "insert");
	exec sql insert into meskes(name, married, children) values ('Petra', '19900404', 3);
	exec sql insert into meskes(name, born, age, married, children) values ('Michael', 19660117, 33, '19900404', 3);
	exec sql insert into meskes(name, born, age) values ('Carsten', 19910103, 8);
	exec sql insert into meskes(name, born, age) values ('Marc', 19930907, 5);
	exec sql insert into meskes(name, born, age) values ('Chris', 19970923, 1);

	strcpy(msg, "commit");
	exec sql commit;

	strcpy(msg, "open");
	exec sql open cur;

	exec sql whenever not found do break;

	while (1) {
		strcpy(msg, "fetch");
		exec sql fetch in cur into :personal:ind_personal, :married:ind_married, :children.integer:ind_children.smallinteger;
		printf("%8.8s", personal.name.arr);
		if (!ind_personal.ind_birth.born)
			printf(", born %d", personal.birth.born);
		if (!ind_personal.ind_birth.age)
			printf(", age = %d", personal.birth.age);
		if (!ind_married)
			printf(", married %s", married);
		if (!ind_children.smallinteger)
			printf(", children = %d", children.integer);
		putchar('\n');
	}

	strcpy(msg, "close");
	exec sql close cur;

	/* and now the same query with prepare */
	exec sql prepare MM from :query;
	exec sql declare prep cursor for MM;

	strcpy(msg, "open");
	exec sql open prep using :testname;

	exec sql whenever not found do break;

	while (1) {
		strcpy(msg, "fetch");
		exec sql fetch in prep into :personal:ind_personal, :married:ind_married, :children.integer:ind_children.smallinteger;
		printf("%8.8s", personal.name.arr);
		if (!ind_personal.ind_birth.born)
			printf(", born %d", personal.birth.born);
		if (!ind_personal.ind_birth.age)
			printf(", age = %d", personal.birth.age);
		if (!ind_married)
			printf(", married %s", married);
		if (!ind_children.smallinteger)
			printf(", children = %d", children.integer);
		putchar('\n');
	}

	strcpy(msg, "close");
	exec sql close prep;

	strcpy(msg, "drop");
	exec sql drop table meskes;

	strcpy(msg, "commit");
	exec sql commit;

	strcpy(msg, "disconnect"); 

	exec sql disconnect;
	if (dbgs != NULL)
                fclose(dbgs);

	return (0);
}
