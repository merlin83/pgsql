.\" This is -*-nroff-*-
.\" XXX standard disclaimer belongs here....
.\" $Header: /home/rubik/work/pgcvs/CVSROOT/pgsql/src/man/Attic/pg_dump.1,v 1.4 1996-12-11 22:58:11 momjian Exp $
.TH PG_DUMP UNIX 1/20/96 PostgreSQL PostgreSQL
.SH NAME
pg_dump \(em dumps out a Postgres database into a script file
.SH SYNOPSIS
.BR pg_dump
[\c
.BR "-f"
filename
]
[\c
.BR "-H"
hostname
]
[\c
.BR "-p"
port]
[\c
.BR "-v"
]
[\c
.BR "-d"
]
[\c
.BR "-D"
]
[\c
.BR "-S"
help]
[\c
.BR "-a"
]
[\c
.BR "-t"
table]
[\c
.BR "-o"
]
dbname
.in -5n
.SH DESCRIPTION
.IR "pg_dump"
is a utility for dumping out a 
Postgres database into a script file containing query commands.  The script
files are in a ASCII format and can be used to reconstruct the database,
even on other machines and other architectures.  
.IR "pg_dump" 
will produce the queries necessary to re-generate all
user-defined types, functions, tables, indices, aggregates, and
operators.  In addition, all the data is copied out in ASCII format so
that it can be readily copied in again, as well, as imported into tools
for textual editing.
.PP
.IR "pg_dump" 
is useful for dumping out the contents of a database to move from one
postgreSQL installation to another.  After running 
.IR "pg_dump"
, one should examine the output script file for any warnings, especially
in light of the limitations listed below. 
.SH "CAVEATS AND LIMITATIONS"
.IR pg_dump 
has a few limitations.
The limitations mostly stem from
difficulty in extracting certain meta-information from the system
catalogs.   
.TP
.BR "rules and views"
pg_dump does not understand user-defined rules and views and
will fail to dump them properly.  (This is due to the fact that
rules are stored as plans in the catalogs and not textually)
.TP
.BR "partial indices"
pg_dump does not understand partial indices. (The reason is
the same as above.  Partial index predicates are stored as plans)
.TP
.BR "large objects"
pg_dump does not handle large objects.  Large objects are ignored and
must be dealt with manually. 
.SH "SEE ALSO"
copy(l)
