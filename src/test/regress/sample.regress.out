/bin/sh ./regress.sh 2>&1 | tee obj/regress.out
=============== destroying old regression database... =================
WARN:destroydb: database regression does not exist.
destroydb: database destroy failed on regression.
=============== creating new regression database... =================
QUERY: CREATE FUNCTION circle_in(opaque)
   RETURNS circle
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
NOTICE:ProcedureCreate: type 'circle' is not yet defined
QUERY: CREATE FUNCTION circle_out(opaque)
   RETURNS opaque
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: CREATE TYPE circle (
   internallength = 24,
   input = circle_in,
   output = circle_out,
   alignment = double
);
QUERY: CREATE TYPE city_budget (
   internallength = 16,
   input = int44in,
   output = int44out,
   element = int4
);
QUERY: CREATE TABLE hobbies_r (
	name		text,
	person 		text
);
QUERY: CREATE TABLE equipment_r (
	name 		text,
	hobby		text
);
QUERY: CREATE TABLE onek (
	unique1		int4,
	unique2		int4,
	two		int4,
	four		int4,
	ten		int4,
	twenty		int4,
	hundred		int4,
	thousand	int4,
	twothousand	int4,
	fivethous	int4,
	tenthous	int4,
	odd		int4,
	even		int4,
	stringu1	char16,
	stringu2	char16,
	string4		char16
);
QUERY: CREATE TABLE tenk1 (
	unique1		int4,
	unique2		int4,
	two		int4,
	four		int4,
	ten		int4,
	twenty		int4,
	hundred		int4,
	thousand	int4,
	twothousand	int4,
	fivethous	int4,
	tenthous	int4,
	odd		int4,
	even		int4,
	stringu1	char16,
	stringu2	char16,
	string4		char16
);
QUERY: CREATE TABLE tenk2 (
	unique1 	int4,
	unique2 	int4,
	two 	 	int4,
	four 		int4,
	ten		int4,
	twenty 		int4,
	hundred 	int4,
	thousand 	int4,
	twothousand 	int4,
	fivethous 	int4,
	tenthous	int4,
	odd		int4,
	even		int4,
	stringu1	char16,
	stringu2	char16,
	string4		char16
);
QUERY: CREATE TABLE person (
	name 		text,
	age		int4,
	location 	point
);
QUERY: CREATE TABLE emp (
	salary 		int4,
	manager 	char16
) INHERITS (person);
QUERY: CREATE TABLE student (
	gpa 		float8
) INHERITS (person);
QUERY: CREATE TABLE stud_emp (
	percent 	int4
) INHERITS (emp, student);
QUERY: CREATE TABLE city (
	name		char16,
	location 	box,
	budget 		city_budget
);
QUERY: CREATE TABLE dept (
	dname		char16,
	mgrname 	text
);
QUERY: CREATE TABLE slow_emp4000 (
	home_base	 box
);
QUERY: CREATE TABLE fast_emp4000 (
	home_base	 box
);
QUERY: CREATE TABLE road (
	name		text,
	thepath 	path
);
QUERY: CREATE TABLE ihighway () INHERITS (road);
QUERY: CREATE TABLE shighway (
	surface		text
) INHERITS (road);
QUERY: CREATE TABLE real_city (
	pop		int4,
	cname		text,
	outline 	path
);
QUERY: CREATE TABLE a_star (
	class		char,
	a 		int4
);
QUERY: CREATE TABLE b_star (
	b 		text
) INHERITS (a_star);
QUERY: CREATE TABLE c_star (
	c 		char16
) INHERITS (a_star);
QUERY: CREATE TABLE d_star (
	d 		float8
) INHERITS (b_star, c_star);
QUERY: CREATE TABLE e_star (
	e 		int2
) INHERITS (c_star);
QUERY: CREATE TABLE f_star (
	f 		polygon
) INHERITS (e_star);
QUERY: CREATE TABLE aggtest (
	a 		int2,
	b		float4
);
QUERY: CREATE TABLE arrtest (
	a 		int2[],
	b 		int4[][][],
	c 		char16[],
	d		text[][],
	e 		float8[]
);
QUERY: CREATE TABLE hash_i4_heap (
	seqno 		int4,
	random 		int4
);
QUERY: CREATE TABLE hash_c16_heap (
	seqno 		int4,
	random 		char16
);
QUERY: CREATE TABLE hash_txt_heap (
	seqno 		int4,
	random 		text
);
QUERY: CREATE TABLE hash_f8_heap (
	seqno		int4,
	random 		float8
);
QUERY: CREATE TABLE bt_i4_heap (
	seqno 		int4,
	random 		int4
);
QUERY: CREATE TABLE bt_c16_heap (
	seqno 		char16,
	random 		int4
);
QUERY: CREATE TABLE bt_txt_heap (
	seqno 		text,
	random 		int4
);
QUERY: CREATE TABLE bt_f8_heap (
	seqno 		float8,
	random 		int4
);
QUERY: CREATE FUNCTION hobbies(person)
   RETURNS setof hobbies_r
   AS 'select * from hobbies_r where person = $1.name'
   LANGUAGE 'sql';
QUERY: CREATE FUNCTION hobby_construct(text, text)
   RETURNS hobbies_r
   AS 'select $1 as name, $2 as hobby'
   LANGUAGE 'sql';
QUERY: CREATE FUNCTION equipment(hobbies_r)
   RETURNS setof equipment_r
   AS 'select * from equipment_r where hobby = $1.name'
   LANGUAGE 'sql';
QUERY: CREATE FUNCTION user_relns()
   RETURNS setof name
   AS 'select relname
       from pg_class
       where relname !~ ''pg_.*'' and
             relkind <> ''i'' '
   LANGUAGE 'sql';
QUERY: CREATE FUNCTION pt_in_circle(point, circle)
   RETURNS int4
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: CREATE FUNCTION overpaid(emp)
   RETURNS bool
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: CREATE FUNCTION boxarea(box)
   RETURNS int4
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: CREATE FUNCTION interpt_pp(path, path)
   RETURNS point
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: CREATE FUNCTION reverse_c16(char16)
   RETURNS char16
   AS '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
   LANGUAGE 'c';
QUERY: LOAD '/home2/jolly/pg95-1.01/src/test/regress/obj/regress.so'
COPY onek FROM '/home2/jolly/pg95-1.01/src/test/regress/data/onek.data';
QUERY: COPY tenk1 FROM '/home2/jolly/pg95-1.01/src/test/regress/data/tenk.data';
QUERY: INSERT INTO tenk2 VALUES (tenk1.*);
QUERY: SELECT * INTO TABLE onek2 FROM onek;
QUERY: COPY slow_emp4000 FROM '/home2/jolly/pg95-1.01/src/test/regress/data/rect.data';
QUERY: INSERT INTO fast_emp4000 VALUES (slow_emp4000.*);
QUERY: COPY person FROM '/home2/jolly/pg95-1.01/src/test/regress/data/person.data';
QUERY: COPY emp FROM '/home2/jolly/pg95-1.01/src/test/regress/data/emp.data';
QUERY: COPY student FROM '/home2/jolly/pg95-1.01/src/test/regress/data/student.data';
QUERY: COPY stud_emp FROM '/home2/jolly/pg95-1.01/src/test/regress/data/stud_emp.data';
QUERY: SELECT *
   INTO TABLE Bprime
   FROM tenk1
   WHERE unique2 < 1000;
QUERY: INSERT INTO hobbies_r (name, person)
   SELECT 'posthacking', p.name
   FROM person* p
   WHERE p.name = 'mike' or p.name = 'jeff';
QUERY: INSERT INTO hobbies_r (name, person)
   SELECT 'basketball', p.name
   FROM person p
   WHERE p.name = 'joe' or p.name = 'sally';
QUERY: INSERT INTO hobbies_r (name) VALUES ('skywalking');
QUERY: INSERT INTO equipment_r (name, hobby) VALUES ('advil', 'posthacking');
QUERY: INSERT INTO equipment_r (name, hobby) VALUES ('peet''s coffee', 'posthacking');
QUERY: INSERT INTO equipment_r (name, hobby) VALUES ('hightops', 'basketball');
QUERY: INSERT INTO equipment_r (name, hobby) VALUES ('guts', 'skywalking');
QUERY: COPY road FROM '/home2/jolly/pg95-1.01/src/test/regress/data/streets.data';
QUERY: COPY real_city FROM '/home2/jolly/pg95-1.01/src/test/regress/data/real_city.data';
QUERY: SELECT *
   INTO TABLE ramp
   FROM road
   WHERE name ~ '.*Ramp';
QUERY: INSERT INTO ihighway
   SELECT *
   FROM road
   WHERE name ~ 'I- .*';
QUERY: INSERT INTO shighway
   SELECT *
   FROM road
   WHERE name ~ 'State Hwy.*';
QUERY: UPDATE shighway
   SET surface = 'asphalt'
INSERT INTO a_star (class, a) VALUES ('a', 1);
QUERY: INSERT INTO a_star (class, a) VALUES ('a', 2);
QUERY: INSERT INTO a_star (class) VALUES ('a');
QUERY: INSERT INTO b_star (class, a, b) VALUES ('b', 3, 'mumble'::text);
QUERY: INSERT INTO b_star (class, a) VALUES ('b', 4);
QUERY: INSERT INTO b_star (class, b) VALUES ('b', 'bumble'::text);
QUERY: INSERT INTO b_star (class) VALUES ('b');
QUERY: INSERT INTO c_star (class, a, c) VALUES ('c', 5, 'hi mom'::char16);
QUERY: INSERT INTO c_star (class, a) VALUES ('c', 6);
QUERY: INSERT INTO c_star (class, c) VALUES ('c', 'hi paul'::char16);
QUERY: INSERT INTO c_star (class) VALUES ('c');
QUERY: INSERT INTO d_star (class, a, b, c, d)
   VALUES ('d', 7, 'grumble'::text, 'hi sunita'::char16, '0.0'::float8);
QUERY: INSERT INTO d_star (class, a, b, c)
   VALUES ('d', 8, 'stumble'::text, 'hi koko'::char16);
QUERY: INSERT INTO d_star (class, a, b, d)
   VALUES ('d', 9, 'rumble'::text, '1.1'::float8);
QUERY: INSERT INTO d_star (class, a, c, d)
   VALUES ('d', 10, 'hi kristin'::char16, '10.01'::float8);
QUERY: INSERT INTO d_star (class, b, c, d)
   VALUES ('d', 'crumble'::text, 'hi boris'::char16, '100.001'::float8);
QUERY: INSERT INTO d_star (class, a, b)
   VALUES ('d', 11, 'fumble'::text)
INSERT INTO d_star (class, a, c)
   VALUES ('d', 12, 'hi avi'::char16);
QUERY: INSERT INTO d_star (class, a, d)
   VALUES ('d', 13, '1000.0001'::float8);
QUERY: INSERT INTO d_star (class, b, c)
   VALUES ('d', 'tumble'::text, 'hi andrew'::char16);
QUERY: INSERT INTO d_star (class, b, d)
   VALUES ('d', 'humble'::text, '10000.00001'::float8);
QUERY: INSERT INTO d_star (class, c, d)
   VALUES ('d', 'hi ginger'::char16, '100000.000001'::float8);
QUERY: INSERT INTO d_star (class, a) VALUES ('d', 14);
QUERY: INSERT INTO d_star (class, b) VALUES ('d', 'jumble'::text);
QUERY: INSERT INTO d_star (class, c) VALUES ('d', 'hi jolly'::char16);
QUERY: INSERT INTO d_star (class, d) VALUES ('d', '1000000.0000001'::float8);
QUERY: INSERT INTO d_star (class) VALUES ('d');
QUERY: INSERT INTO e_star (class, a, c, e)
   VALUES ('e', 15, 'hi carol'::char16, '-1'::int2);
QUERY: INSERT INTO e_star (class, a, c)
   VALUES ('e', 16, 'hi bob'::char16);
QUERY: INSERT INTO e_star (class, a, e)
   VALUES ('e', 17, '-2'::int2);
QUERY: INSERT INTO e_star (class, c, e)
   VALUES ('e', 'hi michelle'::char16, '-3'::int2);
QUERY: INSERT INTO e_star (class, a)
   VALUES ('e', 18);
QUERY: INSERT INTO e_star (class, c)
   VALUES ('e', 'hi elisa'::char16);
QUERY: INSERT INTO e_star (class, e)
   VALUES ('e', '-4'::int2);
QUERY: INSERT INTO f_star (class, a, c, e, f)
   VALUES ('f', 19, 'hi claire'::char16, '-5'::int2, '(1,2,3,4)'::polygon);
QUERY: INSERT INTO f_star (class, a, c, e)
   VALUES ('f', 20, 'hi mike'::char16, '-6'::int2);
QUERY: INSERT INTO f_star (class, a, c, f)
   VALUES ('f', 21, 'hi marcel'::char16, '(11,22,33,44,55,66)'::polygon);
QUERY: INSERT INTO f_star (class, a, e, f)
   VALUES ('f', 22, '-7'::int2, '(111,222,333,444,555,666,777,888)'::polygon);
QUERY: INSERT INTO f_star (class, c, e, f)
   VALUES ('f', 'hi keith'::char16, '-8'::int2,
	   '(1111,2222,3333,4444)'::polygon);
QUERY: INSERT INTO f_star (class, a, c)
   VALUES ('f', 24, 'hi marc'::char16);
QUERY: INSERT INTO f_star (class, a, e)
   VALUES ('f', 25, '-9'::int2);
QUERY: INSERT INTO f_star (class, a, f)
   VALUES ('f', 26, '(11111,22222,33333,44444)'::polygon);
QUERY: INSERT INTO f_star (class, c, e)
   VALUES ('f', 'hi allison'::char16, '-10'::int2);
QUERY: INSERT INTO f_star (class, c, f)
   VALUES ('f', 'hi jeff'::char16,
           '(111111,222222,333333,444444)'::polygon);
QUERY: INSERT INTO f_star (class, e, f)
   VALUES ('f', '-11'::int2, '(1111111,2222222,3333333,4444444)'::polygon);
QUERY: INSERT INTO f_star (class, a) VALUES ('f', 27);
QUERY: INSERT INTO f_star (class, c) VALUES ('f', 'hi carl'::char16);
QUERY: INSERT INTO f_star (class, e) VALUES ('f', '-12'::int2);
QUERY: INSERT INTO f_star (class, f)
   VALUES ('f', '(11111111,22222222,33333333,44444444)'::polygon);
QUERY: INSERT INTO f_star (class) VALUES ('f');
QUERY: COPY hash_i4_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: COPY hash_c16_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: COPY hash_txt_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: COPY hash_f8_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: COPY bt_i4_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/desc.data';
QUERY: COPY bt_c16_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: COPY bt_txt_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/desc.data';
QUERY: COPY bt_f8_heap FROM '/home2/jolly/pg95-1.01/src/test/regress/data/hash.data';
QUERY: INSERT INTO arrtest (a[5], b[2][1][2], c, d)
   VALUES ('{1,2,3,4,5}', '{{{},{1,2}}}', '{}', '{}');
QUERY: INSERT INTO arrtest (a, b[2][2][1], c, d, e)
   VALUES ('{11,12,23}', '{{3,4},{4,5}}', '{"foobar"}',
           '{{"elt1", "elt2"}}', '{"3.4", "6.7"}');
QUERY: INSERT INTO arrtest (a, b[1][2][2], c, d[2][1])
   VALUES ('{}', '{3,4}', '{foo,bar}', '{bar,foo}');
QUERY: CREATE TABLE iportaltest (
	i		int4,
	d		float4,
	p		polygon
);
QUERY: INSERT INTO iportaltest (i, d, p)
   VALUES (1, 3.567, '(3.0,4.0,1.0,2.0)'::polygon);
QUERY: INSERT INTO iportaltest (i, d, p)
   VALUES (2, 89.05, '(4.0,3.0,2.0,1.0)'::polygon);
QUERY: CREATE INDEX onek_unique1 ON onek USING btree(unique1 int4_ops);
QUERY: CREATE INDEX onek_unique2 ON onek USING btree(unique2 int4_ops);
QUERY: CREATE INDEX onek_hundred ON onek USING btree(hundred int4_ops);
QUERY: CREATE INDEX onek_stringu1 ON onek USING btree(stringu1 char16_ops);
QUERY: CREATE INDEX tenk1_unique1 ON tenk1 USING btree(unique1 int4_ops);
QUERY: CREATE INDEX tenk1_unique2 ON tenk1 USING btree(unique2 int4_ops);
QUERY: CREATE INDEX tenk1_hundred ON tenk1 USING btree(hundred int4_ops);
QUERY: CREATE INDEX tenk2_unique1 ON tenk2 USING btree(unique1 int4_ops);
QUERY: CREATE INDEX tenk2_unique2 ON tenk2 USING btree(unique2 int4_ops);
QUERY: CREATE INDEX tenk2_hundred ON tenk2 USING btree(hundred int4_ops);
QUERY: CREATE INDEX rix ON road USING btree (name text_ops);
QUERY: CREATE INDEX iix ON ihighway USING btree (name text_ops);
QUERY: CREATE INDEX six ON shighway USING btree (name text_ops);
QUERY: CREATE INDEX bt_i4_index ON bt_i4_heap USING btree (seqno int4_ops);
QUERY: CREATE INDEX bt_c16_index ON bt_c16_heap USING btree (seqno char16_ops);
QUERY: CREATE INDEX bt_txt_index ON bt_txt_heap USING btree (seqno text_ops);
QUERY: CREATE INDEX bt_f8_index ON bt_f8_heap USING btree (seqno float8_ops);
QUERY: CREATE INDEX rect2ind ON fast_emp4000 USING rtree (home_base bigbox_ops);
QUERY: CREATE INDEX hash_i4_index ON hash_i4_heap USING hash (random int4_ops);
QUERY: CREATE INDEX hash_c16_index ON hash_c16_heap USING hash (random char16_ops);
QUERY: CREATE INDEX hash_txt_index ON hash_txt_heap USING hash (random text_ops);
QUERY: CREATE INDEX hash_f8_index ON hash_f8_heap USING hash (random float8_ops);
QUERY: CREATE OPERATOR ## (
   leftarg = path,
   rightarg = path,
   procedure = path_inter,
   commutator = ##
);
QUERY: CREATE OPERATOR <% (
   leftarg = point,
   rightarg = circle,
   procedure = pt_in_circle,
   commutator = >=%
);
QUERY: CREATE OPERATOR @#@ (
   rightarg = int4,		-- left unary
   procedure = int4fac
);
QUERY: CREATE OPERATOR #@# (
   leftarg = int4,		-- right unary
   procedure = int4fac
);
QUERY: CREATE OPERATOR #%# (
   leftarg = int4,		-- right unary
   procedure = int4fac
);
QUERY: CREATE VIEW street AS
   SELECT r.name, r.thepath, c.cname AS cname
   FROM road r, real_city c
   WHERE c.outline ## r.thepath;
QUERY: CREATE VIEW iexit AS
   SELECT ih.name, ih.thepath,
	interpt_pp(ih.thepath, r.thepath) AS exit
   FROM ihighway ih, ramp r
   WHERE ih.thepath ## r.thepath;
QUERY: CREATE VIEW toyemp AS
   SELECT name, age, location, 12*salary AS annualsal
   FROM emp;
QUERY: CREATE AGGREGATE newavg (
   sfunc1 = int4pl, basetype = int4, stype1 = int4,
   sfunc2 = int4inc, stype2 = int4,
   finalfunc = int4div,
   initcond1 = '0', initcond2 = '0'
);
QUERY: CREATE AGGREGATE newsum (
   sfunc1 = int4pl, basetype = int4, stype1 = int4,
   initcond1 = '0'
);
QUERY: CREATE AGGREGATE newcnt (
   sfunc2 = int4inc, basetype = int4, stype2 = int4,
   initcond2 = '0'
);
QUERY: VACUUM;
QUERY: SELECT relname, relhasindex
   FROM pg_class
   WHERE relhasindex
   ORDER BY relname;
relname        relhasindex  
-------------- ------------ 
bt_c16_heap    t            
bt_f8_heap     t            
bt_i4_heap     t            
bt_txt_heap    t            
fast_emp4000   t            
hash_c16_heap  t            
hash_f8_heap   t            
hash_i4_heap   t            
hash_txt_heap  t            
ihighway       t            
onek           t            
pg_attribute   t            
pg_class       t            
pg_proc        t            
pg_type        t            
road           t            
shighway       t            
tenk1          t            
tenk2          t            
=============== running regression queries ... =================
QUERY: SELECT 1 AS one;
one  
---- 
1    
QUERY: SELECT 't'::bool AS true;
true  
----- 
t     
QUERY: SELECT 'f'::bool AS false;
false  
------ 
f      
QUERY: SELECT 't'::bool or 'f'::bool AS true;
true  
----- 
t     
QUERY: SELECT 't'::bool and 'f'::bool AS false;
false  
------ 
f      
QUERY: SELECT not 'f'::bool AS true;
true  
----- 
t     
QUERY: SELECT 't'::bool = 'f'::bool AS false;
false  
------ 
f      
QUERY: SELECT 't'::bool <> 'f'::bool AS true;
true  
----- 
t     
QUERY: CREATE TABLE BOOLTBL1 (f1 bool);
QUERY: INSERT INTO BOOLTBL1 (f1) VALUES ('t'::bool);
QUERY: INSERT INTO BOOLTBL1 (f1) VALUES ('True'::bool);
QUERY: INSERT INTO BOOLTBL1 (f1) VALUES ('true'::bool);
QUERY: SELECT '' AS t_3, BOOLTBL1.*;
t_3  f1  
---- --- 
     t   
     t   
     t   
QUERY: SELECT '' AS t_3, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 = 'true'::bool;
t_3  f1  
---- --- 
     t   
     t   
     t   
QUERY: SELECT '' AS t_3, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 <> 'false'::bool;
t_3  f1  
---- --- 
     t   
     t   
     t   
QUERY: SELECT '' AS zero, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE booleq('false'::bool, f1);
zero  f1  
----- --- 
QUERY: INSERT INTO BOOLTBL1 (f1) VALUES ('f'::bool);
QUERY: SELECT '' AS f_1, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 = 'false'::bool;
f_1  f1  
---- --- 
     f   
QUERY: CREATE TABLE BOOLTBL2 (f1 bool);
QUERY: INSERT INTO BOOLTBL2 (f1) VALUES ('f'::bool);
QUERY: INSERT INTO BOOLTBL2 (f1) VALUES ('false'::bool);
QUERY: INSERT INTO BOOLTBL2 (f1) VALUES ('False'::bool);
QUERY: INSERT INTO BOOLTBL2 (f1)
   VALUES ('XXX'::bool);
QUERY: SELECT '' AS f_4, BOOLTBL2.*;
f_4  f1  
---- --- 
     f   
     f   
     f   
     f   
QUERY: SELECT '' AS tf_12, BOOLTBL1.*, BOOLTBL2.*
   WHERE BOOLTBL2.f1 <> BOOLTBL1.f1;
tf_12  f1  f1  
------ --- --- 
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
QUERY: SELECT '' AS tf_12, BOOLTBL1.*, BOOLTBL2.*
   WHERE boolne(BOOLTBL2.f1,BOOLTBL1.f1);
tf_12  f1  f1  
------ --- --- 
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
       t   f   
QUERY: SELECT '' AS ff_4, BOOLTBL1.*, BOOLTBL2.*
   WHERE BOOLTBL2.f1 = BOOLTBL1.f1 and BOOLTBL1.f1 = 'false'::bool;
ff_4  f1  f1  
----- --- --- 
      f   f   
      f   f   
      f   f   
      f   f   
QUERY: SELECT '' AS tf_12_ff_4, BOOLTBL1.*, BOOLTBL2.*
   WHERE BOOLTBL2.f1 = BOOLTBL1.f1 or BOOLTBL1.f1 = 'true'::bool;
tf_12_ff_4  f1  f1  
----------- --- --- 
            t   f   
            t   f   
            t   f   
            f   f   
            t   f   
            t   f   
            t   f   
            f   f   
            t   f   
            t   f   
            t   f   
            f   f   
            t   f   
            t   f   
            t   f   
            f   f   
QUERY: CREATE TABLE ABSTIME_TBL (f1 abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('Jan 14, 1973 03:14:21');
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('Mon May  1 00:30:30 PDT 1995'::abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('epoch'::abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('current'::abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('infinity'::abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('-infinity'::abstime);
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('May 10, 1943 23:59:12');
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('Feb 35, 1946 10:00:00');
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('Feb 28, 1984 25:08:10');
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('bad date format');
QUERY: INSERT INTO ABSTIME_TBL (f1) VALUES ('Jun 10, 1843');
QUERY: CREATE TABLE RELTIME_TBL (f1 reltime);
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 1 minute');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 5 hour');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 10 day');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 34 year');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 3 months');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 14 seconds ago');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('badly formatted reltime');
QUERY: INSERT INTO RELTIME_TBL (f1) VALUES ('@ 30 eons ago');
QUERY: CREATE TABLE TINTERVAL_TBL (f1  tinterval);
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["-infinity" "infinity"]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["May 10, 1943 23:59:12" "Jan 14, 1973 03:14:21"]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["Sep 4, 1983 23:59:12" "Oct 4, 1983 23:59:12"]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["epoch" "Mon May  1 00:30:30 PDT 1995"]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["Feb 15 1990 12:15:03" "current"]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["bad time specifications" ""]');
QUERY: INSERT INTO TINTERVAL_TBL (f1)
   VALUES ('["" "infinity"]');
QUERY: SELECT '' AS eleven, ABSTIME_TBL.*;
eleven  f1                            
------- ----------------------------- 
        Sun Jan 14 03:14:21 1973 PST  
        Mon May 01 00:30:30 1995 PDT  
        epoch                         
        current                       
        infinity                      
        -infinity                     
        Mon May 10 23:59:12 1943 PWT  
        Thu Mar 07 10:00:00 1946 PST  
        Wed Dec 31 15:59:59 1969 PST  
        Invalid Abstime               
        Invalid Abstime               
QUERY: SELECT '' AS eight, ABSTIME_TBL.*
   WHERE ABSTIME_TBL.f1 < 'Jun 30, 2001'::abstime;
eight  f1                            
------ ----------------------------- 
       Sun Jan 14 03:14:21 1973 PST  
       Mon May 01 00:30:30 1995 PDT  
       epoch                         
       current                       
       -infinity                     
       Mon May 10 23:59:12 1943 PWT  
       Thu Mar 07 10:00:00 1946 PST  
       Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS eight, ABSTIME_TBL.*
   WHERE ABSTIME_TBL.f1 > '-infinity'::abstime;
eight  f1                            
------ ----------------------------- 
       Sun Jan 14 03:14:21 1973 PST  
       Mon May 01 00:30:30 1995 PDT  
       epoch                         
       current                       
       infinity                      
       Mon May 10 23:59:12 1943 PWT  
       Thu Mar 07 10:00:00 1946 PST  
       Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS eight, ABSTIME_TBL.*
   WHERE 'May 10, 1943 23:59:12'::abstime <> ABSTIME_TBL.f1;
eight  f1                            
------ ----------------------------- 
       Sun Jan 14 03:14:21 1973 PST  
       Mon May 01 00:30:30 1995 PDT  
       epoch                         
       current                       
       infinity                      
       -infinity                     
       Thu Mar 07 10:00:00 1946 PST  
       Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS one, ABSTIME_TBL.*
   WHERE 'current'::abstime = ABSTIME_TBL.f1;
one  f1       
---- -------- 
     current  
QUERY: SELECT '' AS five, ABSTIME_TBL.*
   WHERE 'epoch'::abstime >= ABSTIME_TBL.f1;
five  f1                            
----- ----------------------------- 
      epoch                         
      -infinity                     
      Mon May 10 23:59:12 1943 PWT  
      Thu Mar 07 10:00:00 1946 PST  
      Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS six, ABSTIME_TBL.*
   WHERE ABSTIME_TBL.f1 <= 'Jan 14, 1973 03:14:21'::abstime;
six  f1                            
---- ----------------------------- 
     Sun Jan 14 03:14:21 1973 PST  
     epoch                         
     -infinity                     
     Mon May 10 23:59:12 1943 PWT  
     Thu Mar 07 10:00:00 1946 PST  
     Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS six, ABSTIME_TBL.*
  WHERE ABSTIME_TBL.f1 <?>
	'["Apr 1 1945 00:00:00" "Dec 30 1999 23:00:00"]'::tinterval;
six  f1                            
---- ----------------------------- 
     Sun Jan 14 03:14:21 1973 PST  
     Mon May 01 00:30:30 1995 PDT  
     epoch                         
     current                       
     Thu Mar 07 10:00:00 1946 PST  
     Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS five, ABSTIME_TBL.*
  WHERE  (ABSTIME_TBL.f1 + '@ 3 year'::reltime)     -- +3 years
	< 'Jan 14 14:00:00 1977'::abstime;
five  f1                            
----- ----------------------------- 
      Sun Jan 14 03:14:21 1973 PST  
      epoch                         
      Mon May 10 23:59:12 1943 PWT  
      Thu Mar 07 10:00:00 1946 PST  
      Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS five, ABSTIME_TBL.*
   WHERE  (ABSTIME_TBL.f1 + '@ 3 year ago'::reltime) -- -3 years
	< 'Jan 14 14:00:00 1971'::abstime;
five  f1                            
----- ----------------------------- 
      Sun Jan 14 03:14:21 1973 PST  
      epoch                         
      Mon May 10 23:59:12 1943 PWT  
      Thu Mar 07 10:00:00 1946 PST  
      Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS five, ABSTIME_TBL.*
   WHERE  (ABSTIME_TBL.f1 - '@ 3 year'::reltime)     -- -(+3) years
	< 'Jan 14 14:00:00 1971'::abstime;
five  f1                            
----- ----------------------------- 
      Sun Jan 14 03:14:21 1973 PST  
      epoch                         
      Mon May 10 23:59:12 1943 PWT  
      Thu Mar 07 10:00:00 1946 PST  
      Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS five, ABSTIME_TBL.*
   WHERE  (ABSTIME_TBL.f1 - '@ 3 year ago'::reltime) -- -(-3) years
	< 'Jan 14 14:00:00 1977'::abstime;
five  f1                            
----- ----------------------------- 
      Sun Jan 14 03:14:21 1973 PST  
      epoch                         
      Mon May 10 23:59:12 1943 PWT  
      Thu Mar 07 10:00:00 1946 PST  
      Wed Dec 31 15:59:59 1969 PST  
QUERY: SELECT '' AS twenty, ABSTIME_TBL.*, RELTIME_TBL.*
   WHERE (ABSTIME_TBL.f1 + RELTIME_TBL.f1)
	< 'Jan 14 14:00:00 1971'::abstime;
twenty  f1                            f1                
------- ----------------------------- ----------------- 
        epoch                         @ 1 minute        
        Mon May 10 23:59:12 1943 PWT  @ 1 minute        
        Thu Mar 07 10:00:00 1946 PST  @ 1 minute        
        Wed Dec 31 15:59:59 1969 PST  @ 1 minute        
        epoch                         @ 5 hours         
        Mon May 10 23:59:12 1943 PWT  @ 5 hours         
        Thu Mar 07 10:00:00 1946 PST  @ 5 hours         
        Wed Dec 31 15:59:59 1969 PST  @ 5 hours         
        epoch                         @ 10 days         
        Mon May 10 23:59:12 1943 PWT  @ 10 days         
        Thu Mar 07 10:00:00 1946 PST  @ 10 days         
        Wed Dec 31 15:59:59 1969 PST  @ 10 days         
        epoch                         @ 3 months        
        Mon May 10 23:59:12 1943 PWT  @ 3 months        
        Thu Mar 07 10:00:00 1946 PST  @ 3 months        
        Wed Dec 31 15:59:59 1969 PST  @ 3 months        
        epoch                         @ 14 seconds ago  
        Mon May 10 23:59:12 1943 PWT  @ 14 seconds ago  
        Thu Mar 07 10:00:00 1946 PST  @ 14 seconds ago  
        Wed Dec 31 15:59:59 1969 PST  @ 14 seconds ago  
QUERY: SELECT '' AS eight, RELTIME_TBL.*;
eight  f1                 
------ ------------------ 
       @ 1 minute         
       @ 5 hours          
       @ 10 days          
       @ 34 years         
       @ 3 months         
       @ 14 seconds ago   
       Undefined RelTime  
       Undefined RelTime  
QUERY: SELECT '' AS five, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 <> '@ 10 days'::reltime;
five  f1                
----- ----------------- 
      @ 1 minute        
      @ 5 hours         
      @ 34 years        
      @ 3 months        
      @ 14 seconds ago  
QUERY: SELECT '' AS three, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 <= '@ 5 hours'::reltime;
three  f1                
------ ----------------- 
       @ 1 minute        
       @ 5 hours         
       @ 14 seconds ago  
QUERY: SELECT '' AS three, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 < '@ 1 day'::reltime;
three  f1                
------ ----------------- 
       @ 1 minute        
       @ 5 hours         
       @ 14 seconds ago  
QUERY: SELECT '' AS one, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 = '@ 34 years'::reltime;
one  f1          
---- ----------- 
     @ 34 years  
QUERY: SELECT '' AS two, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 >= '@ 1 month'::reltime;
two  f1          
---- ----------- 
     @ 34 years  
     @ 3 months  
QUERY: SELECT '' AS five, RELTIME_TBL.*
   WHERE RELTIME_TBL.f1 > '@ 3 seconds ago'::reltime;
five  f1          
----- ----------- 
      @ 1 minute  
      @ 5 hours   
      @ 10 days   
      @ 34 years  
      @ 3 months  
QUERY: SELECT '' AS fifteen, r1.*, r2.*
   FROM RELTIME_TBL r1, RELTIME_TBL r2
   WHERE r1.f1 > r2.f1;
fifteen  f1          f1                
-------- ----------- ----------------- 
         @ 5 hours   @ 1 minute        
         @ 10 days   @ 1 minute        
         @ 34 years  @ 1 minute        
         @ 3 months  @ 1 minute        
         @ 10 days   @ 5 hours         
         @ 34 years  @ 5 hours         
         @ 3 months  @ 5 hours         
         @ 34 years  @ 10 days         
         @ 3 months  @ 10 days         
         @ 34 years  @ 3 months        
         @ 1 minute  @ 14 seconds ago  
         @ 5 hours   @ 14 seconds ago  
         @ 10 days   @ 14 seconds ago  
         @ 34 years  @ 14 seconds ago  
         @ 3 months  @ 14 seconds ago  
QUERY: SELECT '' AS seven, TINTERVAL_TBL.*;
seven  f1                                                               
------ ---------------------------------------------------------------- 
       ['-infinity' 'infinity']                                         
       ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
       ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
       ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
       ['Undefined Range']                                              
       ['Undefined Range']                                              
QUERY: SELECT '' AS one, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #= '@ 1 months';
one  f1                                                               
---- ---------------------------------------------------------------- 
     ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
QUERY: SELECT '' AS three, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #<> '@ 1 months';
three  f1                                                               
------ ---------------------------------------------------------------- 
       ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
       ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
QUERY: SELECT '' AS zero, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #< '@ 1 month';
zero  f1  
----- --- 
QUERY: SELECT '' AS one, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #<= '@ 1 month';
one  f1                                                               
---- ---------------------------------------------------------------- 
     ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
QUERY: SELECT '' AS three, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #> '@ 1 year';
three  f1                                                               
------ ---------------------------------------------------------------- 
       ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
       ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
QUERY: SELECT '' AS three, t.*
   FROM TINTERVAL_TBL t
   WHERE t.f1 #>= '@ 3 years';
three  f1                                                               
------ ---------------------------------------------------------------- 
       ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
       ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
QUERY: SELECT '' AS three, t1.*
   FROM TINTERVAL_TBL t1
   WHERE t1.f1 &&
	'["Aug 15 14:23:19 1983" "Sep 16 14:23:19 1983"]'::tinterval;
three  f1                                                               
------ ---------------------------------------------------------------- 
       ['-infinity' 'infinity']                                         
       ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
QUERY: SELECT '' AS five, t1.*, t2.*
   FROM TINTERVAL_TBL t1, TINTERVAL_TBL t2
   WHERE t1.f1 && t2.f1 and
	 t1.f1 = t2.f1;
five  f1                                                               f1                                                               
----- ---------------------------------------------------------------- ---------------------------------------------------------------- 
      ['-infinity' 'infinity']                                         ['-infinity' 'infinity']                                         
      ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
      ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
      ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
      ['Thu Feb 15 12:15:03 1990 PST' 'current']                       ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
QUERY: SELECT '' AS fourteen, t1.*, t2.*
   FROM TINTERVAL_TBL t1, TINTERVAL_TBL t2
   WHERE t1.f1 && t2.f1 and
	not t1.f1 = t2.f1;
fourteen  f1                                                               f1                                                               
--------- ---------------------------------------------------------------- ---------------------------------------------------------------- 
          ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  ['-infinity' 'infinity']                                         
          ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  ['-infinity' 'infinity']                                         
          ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         ['-infinity' 'infinity']                                         
          ['Thu Feb 15 12:15:03 1990 PST' 'current']                       ['-infinity' 'infinity']                                         
          ['-infinity' 'infinity']                                         ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
          ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
          ['-infinity' 'infinity']                                         ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
          ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
          ['-infinity' 'infinity']                                         ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
          ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
          ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
          ['Thu Feb 15 12:15:03 1990 PST' 'current']                       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
          ['-infinity' 'infinity']                                         ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
          ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
QUERY: SELECT '' AS five, t1.*
   FROM TINTERVAL_TBL t1
   WHERE not t1.f1 <<
	'["Aug 15 14:23:19 1980" "Sep 16 14:23:19 1990"]'::tinterval;
five  f1                                                               
----- ---------------------------------------------------------------- 
      ['Mon May 10 23:59:12 1943 PWT' 'Sun Jan 14 03:14:21 1973 PST']  
      ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
      ['Thu Feb 15 12:15:03 1990 PST' 'current']                       
      ['Undefined Range']                                              
      ['Undefined Range']                                              
QUERY: SELECT '' AS three, t1.*
   FROM TINTERVAL_TBL t1
   WHERE t1.f1 &&
	('Aug 15 14:23:19 1983'::abstime <#>
	 'Sep 16 14:23:19 1983'::abstime);
three  f1                                                               
------ ---------------------------------------------------------------- 
       ['-infinity' 'infinity']                                         
       ['Sun Sep 04 23:59:12 1983 PDT' 'Tue Oct 04 23:59:12 1983 PDT']  
       ['epoch' 'Mon May 01 00:30:30 1995 PDT']                         
QUERY: CREATE TABLE BOX_TBL (f1 box);
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('(2.0,2.0,0.0,0.0)');
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('(1.0,1.0,3.0,3.0)');
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('(2.5, 2.5, 2.5,3.5)');
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('(3.0, 3.0,3.0,3.0)');
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('(2.3, 4.5)');
WARN:Bad box external representation '(2.3, 4.5)'
QUERY: INSERT INTO BOX_TBL (f1) VALUES ('asdfasdf(ad');
WARN:Bad box external representation 'asdfasdf(ad'
QUERY: SELECT '' AS four, BOX_TBL.*;
four  f1                 
----- ------------------ 
      (2,2,0,0)          
      (3,3,1,1)          
      (2.5,3.5,2.5,2.5)  
      (3,3,3,3)          
QUERY: SELECT '' AS four, b.*, box_area(b.f1) as barea
   FROM BOX_TBL b;
four  f1                 barea  
----- ------------------ ------ 
      (2,2,0,0)          4      
      (3,3,1,1)          4      
      (2.5,3.5,2.5,2.5)  0      
      (3,3,3,3)          0      
QUERY: SELECT '' AS three, b.f1
   FROM BOX_TBL b
   WHERE b.f1 && '(2.5,2.5,1.0,1.0)'::box;
three  f1                 
------ ------------------ 
       (2,2,0,0)          
       (3,3,1,1)          
       (2.5,3.5,2.5,2.5)  
QUERY: SELECT '' AS two, b1.*
   FROM BOX_TBL b1
   WHERE b1.f1 &< '(2.0,2.0,2.5,2.5)'::box;
two  f1                 
---- ------------------ 
     (2,2,0,0)          
     (2.5,3.5,2.5,2.5)  
QUERY: SELECT '' AS two, b1.*
   FROM BOX_TBL b1
   WHERE b1.f1 &> '(2.0,2.0,2.5,2.5)'::box;
two  f1                 
---- ------------------ 
     (2.5,3.5,2.5,2.5)  
     (3,3,3,3)          
QUERY: SELECT '' AS two, b.f1
   FROM BOX_TBL b
   WHERE b.f1 << '(3.0,3.0,5.0,5.0)'::box;
two  f1                 
---- ------------------ 
     (2,2,0,0)          
     (2.5,3.5,2.5,2.5)  
QUERY: SELECT '' AS four, b.f1
   FROM BOX_TBL b
   WHERE b.f1 <= '(3.0,3.0,5.0,5.0)'::box;
four  f1                 
----- ------------------ 
      (2,2,0,0)          
      (3,3,1,1)          
      (2.5,3.5,2.5,2.5)  
      (3,3,3,3)          
QUERY: SELECT '' AS two, b.f1
   FROM BOX_TBL b
   WHERE b.f1 < '(3.0,3.0,5.0,5.0)'::box;
two  f1                 
---- ------------------ 
     (2.5,3.5,2.5,2.5)  
     (3,3,3,3)          
QUERY: SELECT '' AS two, b.f1
   FROM BOX_TBL b
   WHERE b.f1 = '(3.0,3.0,5.0,5.0)'::box;
two  f1         
---- ---------- 
     (2,2,0,0)  
     (3,3,1,1)  
QUERY: SELECT '' AS two, b.f1
   FROM BOX_TBL b				-- zero area
   WHERE b.f1 > '(3.5,3.0,4.5,3.0)'::box;
two  f1         
---- ---------- 
     (2,2,0,0)  
     (3,3,1,1)  
QUERY: SELECT '' AS four, b.f1
   FROM BOX_TBL b				-- zero area
   WHERE b.f1 >= '(3.5,3.0,4.5,3.0)'::box;
four  f1                 
----- ------------------ 
      (2,2,0,0)          
      (3,3,1,1)          
      (2.5,3.5,2.5,2.5)  
      (3,3,3,3)          
QUERY: SELECT '' AS two, b.f1
   FROM BOX_TBL b
   WHERE '(3.0,3.0,5.0,5.0)'::box >> b.f1;
two  f1                 
---- ------------------ 
     (2,2,0,0)          
     (2.5,3.5,2.5,2.5)  
QUERY: SELECT '' AS three, b.f1
   FROM BOX_TBL b
   WHERE b.f1 @ '(0,0,3,3)'::box;
three  f1         
------ ---------- 
       (2,2,0,0)  
       (3,3,1,1)  
       (3,3,3,3)  
QUERY: SELECT '' AS three, b.f1
   FROM BOX_TBL b
   WHERE '(0,0,3,3)'::box ~ b.f1;
three  f1         
------ ---------- 
       (2,2,0,0)  
       (3,3,1,1)  
       (3,3,3,3)  
QUERY: SELECT '' AS one, b.f1
   FROM BOX_TBL b
   WHERE '(1,1,3,3)'::box ~= b.f1;
one  f1         
---- ---------- 
     (3,3,1,1)  
QUERY: SELECT '' AS four, @@(b1.f1) AS p
   FROM BOX_TBL b1;
four  p        
----- -------- 
      (1,1)    
      (2,2)    
      (2.5,3)  
      (3,3)    
QUERY: SELECT '' AS one, b1.*, b2.*
   FROM BOX_TBL b1, BOX_TBL b2
   WHERE b1.f1 ~ b2.f1 and not b1.f1 ~= b2.f1;
one  f1         f1         
---- ---------- ---------- 
     (3,3,1,1)  (3,3,3,3)  
QUERY: CREATE TABLE CHAR_TBL(f1 char);
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('a');
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('A');
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('1');
QUERY: INSERT INTO CHAR_TBL (f1) VALUES (2);
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('3');
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('');
QUERY: INSERT INTO CHAR_TBL (f1) VALUES ('cd');
QUERY: SELECT '' AS seven, CHAR_TBL.*;
seven  f1  
------ --- 
       a   
       A   
       1   
       2   
       3   
           
       c   
QUERY: SELECT '' AS six, c.*
   FROM CHAR_TBL c
   WHERE c.f1 <> 'a';
six  f1  
---- --- 
     A   
     1   
     2   
     3   
         
     c   
QUERY: SELECT '' AS one, c.*
   FROM CHAR_TBL c
   WHERE c.f1 = 'a';
one  f1  
---- --- 
     a   
QUERY: SELECT '' AS five, c.*
   FROM CHAR_TBL c
   WHERE c.f1 < 'a';
five  f1  
----- --- 
      A   
      1   
      2   
      3   
          
QUERY: SELECT '' AS six, c.*
   FROM CHAR_TBL c
   WHERE c.f1 <= 'a';
six  f1  
---- --- 
     a   
     A   
     1   
     2   
     3   
         
QUERY: SELECT '' AS one, c.*
   FROM CHAR_TBL c
   WHERE c.f1 > 'a';
one  f1  
---- --- 
     c   
QUERY: SELECT '' AS two, c.*
   FROM CHAR_TBL c
   WHERE c.f1 >= 'a';
two  f1  
---- --- 
     a   
     c   
QUERY: CREATE TABLE CHAR2_TBL(f1 char2);
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('AB');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('ab');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('ZY');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('34');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('d');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('');
QUERY: INSERT INTO CHAR2_TBL (f1) VALUES ('12345');
QUERY: SELECT '' AS seven, CHAR2_TBL.*;
seven  f1  
------ --- 
       AB  
       ab  
       ZY  
       34  
       d   
           
       12  
QUERY: SELECT '' AS six, c.f1 FROM CHAR2_TBL c WHERE c.f1 <> 'AB';
six  f1  
---- --- 
     ab  
     ZY  
     34  
     d   
         
     12  
QUERY: SELECT '' AS one, c.f1 FROM CHAR2_TBL c WHERE c.f1 = 'AB';
one  f1  
---- --- 
     AB  
QUERY: SELECT '' AS three, c.f1 FROM CHAR2_TBL c WHERE c.f1 < 'AB';
three  f1  
------ --- 
       34  
           
       12  
QUERY: SELECT '' AS four, c.f1 FROM CHAR2_TBL c WHERE c.f1 <= 'AB';
four  f1  
----- --- 
      AB  
      34  
          
      12  
QUERY: SELECT '' AS three, c.f1 FROM CHAR2_TBL c WHERE c.f1 > 'AB';
three  f1  
------ --- 
       ab  
       ZY  
       d   
QUERY: SELECT '' AS four, c.f1 FROM CHAR2_TBL c WHERE c.f1 >= 'AB';
four  f1  
----- --- 
      AB  
      ab  
      ZY  
      d   
QUERY: SELECT '' AS seven, c.f1 FROM CHAR2_TBL c WHERE c.f1 ~ '.*';
seven  f1  
------ --- 
       AB  
       ab  
       ZY  
       34  
       d   
           
       12  
QUERY: SELECT '' AS zero, c.f1 FROM CHAR2_TBL c WHERE c.f1 !~ '.*';
zero  f1  
----- --- 
QUERY: SELECT '' AS one, c.f1 FROM CHAR2_TBL c WHERE c.f1 ~ '34';
one  f1  
---- --- 
     34  
QUERY: SELECT '' AS one, c.f1 FROM CHAR2_TBL c WHERE c.f1 ~ '3.*';
one  f1  
---- --- 
     34  
QUERY: CREATE TABLE CHAR4_TBL (f1  char4);
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('ABCD');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('abcd');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('ZYWZ');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('343f');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('d34a');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('');
QUERY: INSERT INTO CHAR4_TBL(f1) VALUES ('12345678');
QUERY: SELECT '' AS seven, CHAR4_TBL.*;
seven  f1    
------ ----- 
       ABCD  
       abcd  
       ZYWZ  
       343f  
       d34a  
             
       1234  
QUERY: SELECT '' AS six, c.f1 FROM CHAR4_TBL c WHERE c.f1 <> 'ABCD';
six  f1    
---- ----- 
     abcd  
     ZYWZ  
     343f  
     d34a  
           
     1234  
QUERY: SELECT '' AS one, c.f1 FROM CHAR4_TBL c WHERE c.f1 = 'ABCD';
one  f1    
---- ----- 
     ABCD  
QUERY: SELECT '' AS three, c.f1 FROM CHAR4_TBL c WHERE c.f1 < 'ABCD';
three  f1    
------ ----- 
       343f  
             
       1234  
QUERY: SELECT '' AS four, c.f1 FROM CHAR4_TBL c WHERE c.f1 <= 'ABCD';
four  f1    
----- ----- 
      ABCD  
      343f  
            
      1234  
QUERY: SELECT '' AS three, c.f1 FROM CHAR4_TBL c WHERE c.f1 > 'ABCD';
three  f1    
------ ----- 
       abcd  
       ZYWZ  
       d34a  
QUERY: SELECT '' AS four, c.f1 FROM CHAR4_TBL c WHERE c.f1 >= 'ABCD';
four  f1    
----- ----- 
      ABCD  
      abcd  
      ZYWZ  
      d34a  
QUERY: SELECT '' AS seven, c.f1 FROM CHAR4_TBL c WHERE c.f1 ~ '.*';
seven  f1    
------ ----- 
       ABCD  
       abcd  
       ZYWZ  
       343f  
       d34a  
             
       1234  
QUERY: SELECT '' AS zero, c.f1 FROM CHAR4_TBL c WHERE c.f1 !~ '.*';
zero  f1  
----- --- 
QUERY: SELECT '' AS three, c.f1 FROM CHAR4_TBL c WHERE c.f1 ~ '.*34.*';
three  f1    
------ ----- 
       343f  
       d34a  
       1234  
QUERY: CREATE TABLE CHAR8_TBL(f1 char8);
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('ABCDEFGH');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('abcdefgh');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('ZYWZ410-');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('343f%2a');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('d34aas');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('');
QUERY: INSERT INTO CHAR8_TBL(f1) VALUES ('1234567890');
QUERY: SELECT '' AS seven, CHAR8_TBL.*;
seven  f1        
------ --------- 
       ABCDEFGH  
       abcdefgh  
       ZYWZ410-  
       343f%2a   
       d34aas    
                 
       12345678  
QUERY: SELECT '' AS six, c.f1 FROM CHAR8_TBL c WHERE c.f1 <> 'ABCDEFGH';
six  f1        
---- --------- 
     abcdefgh  
     ZYWZ410-  
     343f%2a   
     d34aas    
               
     12345678  
QUERY: SELECT '' AS one, c.f1 FROM CHAR8_TBL c WHERE c.f1 = 'ABCDEFGH';
one  f1        
---- --------- 
     ABCDEFGH  
QUERY: SELECT '' AS three, c.f1 FROM CHAR8_TBL c WHERE c.f1 < 'ABCDEFGH';
three  f1        
------ --------- 
       343f%2a   
                 
       12345678  
QUERY: SELECT '' AS four, c.f1 FROM CHAR8_TBL c WHERE c.f1 <= 'ABCDEFGH';
four  f1        
----- --------- 
      ABCDEFGH  
      343f%2a   
                
      12345678  
QUERY: SELECT '' AS three, c.f1 FROM CHAR8_TBL c WHERE c.f1 > 'ABCDEFGH';
three  f1        
------ --------- 
       abcdefgh  
       ZYWZ410-  
       d34aas    
QUERY: SELECT '' AS four, c.f1 FROM CHAR8_TBL c WHERE c.f1 >= 'ABCDEFGH';
four  f1        
----- --------- 
      ABCDEFGH  
      abcdefgh  
      ZYWZ410-  
      d34aas    
QUERY: SELECT '' AS seven, c.f1 FROM CHAR8_TBL c WHERE c.f1 ~ '.*';
seven  f1        
------ --------- 
       ABCDEFGH  
       abcdefgh  
       ZYWZ410-  
       343f%2a   
       d34aas    
                 
       12345678  
QUERY: SELECT '' AS zero, c.f1 FROM CHAR8_TBL c WHERE c.f1 !~ '.*';
zero  f1  
----- --- 
QUERY: SELECT '' AS four, c.f1 FROM CHAR8_TBL c WHERE c.f1 ~ '[0-9]';
four  f1        
----- --------- 
      ZYWZ410-  
      343f%2a   
      d34aas    
      12345678  
QUERY: SELECT '' AS three, c.f1 FROM CHAR8_TBL c WHERE c.f1 ~ '.*34.*';
three  f1        
------ --------- 
       343f%2a   
       d34aas    
       12345678  
QUERY: CREATE TABLE CHAR16_TBL(f1 char16);
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('ABCDEFGHIJKLMNOP');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('abcdefghijklmnop');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('asdfghjkl;');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('343f%2a');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('d34aaasdf');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('');
QUERY: INSERT INTO CHAR16_TBL(f1) VALUES ('1234567890ABCDEFGHIJKLMNOPQRSTUV');
QUERY: SELECT '' AS seven, CHAR16_TBL.*;
seven  f1                
------ ----------------- 
       ABCDEFGHIJKLMNOP  
       abcdefghijklmnop  
       asdfghjkl;        
       343f%2a           
       d34aaasdf         
                         
       1234567890ABCDEF  
QUERY: SELECT '' AS six, c.f1 FROM CHAR16_TBL c WHERE c.f1 <> 'ABCDEFGHIJKLMNOP';
six  f1                
---- ----------------- 
     abcdefghijklmnop  
     asdfghjkl;        
     343f%2a           
     d34aaasdf         
                       
     1234567890ABCDEF  
QUERY: SELECT '' AS one, c.f1 FROM CHAR16_TBL c WHERE c.f1 = 'ABCDEFGHIJKLMNOP';
one  f1                
---- ----------------- 
     ABCDEFGHIJKLMNOP  
QUERY: SELECT '' AS three, c.f1 FROM CHAR16_TBL c WHERE c.f1 < 'ABCDEFGHIJKLMNOP';
three  f1                
------ ----------------- 
       343f%2a           
                         
       1234567890ABCDEF  
QUERY: SELECT '' AS four, c.f1 FROM CHAR16_TBL c WHERE c.f1 <= 'ABCDEFGHIJKLMNOP';
four  f1                
----- ----------------- 
      ABCDEFGHIJKLMNOP  
      343f%2a           
                        
      1234567890ABCDEF  
QUERY: SELECT '' AS three, c.f1 FROM CHAR16_TBL c WHERE c.f1 > 'ABCDEFGHIJKLMNOP';
three  f1                
------ ----------------- 
       abcdefghijklmnop  
       asdfghjkl;        
       d34aaasdf         
QUERY: SELECT '' AS four, c.f1 FROM CHAR16_TBL c WHERE c.f1 >= 'ABCDEFGHIJKLMNOP';
four  f1                
----- ----------------- 
      ABCDEFGHIJKLMNOP  
      abcdefghijklmnop  
      asdfghjkl;        
      d34aaasdf         
QUERY: SELECT '' AS seven, c.f1 FROM CHAR16_TBL c WHERE c.f1 ~ '.*';
seven  f1                
------ ----------------- 
       ABCDEFGHIJKLMNOP  
       abcdefghijklmnop  
       asdfghjkl;        
       343f%2a           
       d34aaasdf         
                         
       1234567890ABCDEF  
QUERY: SELECT '' AS zero, c.f1 FROM CHAR16_TBL c WHERE c.f1 !~ '.*';
zero  f1  
----- --- 
QUERY: SELECT '' AS three, c.f1 FROM CHAR16_TBL c WHERE c.f1 ~ '[0-9]';
three  f1                
------ ----------------- 
       343f%2a           
       d34aaasdf         
       1234567890ABCDEF  
QUERY: SELECT '' AS two, c.f1 FROM CHAR16_TBL c WHERE c.f1 ~ '.*asdf.*';
two  f1          
---- ----------- 
     asdfghjkl;  
     d34aaasdf   
QUERY: CREATE TABLE FLOAT4_TBL (f1  float4);
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('0.0');
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('1004.30');
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('-34.84');
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e+20');
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('1.2345678901234e-20');
QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e40');
WARN:	Bad float4 input format -- overflow

QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e40');
WARN:	Bad float4 input format -- overflow

QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('10e-40');
WARN:	Bad float4 input format -- underflow

QUERY: INSERT INTO FLOAT4_TBL(f1) VALUES ('-10e-40');
WARN:	Bad float4 input format -- underflow

QUERY: SELECT '' AS five, FLOAT4_TBL.*;
five  f1           
----- ------------ 
      0            
      1004.3       
      -34.84       
      1.23457e+20  
      1.23457e-20  
QUERY: SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE f.f1 <> '1004.3';
four  f1           
----- ------------ 
      0            
      -34.84       
      1.23457e+20  
      1.23457e-20  
QUERY: SELECT '' AS one, f.* FROM FLOAT4_TBL f WHERE f.f1 = '1004.3';
one  f1      
---- ------- 
     1004.3  
QUERY: SELECT '' AS three, f.* FROM FLOAT4_TBL f WHERE '1004.3' > f.f1;
three  f1           
------ ------------ 
       0            
       -34.84       
       1.23457e-20  
QUERY: SELECT '' AS three, f.* FROM FLOAT4_TBL f WHERE  f.f1 < '1004.3';
three  f1           
------ ------------ 
       0            
       -34.84       
       1.23457e-20  
QUERY: SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE '1004.3' >= f.f1;
four  f1           
----- ------------ 
      0            
      1004.3       
      -34.84       
      1.23457e-20  
QUERY: SELECT '' AS four, f.* FROM FLOAT4_TBL f WHERE  f.f1 <= '1004.3';
four  f1           
----- ------------ 
      0            
      1004.3       
      -34.84       
      1.23457e-20  
QUERY: SELECT '' AS three, f.f1, f.f1 * '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
three  f1           x             
------ ------------ ------------- 
       1004.3       -10043        
       1.23457e+20  -1.23457e+21  
       1.23457e-20  -1.23457e-19  
QUERY: SELECT '' AS three, f.f1, f.f1 + '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0'
SELECT '' AS three, f.f1, f.f1 / '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
three  f1           x            
------ ------------ ------------ 
       1004.3       994.3        
       1.23457e+20  1.23457e+20  
       1.23457e-20  -10          
QUERY: SELECT '' AS three, f.f1, f.f1 - '-10' AS x FROM FLOAT4_TBL f
   WHERE f.f1 > '0.0';
three  f1           x             
------ ------------ ------------- 
       1004.3       -100.43       
       1.23457e+20  -1.23457e+19  
       1.23457e-20  -1.23457e-21  
QUERY: SELECT '' AS bad, f.f1 / '0.0' from FLOAT4_TBL f;
three  f1           x            
------ ------------ ------------ 
       1004.3       1014.3       
       1.23457e+20  1.23457e+20  
       1.23457e-20  10           
QUERY: SELECT '' AS five, FLOAT4_TBL.*;
WARN:float4div:  divide by 0.0 error
QUERY: SELECT '' AS five, f.f1, @f.f1 AS abs_f1 FROM FLOAT4_TBL f;
five  f1           
----- ------------ 
      0            
      1004.3       
      -34.84       
      1.23457e+20  
      1.23457e-20  
QUERY: UPDATE FLOAT4_TBL
   SET f1 = FLOAT4_TBL.f1 * '-1'
   WHERE FLOAT4_TBL.f1 > '0.0';
five  f1           abs_f1       
----- ------------ ------------ 
      0            0            
      1004.3       1004.3       
      -34.84       34.84        
      1.23457e+20  1.23457e+20  
      1.23457e-20  1.23457e-20  
QUERY: SELECT '' AS five, FLOAT4_TBL.*;
QUERY: CREATE TABLE FLOAT8_TBL(f1 float8);
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('0.0');
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('1004.30');
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('-34.84');
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e+200');
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e-200');
QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('10e400');
WARN:	Bad float8 input format

QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e400');
WARN:	Bad float8 input format

QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('10e-400');
WARN:	Bad float8 input format

QUERY: INSERT INTO FLOAT8_TBL(f1) VALUES ('-10e-400');
WARN:	Bad float8 input format

QUERY: SELECT '' AS five, FLOAT8_TBL.*;
five  f1                    
----- --------------------- 
      0                     
      1004.3                
      -34.84                
      1.2345678901234e+200  
      1.2345678901234e-200  
QUERY: SELECT '' AS four, f.* FROM FLOAT8_TBL f WHERE f.f1 <> '1004.3';
four  f1                    
----- --------------------- 
      0                     
      -34.84                
      1.2345678901234e+200  
      1.2345678901234e-200  
QUERY: SELECT '' AS one, f.* FROM FLOAT8_TBL f WHERE f.f1 = '1004.3';
one  f1      
---- ------- 
     1004.3  
QUERY: SELECT '' AS three, f.* FROM FLOAT8_TBL f WHERE '1004.3' > f.f1;
three  f1                    
------ --------------------- 
       0                     
       -34.84                
       1.2345678901234e-200  
QUERY: SELECT '' AS three, f.* FROM FLOAT8_TBL f WHERE  f.f1 < '1004.3';
three  f1                    
------ --------------------- 
       0                     
       -34.84                
       1.2345678901234e-200  
QUERY: SELECT '' AS four, f.* FROM FLOAT8_TBL f WHERE '1004.3' >= f.f1;
four  f1                    
----- --------------------- 
      0                     
      1004.3                
      -34.84                
      1.2345678901234e-200  
QUERY: SELECT '' AS four, f.* FROM FLOAT8_TBL f WHERE  f.f1 <= '1004.3';
four  f1                    
----- --------------------- 
      0                     
      1004.3                
      -34.84                
      1.2345678901234e-200  
QUERY: SELECT '' AS three, f.f1, f.f1 * '-10' AS x
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    x                      
------ --------------------- ---------------------- 
       1004.3                -10043                 
       1.2345678901234e+200  -1.2345678901234e+201  
       1.2345678901234e-200  -1.2345678901234e-199  
QUERY: SELECT '' AS three, f.f1, f.f1 + '-10' AS x
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    x                     
------ --------------------- --------------------- 
       1004.3                994.3                 
       1.2345678901234e+200  1.2345678901234e+200  
       1.2345678901234e-200  -10                   
QUERY: SELECT '' AS three, f.f1, f.f1 / '-10' AS x
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    x                      
------ --------------------- ---------------------- 
       1004.3                -100.43                
       1.2345678901234e+200  -1.2345678901234e+199  
       1.2345678901234e-200  -1.2345678901234e-201  
QUERY: SELECT '' AS three, f.f1, f.f1 - '-10' AS x
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    x                     
------ --------------------- --------------------- 
       1004.3                1014.3                
       1.2345678901234e+200  1.2345678901234e+200  
       1.2345678901234e-200  10                    
QUERY: SELECT '' AS one, f.f1 ^ '2.0' AS square_f1
   FROM FLOAT8_TBL f where f.f1 = '1004.3';
one  square_f1   
---- ----------- 
     1008618.49  
QUERY: SELECT '' AS five, f.f1, @f.f1 AS abs_f1
   FROM FLOAT8_TBL f;
five  f1                    abs_f1                
----- --------------------- --------------------- 
      0                     0                     
      1004.3                1004.3                
      -34.84                34.84                 
      1.2345678901234e+200  1.2345678901234e+200  
      1.2345678901234e-200  1.2345678901234e-200  
QUERY: SELECT '' AS five, f.f1, %f.f1 AS trunc_f1
   FROM FLOAT8_TBL f;
five  f1                    trunc_f1              
----- --------------------- --------------------- 
      0                     0                     
      1004.3                1004                  
      -34.84                -34                   
      1.2345678901234e+200  1.2345678901234e+200  
      1.2345678901234e-200  0                     
QUERY: SELECT '' AS five, f.f1, f.f1 % AS round_f1
   FROM FLOAT8_TBL f;
five  f1                    round_f1              
----- --------------------- --------------------- 
      0                     0                     
      1004.3                1004                  
      -34.84                -35                   
      1.2345678901234e+200  1.2345678901234e+200  
      1.2345678901234e-200  0                     
QUERY: SELECT '' AS three, f.f1, |/f.f1 AS sqrt_f1
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    sqrt_f1                
------ --------------------- ---------------------- 
       1004.3                31.6906926399535       
       1.2345678901234e+200  1.11111110611109e+100  
       1.2345678901234e-200  1.11111110611109e-100  
QUERY: SELECT '' AS three, f.f1, : ( ; f.f1) AS exp_ln_f1
   FROM FLOAT8_TBL f
   WHERE f.f1 > '0.0';
three  f1                    exp_ln_f1              
------ --------------------- ---------------------- 
       1004.3                1004.3                 
       1.2345678901234e+200  1.23456789012338e+200  
       1.2345678901234e-200  1.23456789012339e-200  
QUERY: SELECT '' AS five, f.f1, ||/f.f1 AS cbrt_f1 FROM FLOAT8_TBL f;
five  f1                    cbrt_f1               
----- --------------------- --------------------- 
      0                     0                     
      1004.3                10.014312837827       
      -34.84                -3.26607421344208     
      1.2345678901234e+200  4.97933859234765e+66  
      1.2345678901234e-200  2.3112042409018e-67   
QUERY: SELECT '' AS five, FLOAT8_TBL.*;
five  f1                    
----- --------------------- 
      0                     
      1004.3                
      -34.84                
      1.2345678901234e+200  
      1.2345678901234e-200  
QUERY: UPDATE FLOAT8_TBL
   SET f1 = FLOAT8_TBL.f1 * '-1'
   WHERE FLOAT8_TBL.f1 > '0.0';
QUERY: SELECT '' AS bad, f.f1 * '1e200' from FLOAT8_TBL f;
WARN:floating point exception! the last floating point operation either exceeded legal ranges or was a divide by zero
QUERY: SELECT '' AS bad, f.f1 ^ '1e200' from FLOAT8_TBL f;
WARN:pow() returned a floating point out of the range

QUERY: SELECT '' AS bad, ; (f.f1) from FLOAT8_TBL f where f.f1 = '0.0' ;
WARN:can't take log of 0!
QUERY: SELECT '' AS bad, ; (f.f1) from FLOAT8_TBL f where f.f1 < '0.0' ;
WARN:can't take log of a negative number
QUERY: SELECT '' AS bad, : (f.f1) from FLOAT8_TBL f;
WARN:exp() returned a floating point out of range

QUERY: SELECT '' AS bad, f.f1 / '0.0' from FLOAT8_TBL f;
WARN:float8div:  divide by 0.0 error
QUERY: SELECT '' AS five, FLOAT8_TBL.*;
five  f1                     
----- ---------------------- 
      0                      
      -34.84                 
      -1004.3                
      -1.2345678901234e+200  
      -1.2345678901234e-200  
QUERY: CREATE TABLE INT2_TBL(f1 int2);
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('0');
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('1234');
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('-1234');
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('34.5');
WARN:pg_atoi: error in "34.5": can't parse ".5"
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('32767');
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('-32767');
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('100000');
WARN:pg_atoi: error reading "100000": Result too large
QUERY: INSERT INTO INT2_TBL(f1) VALUES ('asdf');
WARN:pg_atoi: error in "asdf": can't parse "asdf"
QUERY: SELECT '' AS five, INT2_TBL.*;
five  f1      
----- ------- 
      0       
      1234    
      -1234   
      32767   
      -32767  
QUERY: SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> '0'::int2;
four  f1      
----- ------- 
      1234    
      -1234   
      32767   
      -32767  
QUERY: SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> '0'::int4;
four  f1      
----- ------- 
      1234    
      -1234   
      32767   
      -32767  
QUERY: SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = '0'::int2;
one  f1  
---- --- 
     0   
QUERY: SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = '0'::int4;
one  f1  
---- --- 
     0   
QUERY: SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < '0'::int2;
two  f1      
---- ------- 
     -1234   
     -32767  
QUERY: SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < '0'::int4;
two  f1      
---- ------- 
     -1234   
     -32767  
QUERY: SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= '0'::int2;
three  f1      
------ ------- 
       0       
       -1234   
       -32767  
QUERY: SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= '0'::int4;
three  f1      
------ ------- 
       0       
       -1234   
       -32767  
QUERY: SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > '0'::int2;
two  f1     
---- ------ 
     1234   
     32767  
QUERY: SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > '0'::int4;
two  f1     
---- ------ 
     1234   
     32767  
QUERY: SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= '0'::int2;
three  f1     
------ ------ 
       0      
       1234   
       32767  
QUERY: SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= '0'::int4;
three  f1     
------ ------ 
       0      
       1234   
       32767  
QUERY: SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % '2'::int2) = '1'::int2;
one  f1     
---- ------ 
     32767  
QUERY: SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % '2'::int4) = '0'::int2;
three  f1     
------ ------ 
       0      
       1234   
       -1234  
QUERY: SELECT '' AS five, i.f1, i.f1 * '2'::int2 AS x FROM INT2_TBL i;
five  f1      x      
----- ------- ------ 
      0       0      
      1234    2468   
      -1234   -2468  
      32767   -2     
      -32767  2      
QUERY: SELECT '' AS five, i.f1, i.f1 * '2'::int4 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       0       
      1234    2468    
      -1234   -2468   
      32767   65534   
      -32767  -65534  
QUERY: SELECT '' AS five, i.f1, i.f1 + '2'::int2 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       2       
      1234    1236    
      -1234   -1232   
      32767   -32767  
      -32767  -32765  
QUERY: SELECT '' AS five, i.f1, i.f1 + '2'::int4 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       2       
      1234    1236    
      -1234   -1232   
      32767   32769   
      -32767  -32765  
QUERY: SELECT '' AS five, i.f1, i.f1 - '2'::int2 AS x FROM INT2_TBL i;
five  f1      x      
----- ------- ------ 
      0       -2     
      1234    1232   
      -1234   -1236  
      32767   32765  
      -32767  32767  
QUERY: SELECT '' AS five, i.f1, i.f1 - '2'::int4 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       -2      
      1234    1232    
      -1234   -1236   
      32767   32765   
      -32767  -32769  
QUERY: SELECT '' AS five, i.f1, i.f1 / '2'::int2 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       0       
      1234    617     
      -1234   -617    
      32767   16383   
      -32767  -16383  
QUERY: SELECT '' AS five, i.f1, i.f1 / '2'::int4 AS x FROM INT2_TBL i;
five  f1      x       
----- ------- ------- 
      0       0       
      1234    617     
      -1234   -617    
      32767   16383   
      -32767  -16383  
QUERY: CREATE TABLE INT4_TBL(f1 int4);
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('0');
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('123456');
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('-123456');
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('34.5');
WARN:pg_atoi: error in "34.5": can't parse ".5"
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('2147483647');
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('-2147483647');
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('1000000000000');
WARN:pg_atoi: error reading "1000000000000": Result too large
QUERY: INSERT INTO INT4_TBL(f1) VALUES ('asdf');
WARN:pg_atoi: error in "asdf": can't parse "asdf"
QUERY: SELECT '' AS five, INT4_TBL.*;
five  f1           
----- ------------ 
      0            
      123456       
      -123456      
      2147483647   
      -2147483647  
QUERY: SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> '0'::int2;
four  f1           
----- ------------ 
      123456       
      -123456      
      2147483647   
      -2147483647  
QUERY: SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> '0'::int4;
four  f1           
----- ------------ 
      123456       
      -123456      
      2147483647   
      -2147483647  
QUERY: SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = '0'::int2;
one  f1  
---- --- 
     0   
QUERY: SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = '0'::int4;
one  f1  
---- --- 
     0   
QUERY: SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < '0'::int2;
two  f1           
---- ------------ 
     -123456      
     -2147483647  
QUERY: SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < '0'::int4;
two  f1           
---- ------------ 
     -123456      
     -2147483647  
QUERY: SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= '0'::int2;
three  f1           
------ ------------ 
       0            
       -123456      
       -2147483647  
QUERY: SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= '0'::int4;
three  f1           
------ ------------ 
       0            
       -123456      
       -2147483647  
QUERY: SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > '0'::int2;
two  f1          
---- ----------- 
     123456      
     2147483647  
QUERY: SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > '0'::int4;
two  f1          
---- ----------- 
     123456      
     2147483647  
QUERY: SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= '0'::int2;
three  f1          
------ ----------- 
       0           
       123456      
       2147483647  
QUERY: SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= '0'::int4;
three  f1          
------ ----------- 
       0           
       123456      
       2147483647  
QUERY: SELECT '' AS one, i.* FROM INT4_TBL i WHERE (i.f1 % '2'::int2) = '1'::int2;
one  f1          
---- ----------- 
     2147483647  
QUERY: SELECT '' AS three, i.* FROM INT4_TBL i WHERE (i.f1 % '2'::int4) = '0'::int2;
three  f1       
------ -------- 
       0        
       123456   
       -123456  
QUERY: SELECT '' AS five, i.f1, i.f1 * '2'::int2 AS x FROM INT4_TBL i;
five  f1           x        
----- ------------ -------- 
      0            0        
      123456       246912   
      -123456      -246912  
      2147483647   -2       
      -2147483647  2        
QUERY: SELECT '' AS five, i.f1, i.f1 * '2'::int4 AS x FROM INT4_TBL i;
five  f1           x        
----- ------------ -------- 
      0            0        
      123456       246912   
      -123456      -246912  
      2147483647   -2       
      -2147483647  2        
QUERY: SELECT '' AS five, i.f1, i.f1 + '2'::int2 AS x FROM INT4_TBL i;
five  f1           x            
----- ------------ ------------ 
      0            2            
      123456       123458       
      -123456      -123454      
      2147483647   -2147483647  
      -2147483647  -2147483645  
QUERY: SELECT '' AS five, i.f1, i.f1 + '2'::int4 AS x FROM INT4_TBL i;
five  f1           x            
----- ------------ ------------ 
      0            2            
      123456       123458       
      -123456      -123454      
      2147483647   -2147483647  
      -2147483647  -2147483645  
QUERY: SELECT '' AS five, i.f1, i.f1 - '2'::int2 AS x FROM INT4_TBL i;
five  f1           x           
----- ------------ ----------- 
      0            -2          
      123456       123454      
      -123456      -123458     
      2147483647   2147483645  
      -2147483647  2147483647  
QUERY: SELECT '' AS five, i.f1, i.f1 - '2'::int4 AS x FROM INT4_TBL i;
five  f1           x           
----- ------------ ----------- 
      0            -2          
      123456       123454      
      -123456      -123458     
      2147483647   2147483645  
      -2147483647  2147483647  
QUERY: SELECT '' AS five, i.f1, i.f1 / '2'::int2 AS x FROM INT4_TBL i;
five  f1           x            
----- ------------ ------------ 
      0            0            
      123456       61728        
      -123456      -61728       
      2147483647   1073741823   
      -2147483647  -1073741823  
QUERY: SELECT '' AS five, i.f1, i.f1 / '2'::int4 AS x FROM INT4_TBL i;
five  f1           x            
----- ------------ ------------ 
      0            0            
      123456       61728        
      -123456      -61728       
      2147483647   1073741823   
      -2147483647  -1073741823  
QUERY: SELECT '2'::int2 * '2'::int2 = '16'::int2 / '4'::int2 AS true;
true  
----- 
t     
QUERY: SELECT '2'::int4 * '2'::int2 = '16'::int2 / '4'::int4 AS true;
true  
----- 
t     
QUERY: SELECT '2'::int2 * '2'::int4 = '16'::int4 / '4'::int2 AS true;
true  
----- 
t     
QUERY: SELECT '1000'::int4 < '999'::int4 AS false;
false  
------ 
f      
QUERY: SELECT 4! AS twenty_four;
twenty_four  
------------ 
24           
QUERY: SELECT !!3 AS six;
six  
---- 
6    
QUERY: SELECT 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 AS ten;
ten  
---- 
10   
QUERY: SELECT 2 + 2 / 2 AS three;
three  
------ 
3      
QUERY: SELECT (2 + 2) / 2 AS two;
two  
---- 
2    
QUERY: SELECT dsqrt('64'::float8) AS eight;
eight  
------ 
8      
QUERY: SELECT |/'64'::float8 AS eight;
eight  
------ 
8      
QUERY: SELECT ||/'27'::float8 AS three;
three  
------ 
3      
QUERY: CREATE TABLE OID_TBL(f1 oid);
QUERY: INSERT INTO OID_TBL(f1) VALUES ('1234');
QUERY: INSERT INTO OID_TBL(f1) VALUES ('1235');
QUERY: INSERT INTO OID_TBL(f1) VALUES ('987');
QUERY: INSERT INTO OID_TBL(f1) VALUES ('-1040');
QUERY: INSERT INTO OID_TBL(f1) VALUES ('');
QUERY: INSERT INTO OID_TBL(f1) VALUES ('asdfasd');
WARN:pg_atoi: error in "asdfasd": can't parse "asdfasd"
QUERY: SELECT '' AS five, OID_TBL.*;
five  f1     
----- ------ 
      1234   
      1235   
      987    
      -1040  
      0      
QUERY: SELECT '' AS one, o.* FROM OID_TBL o WHERE o.f1 = '1234'::oid;
one  f1    
---- ----- 
     1234  
QUERY: SELECT '' AS four, o.* FROM OID_TBL o WHERE o.f1 <> '1234';
four  f1     
----- ------ 
      1235   
      987    
      -1040  
      0      
QUERY: SELECT '' AS four, o.* FROM OID_TBL o WHERE o.f1 <= '1234';
four  f1     
----- ------ 
      1234   
      987    
      -1040  
      0      
QUERY: SELECT '' AS three, o.* FROM OID_TBL o WHERE o.f1 < '1234';
three  f1     
------ ------ 
       987    
       -1040  
       0      
QUERY: SELECT '' AS two, o.* FROM OID_TBL o WHERE o.f1 >= '1234';
two  f1    
---- ----- 
     1234  
     1235  
QUERY: SELECT '' AS one, o.* FROM OID_TBL o WHERE o.f1 > '1234';
one  f1    
---- ----- 
     1235  
QUERY: CREATE TABLE OIDNAME_TBL(f1 oidname);
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('1234,abcd');
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('1235,efgh');
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('987,XXXX');
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('123456');
WARN:Bad input data for type oidname
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('123456,abcdefghijklmnopqrsutvwyz');
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('');
WARN:Bad input data for type oidname
QUERY: INSERT INTO OIDNAME_TBL(f1) VALUES ('asdfasd');
WARN:Bad input data for type oidname
QUERY: SELECT '' AS four, OIDNAME_TBL.*;
four  f1                                
----- --------------------------------- 
      1234,abcd                         
      1235,efgh                         
      987,XXXX                          
      123456,abcdefghijklmnopqrsutvwyz  
QUERY: SELECT '' AS one, o.* FROM OIDNAME_TBL o WHERE o.f1 = '1234,abcd';
one  f1         
---- ---------- 
     1234,abcd  
QUERY: SELECT '' AS three, o.* FROM OIDNAME_TBL o WHERE o.f1 <> '1234,abcd';
three  f1                                
------ --------------------------------- 
       1235,efgh                         
       987,XXXX                          
       123456,abcdefghijklmnopqrsutvwyz  
QUERY: SELECT '' AS two, o.* FROM OIDNAME_TBL o WHERE o.f1 <= '1234,abcd';
two  f1         
---- ---------- 
     1234,abcd  
     987,XXXX   
QUERY: SELECT '' AS one, o.* FROM OIDNAME_TBL o WHERE o.f1 < '1234,abcd';
one  f1        
---- --------- 
     987,XXXX  
QUERY: SELECT '' AS three, o.* FROM OIDNAME_TBL o WHERE o.f1 >= '1234,abcd';
three  f1                                
------ --------------------------------- 
       1234,abcd                         
       1235,efgh                         
       123456,abcdefghijklmnopqrsutvwyz  
QUERY: SELECT '' AS two, o.* FROM OIDNAME_TBL o WHERE o.f1 > '1234,abcd';
two  f1                                
---- --------------------------------- 
     1235,efgh                         
     123456,abcdefghijklmnopqrsutvwyz  
QUERY: CREATE TABLE OIDINT2_TBL(f1 oidint2);
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('1234/9873');
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('1235/9873');
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('987/-1234');
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('123456');
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('123456/123456');
WARN:pg_atoi: error reading "123456": Result too large
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('');
QUERY: INSERT INTO OIDINT2_TBL(f1) VALUES ('asdfasd');
WARN:pg_atoi: error in "asdfasd": can't parse "asdfasd"
QUERY: SELECT '' AS five, OIDINT2_TBL.*;
five  f1         
----- ---------- 
      1234/9873  
      1235/9873  
      987/-1234  
      123456/0   
      0/0        
QUERY: SELECT '' AS one, o.* FROM OIDINT2_TBL o WHERE o.f1 = '1235/9873';
one  f1         
---- ---------- 
     1235/9873  
QUERY: SELECT '' AS four, o.* FROM OIDINT2_TBL o WHERE o.f1 <> '1235/9873';
four  f1         
----- ---------- 
      1234/9873  
      987/-1234  
      123456/0   
      0/0        
QUERY: SELECT '' AS four, o.* FROM OIDINT2_TBL o WHERE o.f1 <= '1235/9873';
four  f1         
----- ---------- 
      1234/9873  
      1235/9873  
      987/-1234  
      0/0        
QUERY: SELECT '' AS three, o.* FROM OIDINT2_TBL o WHERE o.f1 < '1235/9873';
three  f1         
------ ---------- 
       1234/9873  
       987/-1234  
       0/0        
QUERY: SELECT '' AS two, o.* FROM OIDINT2_TBL o WHERE o.f1 >= '1235/9873';
two  f1         
---- ---------- 
     1235/9873  
     123456/0   
QUERY: SELECT '' AS one, o.* FROM OIDINT2_TBL o WHERE o.f1 > '1235/9873';
one  f1        
---- --------- 
     123456/0  
QUERY: CREATE TABLE OIDINT4_TBL(f1 oidint4);
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('1234/9873');
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('1235/9873');
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('987/-1234');
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('123456');
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('123456/1234568901234567890');
WARN:pg_atoi: error reading "1234568901234567890": Result too large
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('');
QUERY: INSERT INTO OIDINT4_TBL(f1) VALUES ('asdfasd');
WARN:pg_atoi: error in "asdfasd": can't parse "asdfasd"
QUERY: SELECT '' AS five, OIDINT4_TBL.*;
five  f1         
----- ---------- 
      1234/9873  
      1235/9873  
      987/-1234  
      123456/0   
      0/0        
QUERY: SELECT '' AS one, o.* FROM OIDINT4_TBL o WHERE o.f1 = '1235/9873';
one  f1         
---- ---------- 
     1235/9873  
QUERY: SELECT '' AS four, o.* FROM OIDINT4_TBL o WHERE o.f1 <> '1235/9873';
four  f1         
----- ---------- 
      1234/9873  
      987/-1234  
      123456/0   
      0/0        
QUERY: SELECT '' AS four, o.* FROM OIDINT4_TBL o WHERE o.f1 <= '1235/9873';
four  f1         
----- ---------- 
      1234/9873  
      1235/9873  
      987/-1234  
      0/0        
QUERY: SELECT '' AS three, o.* FROM OIDINT4_TBL o WHERE o.f1 < '1235/9873';
three  f1         
------ ---------- 
       1234/9873  
       987/-1234  
       0/0        
QUERY: SELECT '' AS two, o.* FROM OIDINT4_TBL o WHERE o.f1 >= '1235/9873';
two  f1         
---- ---------- 
     1235/9873  
     123456/0   
QUERY: SELECT '' AS one, o.* FROM OIDINT4_TBL o WHERE o.f1 > '1235/9873';
one  f1        
---- --------- 
     123456/0  
QUERY: CREATE TABLE POINT_TBL(f1 point);
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(0.0,0.0)');
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(-10.0,0.0)');
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(-3.0,4.0)');
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(5.1, 34.5)');
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(-5.0,-12.0)');
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('asdfasdf');
WARN:Bad point external representation 'asdfasdf'
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('10.0,10.0');
WARN:Bad point external representation '10.0,10.0'
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(10.0 10.0)');
WARN:Bad point external representation '(10.0 10.0)'
QUERY: INSERT INTO POINT_TBL(f1) VALUES ('(10.0,10.0');
WARN:Bad point external representation '(10.0,10.0'
QUERY: SELECT '' AS five, POINT_TBL.*;
five  f1          
----- ----------- 
      (0,0)       
      (-10,0)     
      (-3,4)      
      (5.1,34.5)  
      (-5,-12)    
QUERY: SELECT '' AS three, p.* FROM POINT_TBL p WHERE p.f1 !< '(0.0, 0.0)';
three  f1        
------ --------- 
       (-10,0)   
       (-3,4)    
       (-5,-12)  
QUERY: SELECT '' AS three, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' !> p.f1;
three  f1        
------ --------- 
       (-10,0)   
       (-3,4)    
       (-5,-12)  
QUERY: SELECT '' AS one, p.* FROM POINT_TBL p WHERE '(0.0,0.0)' !^ p.f1;
one  f1        
---- --------- 
     (-5,-12)  
QUERY: SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 !| '(0.0, 0.0)';
one  f1        
---- --------- 
     (-5,-12)  
QUERY: SELECT '' AS one, p.* FROM POINT_TBL p WHERE p.f1 =|= '(5.1, 34.5)';
one  f1          
---- ----------- 
     (5.1,34.5)  
QUERY: SELECT '' AS two, p.* FROM POINT_TBL p
   WHERE p.f1 ===> '(0,0,100,100)';
two  f1          
---- ----------- 
     (0,0)       
     (5.1,34.5)  
QUERY: SELECT '' AS three, p.* FROM POINT_TBL p
   WHERE not on_pb(p.f1,'(0,0,100,100)'::box);
three  f1        
------ --------- 
       (-10,0)   
       (-3,4)    
       (-5,-12)  
QUERY: SELECT '' AS two, p.* FROM POINT_TBL p
   WHERE on_ppath(p.f1,'(0,3,0,0,-10,0,-10,10)'::path);
two  f1       
---- -------- 
     (0,0)    
     (-10,0)  
QUERY: SELECT '' AS five, p.f1, p.f1 <===> '(0,0)' AS dist FROM POINT_TBL p;
five  f1          dist  
----- ----------- ----- 
      (0,0)       0     
      (-10,0)     10    
      (-3,4)      5     
      (5.1,34.5)  34    
      (-5,-12)    13    
QUERY: SELECT '' AS twentyfive, p1.f1, p2.f1, p1.f1 <===> p2.f1 AS dist
   FROM POINT_TBL p1, POINT_TBL p2;
twentyfive  f1          f1          dist  
----------- ----------- ----------- ----- 
            (0,0)       (0,0)       0     
            (-10,0)     (0,0)       10    
            (-3,4)      (0,0)       5     
            (5.1,34.5)  (0,0)       34    
            (-5,-12)    (0,0)       13    
            (0,0)       (-10,0)     10    
            (-10,0)     (-10,0)     0     
            (-3,4)      (-10,0)     8     
            (5.1,34.5)  (-10,0)     37    
            (-5,-12)    (-10,0)     13    
            (0,0)       (-3,4)      5     
            (-10,0)     (-3,4)      8     
            (-3,4)      (-3,4)      0     
            (5.1,34.5)  (-3,4)      31    
            (-5,-12)    (-3,4)      16    
            (0,0)       (5.1,34.5)  34    
            (-10,0)     (5.1,34.5)  37    
            (-3,4)      (5.1,34.5)  31    
            (5.1,34.5)  (5.1,34.5)  0     
            (-5,-12)    (5.1,34.5)  47    
            (0,0)       (-5,-12)    13    
            (-10,0)     (-5,-12)    13    
            (-3,4)      (-5,-12)    16    
            (5.1,34.5)  (-5,-12)    47    
            (-5,-12)    (-5,-12)    0     
QUERY: SELECT '' AS twenty, p1.f1, p2.f1
   FROM POINT_TBL p1, POINT_TBL p2
   WHERE (p1.f1 <===> p2.f1) > 3;
twenty  f1          f1          
------- ----------- ----------- 
        (-10,0)     (0,0)       
        (-3,4)      (0,0)       
        (5.1,34.5)  (0,0)       
        (-5,-12)    (0,0)       
        (0,0)       (-10,0)     
        (-3,4)      (-10,0)     
        (5.1,34.5)  (-10,0)     
        (-5,-12)    (-10,0)     
        (0,0)       (-3,4)      
        (-10,0)     (-3,4)      
        (5.1,34.5)  (-3,4)      
        (-5,-12)    (-3,4)      
        (0,0)       (5.1,34.5)  
        (-10,0)     (5.1,34.5)  
        (-3,4)      (5.1,34.5)  
        (-5,-12)    (5.1,34.5)  
        (0,0)       (-5,-12)    
        (-10,0)     (-5,-12)    
        (-3,4)      (-5,-12)    
        (5.1,34.5)  (-5,-12)    
QUERY: SELECT '' AS ten, p1.f1, p2.f1
   FROM POINT_TBL p1, POINT_TBL p2
   WHERE (p1.f1 <===> p2.f1) > 3 and
	p1.f1 !< p2.f1;
ten  f1        f1          
---- --------- ----------- 
     (-10,0)   (0,0)       
     (-3,4)    (0,0)       
     (-5,-12)  (0,0)       
     (-10,0)   (-3,4)      
     (-5,-12)  (-3,4)      
     (0,0)     (5.1,34.5)  
     (-10,0)   (5.1,34.5)  
     (-3,4)    (5.1,34.5)  
     (-5,-12)  (5.1,34.5)  
     (-10,0)   (-5,-12)    
QUERY: SELECT '' AS two, p1.f1, p2.f1
   FROM POINT_TBL p1, POINT_TBL p2
   WHERE (p1.f1 <===> p2.f1) > 3 and
	p1.f1 !< p2.f1 and
	p1.f1 !^ p2.f1;
two  f1       f1        
---- -------- --------- 
     (-3,4)   (0,0)     
     (-10,0)  (-5,-12)  
QUERY: CREATE TABLE POLYGON_TBL(f1 polygon);
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(2.0,2.0,0.0,0.0,4.0,0.0)');
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(3.0,3.0,1.0,1.0,3.0,0.0)');
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,0.0)');
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,0.0,1.0,1.0)');
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('0.0');
WARN:Bad polygon external representation '0.0'
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0 0.0');
WARN:Bad polygon external representation '(0.0 0.0'
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2)');
WARN:Bad polygon external representation '(0,1,2)'
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('(0,1,2,3');
WARN:Bad polygon external representation '(0,1,2,3'
QUERY: INSERT INTO POLYGON_TBL(f1) VALUES ('asdf');
WARN:Bad polygon external representation 'asdf'
QUERY: SELECT '' AS four, POLYGON_TBL.*;
four  f1                                                                               
----- -------------------------------------------------------------------------------- 
      (           2,           2,           0,           0,           4,           0)  
      (           3,           3,           1,           1,           3,           0)  
      (           0,           0)                                                      
      (           0,           0,           1,           1)                            
QUERY: SELECT '' AS three, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 && '(3.0,3.0,1.0,1.0,3.0,0.0)';
three  f1                                                                               
------ -------------------------------------------------------------------------------- 
       (           2,           2,           0,           0,           4,           0)  
       (           3,           3,           1,           1,           3,           0)  
       (           0,           0,           1,           1)                            
QUERY: SELECT '' AS four, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 &< '(3.0,3.0,1.0,1.0,3.0,0.0)';
four  f1                                                                               
----- -------------------------------------------------------------------------------- 
      (           2,           2,           0,           0,           4,           0)  
      (           3,           3,           1,           1,           3,           0)  
      (           0,           0)                                                      
      (           0,           0,           1,           1)                            
QUERY: SELECT '' AS two, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 &> '(3.0,3.0,1.0,1.0,3.0,0.0)';
two  f1                                                                               
---- -------------------------------------------------------------------------------- 
     (           2,           2,           0,           0,           4,           0)  
     (           3,           3,           1,           1,           3,           0)  
QUERY: SELECT '' AS one, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 << '(3.0,3.0,1.0,1.0,3.0,0.0)';
one  f1                           
---- ---------------------------- 
     (           0,           0)  
QUERY: SELECT '' AS zero, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 >> '(3.0,3.0,1.0,1.0,3.0,0.0)';
zero  f1  
----- --- 
QUERY: SELECT '' AS one, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 @ '(3.0,3.0,1.0,1.0,3.0,0.0)';
one  f1                                                                               
---- -------------------------------------------------------------------------------- 
     (           3,           3,           1,           1,           3,           0)  
QUERY: SELECT '' AS one, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 ~= '(3.0,3.0,1.0,1.0,3.0,0.0)';
one  f1                                                                               
---- -------------------------------------------------------------------------------- 
     (           3,           3,           1,           1,           3,           0)  
QUERY: SELECT '' AS one, p.*
   FROM POLYGON_TBL p
   WHERE p.f1 ~ '(3.0,3.0,1.0,1.0,3.0,0.0)';
one  f1                                                                               
---- -------------------------------------------------------------------------------- 
     (           3,           3,           1,           1,           3,           0)  
QUERY: SELECT 'char 16 string'::char16 = 'char 16 string '::char16 AS false;
false  
------ 
f      
QUERY: SELECT 'c'::char = 'c'::char AS true;
true  
----- 
t     
QUERY: SELECT 'this is a text string'::text = 'this is a text string'::text AS true;
true  
----- 
t     
QUERY: SELECT 'this is a text string'::text = 'this is a text strin'::text AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon << '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon &< '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS true;
true  
----- 
t     
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon &> '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS true;
true  
----- 
t     
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon >> '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon @ '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon ~ '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon ~= '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS false;
false  
------ 
f      
QUERY: SELECT '(2.0,2.0,0.0,0.0,4.0,0.0)'::polygon && '(3.0,3.0,1.0,1.0,3.0,0.0)'::polygon AS true;
true  
----- 
t     
QUERY: SELECT onek.* WHERE onek.unique1 < 10;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
0        998      0    0     0    0       0        0         0            0          0         0    1     AAAAAA    KMBAAA    OOOOxx   
1        214      1    1     1    1       1        1         1            1          1         2    3     BAAAAA    GIAAAA    OOOOxx   
2        326      0    2     2    2       2        2         2            2          2         4    5     CAAAAA    OMAAAA    OOOOxx   
3        431      1    3     3    3       3        3         3            3          3         6    7     DAAAAA    PQAAAA    VVVVxx   
4        833      0    0     4    4       4        4         4            4          4         8    9     EAAAAA    BGBAAA    HHHHxx   
5        541      1    1     5    5       5        5         5            5          5         10   11    FAAAAA    VUAAAA    HHHHxx   
6        978      0    2     6    6       6        6         6            6          6         12   13    GAAAAA    QLBAAA    OOOOxx   
7        647      1    3     7    7       7        7         7            7          7         14   15    HAAAAA    XYAAAA    VVVVxx   
8        653      0    0     8    8       8        8         8            8          8         16   17    IAAAAA    DZAAAA    HHHHxx   
9        49       1    1     9    9       9        9         9            9          9         18   19    JAAAAA    XBAAAA    HHHHxx   
QUERY: SELECT onek.unique1, onek.stringu1
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >;
unique1  stringu1  
-------- --------- 
19       TAAAAA    
18       SAAAAA    
17       RAAAAA    
16       QAAAAA    
15       PAAAAA    
14       OAAAAA    
13       NAAAAA    
12       MAAAAA    
11       LAAAAA    
10       KAAAAA    
9        JAAAAA    
8        IAAAAA    
7        HAAAAA    
6        GAAAAA    
5        FAAAAA    
4        EAAAAA    
3        DAAAAA    
2        CAAAAA    
1        BAAAAA    
0        AAAAAA    
QUERY: SELECT onek.unique1, onek.stringu1
   WHERE onek.unique1 > 980
   ORDER BY stringu1 using <;
unique1  stringu1  
-------- --------- 
988      AMAAAA    
989      BMAAAA    
990      CMAAAA    
991      DMAAAA    
992      EMAAAA    
993      FMAAAA    
994      GMAAAA    
995      HMAAAA    
996      IMAAAA    
997      JMAAAA    
998      KMAAAA    
999      LMAAAA    
981      TLAAAA    
982      ULAAAA    
983      VLAAAA    
984      WLAAAA    
985      XLAAAA    
986      YLAAAA    
987      ZLAAAA    
QUERY: SELECT onek.unique1, onek.string4
   WHERE onek.unique1 > 980
   ORDER BY string4 using <, unique1 using >;
unique1  string4  
-------- -------- 
999      AAAAxx   
995      AAAAxx   
983      AAAAxx   
982      AAAAxx   
981      AAAAxx   
998      HHHHxx   
997      HHHHxx   
993      HHHHxx   
990      HHHHxx   
986      HHHHxx   
996      OOOOxx   
991      OOOOxx   
988      OOOOxx   
987      OOOOxx   
985      OOOOxx   
994      VVVVxx   
992      VVVVxx   
989      VVVVxx   
984      VVVVxx   
QUERY: SELECT onek.unique1, onek.string4
   WHERE onek.unique1 > 980
   ORDER BY string4 using >, unique1 using <;
unique1  string4  
-------- -------- 
984      VVVVxx   
989      VVVVxx   
992      VVVVxx   
994      VVVVxx   
985      OOOOxx   
987      OOOOxx   
988      OOOOxx   
991      OOOOxx   
996      OOOOxx   
986      HHHHxx   
990      HHHHxx   
993      HHHHxx   
997      HHHHxx   
998      HHHHxx   
981      AAAAxx   
982      AAAAxx   
983      AAAAxx   
995      AAAAxx   
999      AAAAxx   
QUERY: SELECT onek.unique1, onek.string4
   WHERE onek.unique1 < 20
   ORDER BY unique1 using >, string4 using <;
unique1  string4  
-------- -------- 
19       OOOOxx   
18       VVVVxx   
17       HHHHxx   
16       OOOOxx   
15       VVVVxx   
14       AAAAxx   
13       OOOOxx   
12       AAAAxx   
11       OOOOxx   
10       AAAAxx   
9        HHHHxx   
8        HHHHxx   
7        VVVVxx   
6        OOOOxx   
5        HHHHxx   
4        HHHHxx   
3        VVVVxx   
2        OOOOxx   
1        OOOOxx   
0        OOOOxx   
QUERY: SELECT onek.unique1, onek.string4
   WHERE onek.unique1 < 20
   ORDER BY unique1 using <, string4 using >;
unique1  string4  
-------- -------- 
0        OOOOxx   
1        OOOOxx   
2        OOOOxx   
3        VVVVxx   
4        HHHHxx   
5        HHHHxx   
6        OOOOxx   
7        VVVVxx   
8        HHHHxx   
9        HHHHxx   
10       AAAAxx   
11       OOOOxx   
12       AAAAxx   
13       OOOOxx   
14       AAAAxx   
15       VVVVxx   
16       OOOOxx   
17       HHHHxx   
18       VVVVxx   
19       OOOOxx   
QUERY:     WHERE onek2.unique1 < 20
    ORDER BY unique1 using >;
WARN:parser: syntax error at or near "WHERE"

QUERY: SELECT two, stringu1, ten, string4
   INTO TABLE temp
   FROM onek;
QUERY: SELECT DISTINCT two FROM temp;
two  
---- 
0    
1    
QUERY: SELECT DISTINCT ten FROM temp;
ten  
---- 
0    
1    
2    
3    
4    
5    
6    
7    
8    
9    
QUERY: SELECT DISTINCT string4 FROM temp;
string4  
-------- 
AAAAxx   
HHHHxx   
OOOOxx   
VVVVxx   
QUERY: SELECT DISTINCT two, string4, ten
   FROM temp
   ORDER BY two using <, string4 using <, ten using <;
two  string4  ten  
---- -------- ---- 
0    AAAAxx   0    
0    AAAAxx   2    
0    AAAAxx   4    
0    AAAAxx   6    
0    AAAAxx   8    
0    HHHHxx   0    
0    HHHHxx   2    
0    HHHHxx   4    
0    HHHHxx   6    
0    HHHHxx   8    
0    OOOOxx   0    
0    OOOOxx   2    
0    OOOOxx   4    
0    OOOOxx   6    
0    OOOOxx   8    
0    VVVVxx   0    
0    VVVVxx   2    
0    VVVVxx   4    
0    VVVVxx   6    
0    VVVVxx   8    
1    AAAAxx   1    
1    AAAAxx   3    
1    AAAAxx   5    
1    AAAAxx   7    
1    AAAAxx   9    
1    HHHHxx   1    
1    HHHHxx   3    
1    HHHHxx   5    
1    HHHHxx   7    
1    HHHHxx   9    
1    OOOOxx   1    
1    OOOOxx   3    
1    OOOOxx   5    
1    OOOOxx   7    
1    OOOOxx   9    
1    VVVVxx   1    
1    VVVVxx   3    
1    VVVVxx   5    
1    VVVVxx   7    
1    VVVVxx   9    
QUERY: SELECT DISTINCT ON string4 two, string4, ten
	   FROM temp
   ORDER BY two using <, string4 using <, ten using <;
two  string4  ten  
---- -------- ---- 
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   0    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   2    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   4    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   6    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    AAAAxx   8    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   0    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   2    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   4    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   6    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    HHHHxx   8    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   0    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   2    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   4    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   6    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    OOOOxx   8    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   0    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   2    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   4    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   6    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
0    VVVVxx   8    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   1    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   3    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   5    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   7    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    AAAAxx   9    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   1    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   3    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   5    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   7    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    HHHHxx   9    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   1    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   3    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   5    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   7    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    OOOOxx   9    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   1    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   3    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   5    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   7    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
1    VVVVxx   9    
QUERY: SELECT *
   INTO TABLE temp1
   FROM temp
   WHERE onek.unique1 < 2;
QUERY: DROP TABLE temp1;
QUERY: SELECT *
   INTO TABLE temp1
   FROM temp
   WHERE onek2.unique1 < 2;
QUERY: DROP TABLE temp1;
QUERY: SELECT p.name, p.age FROM person* p;
name     age  
-------- ---- 
mike     40   
joe      20   
sally    34   
sandra   19   
alex     30   
sue      50   
denise   24   
sarah    88   
teresa   38   
nan      28   
leah     68   
wendy    78   
melissa  28   
joan     18   
mary     8    
jane     58   
liza     38   
jean     28   
jenifer  38   
juanita  58   
susan    78   
zena     98   
martie   88   
chris    78   
pat      18   
zola     58   
louise   98   
edna     18   
bertha   88   
sumi     38   
koko     88   
gina     18   
rean     48   
sharon   78   
paula    68   
julie    68   
belinda  38   
karen    48   
carina   58   
diane    18   
esther   98   
trudy    88   
fanny    8    
carmen   78   
lita     25   
pamela   48   
sandy    38   
trisha   88   
vera     78   
velma    68   
sharon   25   
sam      30   
bill     20   
fred     28   
larry    60   
jeff     23   
cim      30   
linda    19   
QUERY: SELECT p.name, p.age FROM person* p ORDER BY age using >;
name     age  
-------- ---- 
esther   98   
louise   98   
zena     98   
martie   88   
bertha   88   
trisha   88   
koko     88   
sarah    88   
trudy    88   
vera     78   
carmen   78   
chris    78   
sharon   78   
susan    78   
wendy    78   
velma    68   
leah     68   
julie    68   
paula    68   
larry    60   
carina   58   
juanita  58   
jane     58   
zola     58   
sue      50   
karen    48   
rean     48   
pamela   48   
mike     40   
jenifer  38   
sandy    38   
teresa   38   
liza     38   
belinda  38   
sumi     38   
sally    34   
alex     30   
cim      30   
sam      30   
fred     28   
nan      28   
jean     28   
melissa  28   
sharon   25   
lita     25   
denise   24   
jeff     23   
joe      20   
bill     20   
linda    19   
sandra   19   
diane    18   
edna     18   
gina     18   
joan     18   
pat      18   
fanny    8    
mary     8    
QUERY: SELECT DISTINCT p.age FROM person* p ORDER BY age using >;
age  
---- 
98   
88   
78   
68   
60   
58   
50   
48   
40   
38   
34   
30   
28   
25   
24   
23   
20   
19   
18   
8    
QUERY: SELECT hash_i4_heap.*
   WHERE hash_i4_heap.random = 843938989;
seqno  random     
------ ---------- 
15     843938989  
QUERY: SELECT hash_i4_heap.*
   WHERE hash_i4_heap.random = 66766766;
seqno  random  
------ ------- 
QUERY: SELECT hash_c16_heap.*
   WHERE hash_c16_heap.random = '1505703298'::char16;
seqno  random      
------ ----------- 
9838   1505703298  
QUERY: SELECT hash_c16_heap.*
   WHERE hash_c16_heap.random = '7777777'::char16;
seqno  random  
------ ------- 
QUERY: SELECT hash_txt_heap.*
   WHERE hash_txt_heap.random = '1351610853'::text;
seqno  random      
------ ----------- 
5677   1351610853  
QUERY: SELECT hash_txt_heap.*
   WHERE hash_txt_heap.random = '111111112222222233333333'::text;
seqno  random  
------ ------- 
QUERY: SELECT hash_f8_heap.*
   WHERE hash_f8_heap.random = '444705537'::float8;
seqno  random     
------ ---------- 
7853   444705537  
QUERY: SELECT hash_f8_heap.*
   WHERE hash_f8_heap.random = '88888888'::float8;
seqno  random  
------ ------- 
QUERY: SELECT b.*
   FROM bt_i4_heap b
   WHERE b.seqno < 1;
seqno  random      
------ ----------- 
0      1935401906  
QUERY: SELECT b.*
   FROM bt_i4_heap b
   WHERE b.seqno >= 9999;
seqno  random      
------ ----------- 
9999   1227676208  
QUERY: SELECT b.*
   FROM bt_i4_heap b
   WHERE b.seqno = 4500;
seqno  random      
------ ----------- 
4500   2080851358  
QUERY: SELECT b.*
   FROM bt_c16_heap b
   WHERE b.seqno < '1'::char16;
seqno  random      
------ ----------- 
0      1935401906  
QUERY: SELECT b.*
   FROM bt_c16_heap b
   WHERE b.seqno >= '9999'::char16;
seqno  random      
------ ----------- 
9999   1227676208  
QUERY: SELECT b.*
   FROM bt_c16_heap b
   WHERE b.seqno = '4500'::char16;
seqno  random      
------ ----------- 
4500   2080851358  
QUERY: SELECT b.*
   FROM bt_txt_heap b
   WHERE b.seqno < '1'::text;
seqno  random      
------ ----------- 
0      1935401906  
QUERY: SELECT b.*
   FROM bt_txt_heap b
   WHERE b.seqno >= '9999'::text;
seqno  random      
------ ----------- 
9999   1227676208  
QUERY: SELECT b.*
   FROM bt_txt_heap b
   WHERE b.seqno = '4500'::text;
seqno  random      
------ ----------- 
4500   2080851358  
QUERY: SELECT b.*
   FROM bt_f8_heap b
   WHERE b.seqno < '1'::float8;
seqno  random      
------ ----------- 
0      1935401906  
QUERY: SELECT b.*
   FROM bt_f8_heap b
   WHERE b.seqno >= '9999'::float8;
seqno  random      
------ ----------- 
9999   1227676208  
QUERY: SELECT b.*
   FROM bt_f8_heap b
   WHERE b.seqno = '4500'::float8;
seqno  random      
------ ----------- 
4500   2080851358  
QUERY: UPDATE onek
   SET unique1 = onek.unique1 + 1;
QUERY: UPDATE onek
   SET unique1 = onek.unique1 - 1;
QUERY: UPDATE temp
   SET stringu1 = reverse_c16(onek.stringu1)
   WHERE onek.stringu1 = 'JBAAAA' and
	  onek.stringu1 = temp.stringu1;
NOTICE:Non-functional update, only first update is performed
NOTICE:Non-functional update, only first update is performed
QUERY: UPDATE temp
   SET stringu1 = reverse_c16(onek2.stringu1)
   WHERE onek2.stringu1 = 'JCAAAA' and
	  onek2.stringu1 = temp.stringu1;
NOTICE:Non-functional update, only first update is performed
NOTICE:Non-functional update, only first update is performed
QUERY: DROP TABLE temp;
QUERY: UPDATE hash_i4_heap
   SET random = 1
   WHERE hash_i4_heap.seqno = 1492;
QUERY: SELECT h.seqno AS i1492, h.random AS i1
   FROM hash_i4_heap h
   WHERE h.random = 1;
i1492  i1  
------ --- 
1492   1   
QUERY: UPDATE hash_i4_heap
   SET seqno = 20000
   WHERE hash_i4_heap.random = 1492795354;
QUERY: SELECT h.seqno AS i20000
   FROM hash_i4_heap h
   WHERE h.random = 1492795354;
i20000  
------- 
20000   
QUERY: UPDATE hash_c16_heap
   SET random = '0123456789abcdef'::char16
   WHERE hash_c16_heap.seqno = 6543;
QUERY: SELECT h.seqno AS i6543, h.random AS c0_to_f
   FROM hash_c16_heap h
   WHERE h.random = '0123456789abcdef'::char16;
i6543  c0_to_f           
------ ----------------- 
6543   0123456789abcdef  
QUERY: UPDATE hash_c16_heap
   SET seqno = 20000
   WHERE hash_c16_heap.random = '76652222'::char16;
QUERY: SELECT h.seqno AS emptyset
   FROM hash_c16_heap h
   WHERE h.random = '76652222'::char16;
emptyset  
--------- 
QUERY: UPDATE hash_txt_heap
   SET random = '0123456789abcdefghijklmnop'::text
   WHERE hash_txt_heap.seqno = 4002;
QUERY: SELECT h.seqno AS i4002, h.random AS c0_to_p
   FROM hash_txt_heap h
   WHERE h.random = '0123456789abcdefghijklmnop'::text;
i4002  c0_to_p                     
------ --------------------------- 
4002   0123456789abcdefghijklmnop  
QUERY: UPDATE hash_txt_heap
   SET seqno = 20000
   WHERE hash_txt_heap.random = '959363399'::text;
QUERY: SELECT h.seqno AS t20000
   FROM hash_txt_heap h
   WHERE h.random = '959363399'::text;
t20000  
------- 
20000   
QUERY: UPDATE hash_f8_heap
   SET random = '-1234.1234'::float8
   WHERE hash_f8_heap.seqno = 8906;
QUERY: SELECT h.seqno AS i8096, h.random AS f1234_1234
   FROM hash_f8_heap h
   WHERE h.random = '-1234.1234'::float8;
i8096  f1234_1234  
------ ----------- 
8906   -1234.1234  
QUERY: UPDATE hash_f8_heap
   SET seqno = 20000
   WHERE hash_f8_heap.random = '488912369'::float8;
QUERY: SELECT h.seqno AS f20000
   FROM hash_f8_heap h
   WHERE h.random = '488912369'::float8;
f20000  
------- 
20000   
QUERY: COPY onek TO '/home2/jolly/pg95-1.01/src/test/regress/obj/onek.data';
QUERY: DELETE FROM onek;
QUERY: COPY onek FROM '/home2/jolly/pg95-1.01/src/test/regress/obj/onek.data';
QUERY: SELECT unique1 FROM onek WHERE unique1 < 2;
unique1  
-------- 
0        
1        
QUERY: DELETE FROM onek2;
QUERY: COPY onek2 FROM '/home2/jolly/pg95-1.01/src/test/regress/obj/onek.data';
QUERY: SELECT unique1 FROM onek2 WHERE unique1 < 2;
unique1  
-------- 
1        
0        
QUERY: COPY BINARY stud_emp TO '/home2/jolly/pg95-1.01/src/test/regress/obj/stud_emp.data';
QUERY: DELETE FROM stud_emp;
QUERY: COPY BINARY stud_emp FROM '/home2/jolly/pg95-1.01/src/test/regress/obj/stud_emp.data';
QUERY: SELECT * FROM stud_emp;
name   age  location    salary  manager  gpa  percent  
------ ---- ----------- ------- -------- ---- -------- 
jeff   23   (8,7.7)     600     sharon   3.5           
cim    30   (10.5,4.7)  400              3.4           
linda  19   (0.9,6.1)   100              2.9           
QUERY: SELECT count(*) FROM onek;
count  
------ 
1000   
QUERY: SELECT count(*) FROM onek where oidrand(onek.oid, 10);
count  
------ 
95     
QUERY: SELECT count(*) FROM onek where oidrand(onek.oid, 10);
count  
------ 
88     
QUERY: BEGIN;
QUERY: SELECT *
   INTO TABLE xacttest
   FROM aggtest;
QUERY: INSERT INTO xacttest (a, b) VALUES (777, 777.777);
QUERY: END;
QUERY: SELECT a FROM xacttest WHERE a > 100;
a    
---- 
777  
QUERY: BEGIN;
QUERY: CREATE TABLE disappear (a int4);
QUERY: DELETE FROM aggtest;
QUERY: SELECT * FROM aggtest;
a  b  
-- -- 
QUERY: ABORT;
QUERY: SELECT oid FROM pg_class WHERE relname = 'disappear';
oid  
---- 
QUERY: SELECT * FROM aggtest;
a  b  
-- -- 
QUERY: BEGIN;
QUERY: DECLARE foo1 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo2 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo3 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo4 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo5 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo6 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo7 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo8 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo9 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo10 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo11 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo12 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo13 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo14 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo15 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo16 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo17 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo18 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo19 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo20 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo21 CURSOR FOR SELECT * FROM tenk1;
QUERY: DECLARE foo22 CURSOR FOR SELECT * FROM tenk2;
QUERY: DECLARE foo23 CURSOR FOR SELECT * FROM tenk1;
QUERY: FETCH 1 in foo1;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH 2 in foo2;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
QUERY: FETCH 3 in foo3;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
QUERY: FETCH 4 in foo4;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
QUERY: FETCH 5 in foo5;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
QUERY: FETCH 6 in foo6;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
QUERY: FETCH 7 in foo7;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
QUERY: FETCH 8 in foo8;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
QUERY: FETCH 9 in foo9;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
QUERY: FETCH 10 in foo10;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
QUERY: FETCH 11 in foo11;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
QUERY: FETCH 12 in foo12;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
QUERY: FETCH 13 in foo13;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
QUERY: FETCH 14 in foo14;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
QUERY: FETCH 15 in foo15;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
QUERY: FETCH 16 in foo16;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
QUERY: FETCH 17 in foo17;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
QUERY: FETCH 18 in foo18;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
QUERY: FETCH 19 in foo19;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
QUERY: FETCH 20 in foo20;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
QUERY: FETCH 21 in foo21;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
9460     20       0    0     0    0       60       460       1460         4460       9460      120  121   WZAAAA    UAAAAA    AAAAxx   
QUERY: FETCH 22 in foo22;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
9460     20       0    0     0    0       60       460       1460         4460       9460      120  121   WZAAAA    UAAAAA    AAAAxx   
59       21       1    3     9    19      59       59        59           59         59        118  119   HCAAAA    VAAAAA    HHHHxx   
QUERY: FETCH 23 in foo23;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
9460     20       0    0     0    0       60       460       1460         4460       9460      120  121   WZAAAA    UAAAAA    AAAAxx   
59       21       1    3     9    19      59       59        59           59         59        118  119   HCAAAA    VAAAAA    HHHHxx   
8020     22       0    0     0    0       20       20        20           3020       8020      40   41    MWAAAA    WAAAAA    OOOOxx   
QUERY: FETCH backward 1 in foo23;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
59       21       1    3     9    19      59       59        59           59         59        118  119   HCAAAA    VAAAAA    HHHHxx   
QUERY: FETCH backward 2 in foo22;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
9460     20       0    0     0    0       60       460       1460         4460       9460      120  121   WZAAAA    UAAAAA    AAAAxx   
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
QUERY: FETCH backward 3 in foo21;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
6969     19       1    1     9    9       69       969       969          1969       6969      138  139   BIAAAA    TAAAAA    VVVVxx   
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
QUERY: FETCH backward 4 in foo20;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
6621     18       1    1     1    1       21       621       621          1621       6621      42   43    RUAAAA    SAAAAA    OOOOxx   
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
QUERY: FETCH backward 5 in foo19;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5785     17       1    1     5    5       85       785       1785         785        5785      170  171   NOAAAA    RAAAAA    HHHHxx   
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
QUERY: FETCH backward 6 in foo18;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5387     16       1    3     7    7       87       387       1387         387        5387      174  175   FZAAAA    QAAAAA    AAAAxx   
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
QUERY: FETCH backward 7 in foo17;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5006     15       0    2     6    6       6        6         1006         6          5006      12   13    OKAAAA    PAAAAA    VVVVxx   
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
QUERY: FETCH backward 8 in foo16;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5471     14       1    3     1    11      71       471       1471         471        5471      142  143   LCAAAA    OAAAAA    OOOOxx   
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
QUERY: FETCH backward 9 in foo15;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
6243     13       1    3     3    3       43       243       243          1243       6243      86   87    DGAAAA    NAAAAA    HHHHxx   
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
QUERY: FETCH backward 10 in foo14;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5222     12       0    2     2    2       22       222       1222         222        5222      44   45    WSAAAA    MAAAAA    AAAAxx   
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
QUERY: FETCH backward 11 in foo13;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
1504     11       0    0     4    4       4        504       1504         1504       1504      8    9     WFAAAA    LAAAAA    VVVVxx   
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
QUERY: FETCH backward 12 in foo12;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
1314     10       0    2     4    14      14       314       1314         1314       1314      28   29    OYAAAA    KAAAAA    OOOOxx   
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 13 in foo11;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
3043     9        1    3     3    3       43       43        1043         3043       3043      86   87    BNAAAA    JAAAAA    HHHHxx   
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 14 in foo10;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
4321     8        1    1     1    1       21       321       321          4321       4321      42   43    FKAAAA    IAAAAA    AAAAxx   
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 15 in foo9;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
6701     7        1    1     1    1       1        701       701          1701       6701      2    3     TXAAAA    HAAAAA    VVVVxx   
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 16 in foo8;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
5057     6        1    1     7    17      57       57        1057         57         5057      114  115   NMAAAA    GAAAAA    OOOOxx   
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 17 in foo7;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8009     5        1    1     9    9       9        9         9            3009       8009      18   19    BWAAAA    FAAAAA    HHHHxx   
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 18 in foo6;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
7164     4        0    0     4    4       64       164       1164         2164       7164      128  129   OPAAAA    EAAAAA    AAAAxx   
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 19 in foo5;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
9850     3        0    2     0    10      50       850       1850         4850       9850      100  101   WOAAAA    DAAAAA    VVVVxx   
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 20 in foo4;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
3420     2        0    0     0    0       20       420       1420         3420       3420      40   41    OBAAAA    CAAAAA    OOOOxx   
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 21 in foo3;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
1891     1        1    3     1    11      91       891       1891         1891       1891      182  183   TUAAAA    BAAAAA    HHHHxx   
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 22 in foo2;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
8800     0        0    0     0    0       0        800       800          3800       8800      0    1     MAAAAA    AAAAAA    AAAAxx   
QUERY: FETCH backward 23 in foo1;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
QUERY: CLOSE foo1;
QUERY: CLOSE foo2;
QUERY: CLOSE foo3;
QUERY: CLOSE foo4;
QUERY: CLOSE foo5;
QUERY: CLOSE foo6;
QUERY: CLOSE foo7;
QUERY: CLOSE foo8;
QUERY: CLOSE foo9;
QUERY: CLOSE foo10;
QUERY: CLOSE foo11;
QUERY: CLOSE foo12;
QUERY: end;
QUERY: EXTEND INDEX onek2_u1_prtl WHERE onek2.unique1 <= 60;
WARN:ExtendIndex: onek2_u1_prtl index not found
QUERY: BEGIN;
QUERY: DECLARE foo13 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 50;
QUERY: DECLARE foo14 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 51;
QUERY: DECLARE foo15 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 52;
QUERY: DECLARE foo16 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 53;
QUERY: DECLARE foo17 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 54;
QUERY: DECLARE foo18 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 55;
QUERY: DECLARE foo19 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 56;
QUERY: DECLARE foo20 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 57;
QUERY: DECLARE foo21 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 58;
QUERY: DECLARE foo22 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 59;
QUERY: DECLARE foo23 CURSOR FOR
   SELECT * FROM onek WHERE unique1 = 60;
QUERY: DECLARE foo24 CURSOR FOR
   SELECT * FROM onek2 WHERE unique1 = 50;
QUERY: DECLARE foo25 CURSOR FOR
   SELECT * FROM onek2 WHERE unique1 = 60;
QUERY: FETCH all in foo13;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
50       253      0    2     0    10      0        50        50           50         50        0    1     YBAAAA    TJAAAA    HHHHxx   
QUERY: FETCH all in foo14;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
51       76       1    3     1    11      1        51        51           51         51        2    3     ZBAAAA    YCAAAA    AAAAxx   
QUERY: FETCH all in foo15;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
52       985      0    0     2    12      2        52        52           52         52        4    5     ACAAAA    XLBAAA    HHHHxx   
QUERY: FETCH all in foo16;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
53       196      1    1     3    13      3        53        53           53         53        6    7     BCAAAA    OHAAAA    AAAAxx   
QUERY: FETCH all in foo17;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
54       356      0    2     4    14      4        54        54           54         54        8    9     CCAAAA    SNAAAA    AAAAxx   
QUERY: FETCH all in foo18;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
55       627      1    3     5    15      5        55        55           55         55        10   11    DCAAAA    DYAAAA    VVVVxx   
QUERY: FETCH all in foo19;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
56       54       0    0     6    16      6        56        56           56         56        12   13    ECAAAA    CCAAAA    OOOOxx   
QUERY: FETCH all in foo20;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
57       942      1    1     7    17      7        57        57           57         57        14   15    FCAAAA    GKBAAA    OOOOxx   
QUERY: FETCH all in foo21;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
58       114      0    2     8    18      8        58        58           58         58        16   17    GCAAAA    KEAAAA    OOOOxx   
QUERY: FETCH all in foo22;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
59       593      1    3     9    19      9        59        59           59         59        18   19    HCAAAA    VWAAAA    HHHHxx   
QUERY: FETCH all in foo23;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
60       483      0    0     0    0       0        60        60           60         60        0    1     ICAAAA    PSAAAA    VVVVxx   
QUERY: FETCH all in foo24;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
50       253      0    2     0    10      0        50        50           50         50        0    1     YBAAAA    TJAAAA    HHHHxx   
QUERY: FETCH all in foo25;
unique1  unique2  two  four  ten  twenty  hundred  thousand  twothousand  fivethous  tenthous  odd  even  stringu1  stringu2  string4  
-------- -------- ---- ----- ---- ------- -------- --------- ------------ ---------- --------- ---- ----- --------- --------- -------- 
60       483      0    0     0    0       0        60        60           60         60        0    1     ICAAAA    PSAAAA    VVVVxx   
QUERY: CLOSE foo13;
QUERY: CLOSE foo14;
QUERY: CLOSE foo15;
QUERY: CLOSE foo16;
QUERY: CLOSE foo17;
QUERY: CLOSE foo18;
QUERY: CLOSE foo19;
QUERY: CLOSE foo20;
QUERY: CLOSE foo21;
QUERY: CLOSE foo22;
QUERY: CLOSE foo23;
QUERY: CLOSE foo24;
QUERY: CLOSE foo25;
QUERY: END;
QUERY: PURGE hash_f8_heap BEFORE 'now';		-- absolute time
SELECT count(*) AS has_10002 FROM hash_f8_heap[,] h;
QUERY: VACUUM hash_f8_heap;
QUERY: SELECT count(*) AS has_10000 FROM hash_f8_heap[,] h;
has_10000  
---------- 
10002      
QUERY: PURGE hash_i4_heap AFTER '@ 1 second ago';	-- relative time
SELECT count(*) AS has_10002 FROM hash_i4_heap[,] h;
QUERY: VACUUM hash_i4_heap;
QUERY: SELECT count(*) AS has_10000 FROM hash_i4_heap[,] h;
has_10000  
---------- 
10002      
QUERY: CREATE TABLE temp (initial int4);
QUERY: ALTER TABLE temp ADD COLUMN a int4;
QUERY: ALTER TABLE temp ADD COLUMN b char16;
QUERY: ALTER TABLE temp ADD COLUMN c text;
QUERY: ALTER TABLE temp ADD COLUMN d float8;
QUERY: ALTER TABLE temp ADD COLUMN e float4;
QUERY: ALTER TABLE temp ADD COLUMN f int2;
QUERY: ALTER TABLE temp ADD COLUMN g polygon;
QUERY: ALTER TABLE temp ADD COLUMN h abstime;
QUERY: ALTER TABLE temp ADD COLUMN i char;
QUERY: ALTER TABLE temp ADD COLUMN j abstime[];
QUERY: ALTER TABLE temp ADD COLUMN k dt;
WARN:type name lookup of dt failed
QUERY: ALTER TABLE temp ADD COLUMN l tid;
QUERY: ALTER TABLE temp ADD COLUMN m xid;
QUERY: ALTER TABLE temp ADD COLUMN n oid8;
QUERY: ALTER TABLE temp ADD COLUMN p smgr;
QUERY: ALTER TABLE temp ADD COLUMN q point;
QUERY: ALTER TABLE temp ADD COLUMN r lseg;
QUERY: ALTER TABLE temp ADD COLUMN s path;
QUERY: ALTER TABLE temp ADD COLUMN t box;
QUERY: ALTER TABLE temp ADD COLUMN u tinterval;
QUERY: ALTER TABLE temp ADD COLUMN v oidint4;
QUERY: ALTER TABLE temp ADD COLUMN w oidname;
QUERY: ALTER TABLE temp ADD COLUMN x float8[];
QUERY: ALTER TABLE temp ADD COLUMN y float4[];
QUERY: ALTER TABLE temp ADD COLUMN z int2[];
QUERY: INSERT INTO temp (a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u,
	v, w, x, y, z)
   VALUES (4, 'char16', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)',
        'Mon May  1 00:30:30 PDT 1995', 'c', '{Mon May  1 00:30:30 PDT 1995, Monday Aug 24 14:43:07 1992 PDT, epoch}',
	314159, '(1,1)', 512,
	'1 2 3 4 5 6 7 8', 'magnetic disk', '(1.1,1.1)', '(4.1,4.1,3.1,3.1)',
	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)', '["current" "infinity"]',
	'1/3', '1,char16', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}');
WARN:Relation temp does not have attribute k

QUERY: SELECT * FROM temp;
initial  a  b  c  d  e  f  g  h  i  j  l  m  n  p  q  r  s  t  u  v  w  x  y  z  
-------- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
QUERY: DROP TABLE temp;
QUERY: CREATE TABLE temp (
	initial 	int4
) ARCHIVE = light;
QUERY: ALTER TABLE temp ADD COLUMN a int4;
QUERY: ALTER TABLE temp ADD COLUMN b char16;
QUERY: ALTER TABLE temp ADD COLUMN c text;
QUERY: ALTER TABLE temp ADD COLUMN d float8;
QUERY: ALTER TABLE temp ADD COLUMN e float4;
QUERY: ALTER TABLE temp ADD COLUMN f int2;
QUERY: ALTER TABLE temp ADD COLUMN g polygon;
QUERY: ALTER TABLE temp ADD COLUMN h abstime;
QUERY: ALTER TABLE temp ADD COLUMN i char;
QUERY: ALTER TABLE temp ADD COLUMN j abstime[];
QUERY: ALTER TABLE temp ADD COLUMN k dt;
WARN:type name lookup of dt failed
QUERY: ALTER TABLE temp ADD COLUMN l tid;
QUERY: ALTER TABLE temp ADD COLUMN m xid;
QUERY: ALTER TABLE temp ADD COLUMN n oid8;
QUERY: ALTER TABLE temp ADD COLUMN p smgr;
QUERY: ALTER TABLE temp ADD COLUMN q point;
QUERY: ALTER TABLE temp ADD COLUMN r lseg;
QUERY: ALTER TABLE temp ADD COLUMN s path;
QUERY: ALTER TABLE temp ADD COLUMN t box;
QUERY: ALTER TABLE temp ADD COLUMN u tinterval;
QUERY: ALTER TABLE temp ADD COLUMN v oidint4;
QUERY: ALTER TABLE temp ADD COLUMN w oidname;
QUERY: ALTER TABLE temp ADD COLUMN x float8[];
QUERY: ALTER TABLE temp ADD COLUMN y float4[];
QUERY: ALTER TABLE temp ADD COLUMN z int2[];
QUERY: INSERT INTO temp (a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u,
	v, w, x, y, z)
   VALUES (4, 'char16', 'text', 4.1, 4.1, 2, '(4.1,4.1,3.1,3.1)',
	'Mon May  1 00:30:30 PDT 1995', 'c', '{Mon May  1 00:30:30 PDT 1995, Monday Aug 24 14:43:07 1992 PDT, epoch}',
	 314159, '(1,1)', 512,
	'1 2 3 4 5 6 7 8', 'magnetic disk', '(1.1,1.1)', '(4.1,4.1,3.1,3.1)',
	'(0,2,4.1,4.1,3.1,3.1)', '(4.1,4.1,3.1,3.1)', '["current" "infinity"]',
	'1/3', '1,char16', '{1.0,2.0,3.0,4.0}', '{1.0,2.0,3.0,4.0}', '{1,2,3,4}');
WARN:Relation temp does not have attribute k

QUERY: SELECT * FROM temp[,];
initial  a  b  c  d  e  f  g  h  i  j  l  m  n  p  q  r  s  t  u  v  w  x  y  z  
-------- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
QUERY: DROP TABLE temp;
QUERY: ALTER TABLE tenk1 RENAME TO ten_k;
QUERY: SELECT unique1 FROM ten_k WHERE unique1 < 20;
unique1  
-------- 
0        
1        
2        
3        
4        
5        
6        
7        
8        
9        
10       
11       
12       
13       
14       
15       
16       
17       
18       
19       
QUERY: SELECT unique2 FROM ten_k WHERE unique2 < 20;
unique2  
-------- 
0        
1        
2        
3        
4        
5        
6        
7        
8        
9        
10       
11       
12       
13       
14       
15       
16       
17       
18       
19       
QUERY: SELECT hundred FROM ten_k WHERE hundred = 50;
hundred  
-------- 
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
50       
QUERY: ALTER TABLE ten_k RENAME TO tenk1;
QUERY: SELECT unique1 FROM tenk1 WHERE unique1 < 5;
unique1  
-------- 
0        
1        
2        
3        
4        
QUERY: SELECT * from street;
name                                thepath                                                                                                                                                                                                                                                                                                                cname      
----------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------- 
Whitlock Creek                      (0,2,-121.747,37.9128,-121.733,37)                                                                                                                                                                                                                                                                                     Oakland    
Warm Springs                  Blvd  (0,2,-121.934,37,-121.934,37.97)                                                                                                                                                                                                                                                                                       Oakland    
Tissiack                      Way   (0,2,-121.92,37,-121.921,37.995)                                                                                                                                                                                                                                                                                       Oakland    
Mission                       Blvd  (0,3,-121.919,37,-121.919,37.976,-121.92,37.975)                                                                                                                                                                                                                                                                       Oakland    
Theresa                       Way   (0,2,-121.729,37.906,-121.728,37.899)                                                                                                                                                                                                                                                                                  Oakland    
Cowing                        Road  (0,2,-122,37.934,-121.977,37.782)                                                                                                                                                                                                                                                                                      Oakland    
Rosedale                      Ct    (0,2,-121.923,37.9,-121.924,37.897)                                                                                                                                                                                                                                                                                    Oakland    
Saginaw                       Ct    (0,2,-121.88,37.898,-121.881,37.901)                                                                                                                                                                                                                                                                                   Oakland    
Pimlico                       Dr    (0,2,-121.862,37.998,-121.862,37.008)                                                                                                                                                                                                                                                                                  Oakland    
Livermore                     Ave   (0,2,-121.769,37.448,-121.769,37.375)                                                                                                                                                                                                                                                                                  Oakland    
Arroyo Las Positas                  (0,2,-121.797,37.997,-121.796,37.005)                                                                                                                                                                                                                                                                                  Oakland    
Arlington                     Road  (0,2,-121.796,37.898,-121.796,37.906)                                                                                                                                                                                                                                                                                  Oakland    
Juniper                       St    (0,2,-121.782,37.897,-121.781,37.9)                                                                                                                                                                                                                                                                                    Oakland    
Fairview                      Ave   (0,2,-121.999,37.428,-121.986,37.351)                                                                                                                                                                                                                                                                                  Oakland    
Sunol Ridge                   Trl   (0,2,-121.942,37.455,-121.934,37.38)                                                                                                                                                                                                                                                                                   Oakland    
Vallecitos                    Road  (0,2,-121.87,37.916,-121.87,37.891)                                                                                                                                                                                                                                                                                    Oakland    
Driscoll                      Road  (0,2,-121.948,37.403,-121.948,37.3999)                                                                                                                                                                                                                                                                                 Oakland    
Apricot                       Lane  (0,2,-121.947,37.401,-121.946,37.392)                                                                                                                                                                                                                                                                                  Oakland    
Calaveras Creek                     (0,2,-121.82,37.035,-121.821,37.931)                                                                                                                                                                                                                                                                                   Oakland    
Livermore                     Ave   (0,2,-121.773,37.9909,-121.773,37.001)                                                                                                                                                                                                                                                                                 Oakland    
Sp Railroad                         (0,2,-121.894,37.9901,-121.897,37.016)                                                                                                                                                                                                                                                                                 Oakland    
Tassajara Creek                     (0,2,-121.879,37.989,-121.878,37.015)                                                                                                                                                                                                                                                                                  Oakland    
Andrea                        Cir   (0,2,-121.733,37.8864,-121.733,37.9062)                                                                                                                                                                                                                                                                                Oakland    
I- 580                              (0,5,-122.018,37.019,-122.001,37.032,-121.979,37.983,-121.958,37.984,-121.957,37.986)                                                                                                                                                                                                                                  Oakland    
I- 580                        Ramp  (0,8,-121.937,37.986,-121.936,37.9883,-121.935,37.997,-121.935,37.0003,-121.935,37.006,-121.934,37.0003,-121.933,37.997,-121.932,37.989)                                                                                                                                                                               Oakland    
I- 580                              (0,3,-121.932,37.989,-121.924,37.006,-121.922,37.014)                                                                                                                                                                                                                                                                  Oakland    
I- 580/I-680                  Ramp  (1,2,-121.921,37.988,-121.919,37.016)                                                                                                                                                                                                                                                                                  Oakland    
I- 580                        Ramp  (0,4,-121.904,37.998,-121.904,37.013,-121.903,37.0174,-121.903,37.018)                                                                                                                                                                                                                                                 Oakland    
I- 580                        Ramp  (0,3,-121.874,37.014,-121.872,37.999,-121.871,37.999)                                                                                                                                                                                                                                                                  Oakland    
I- 580                        Ramp  (0,5,-121.852,37.011,-121.848,37.999,-121.848,37.999,-121.846,37.01,-121.846,37.011)                                                                                                                                                                                                                                   Oakland    
I- 680                              (0,7,-121.91,37.715,-121.911,37.7468,-121.912,37.764,-121.912,37.776,-121.917,37.905,-121.919,37.957,-121.921,37.988)                                                                                                                                                                                                  Oakland    
I- 680                        Ramp  (0,5,-121.883,37.376,-121.883,37.392,-121.883,37.4,-121.883,37.402,-121.885,37.422)                                                                                                                                                                                                                                    Oakland    
I- 680                        Ramp  (0,4,-121.92,37.438,-121.922,37.424,-121.924,37.408,-121.925,37.392)                                                                                                                                                                                                                                                   Oakland    
I- 680                        Ramp  (0,3,-121.924,37.402,-121.923,37.395,-121.923,37.399)                                                                                                                                                                                                                                                                  Oakland    
I- 680                              (1,16,-121.939,37.15,-121.939,37.145,-121.937,37.125,-121.934,37.0764,-121.934,37.0709,-121.934,37.068,-121.933,37.0614,-121.933,37.057,-121.932,37.0511,-121.932,37.0468,-121.93,37.027,-121.927,37,-121.927,37.998,-121.922,37.96,-121.92,37.949,-121.918,37.934)                                                    Oakland    
State Hwy 84                        (0,5,-121.957,37.898,-121.957,37.8991,-121.957,37.903,-121.956,37.91,-121.955,37.919)                                                                                                                                                                                                                                  Oakland    
Whitlock Creek                      (0,2,-121.747,37.9128,-121.733,37)                                                                                                                                                                                                                                                                                     Oakland    
Warm Springs                  Blvd  (0,2,-121.934,37,-121.934,37.97)                                                                                                                                                                                                                                                                                       Oakland    
Tissiack                      Way   (0,2,-121.92,37,-121.921,37.995)                                                                                                                                                                                                                                                                                       Oakland    
Mission                       Blvd  (0,3,-121.919,37,-121.919,37.976,-121.92,37.975)                                                                                                                                                                                                                                                                       Oakland    
Kildare                       Road  (0,2,-122.097,37.016,-122.096,37)                                                                                                                                                                                                                                                                                      Oakland    
Ranspot                       Dr    (0,2,-122.097,37.999,-122.096,37)                                                                                                                                                                                                                                                                                      Oakland    
Butterfield                   Dr    (0,2,-122.084,37.002,-122.083,37.987)                                                                                                                                                                                                                                                                                  Oakland    
Hesperian                     Blvd  (0,3,-122.097,37.333,-122.096,37.31,-122.095,37.293)                                                                                                                                                                                                                                                                   Oakland    
Thackeray                     Ave   (0,2,-122.072,37.305,-122.072,37.298)                                                                                                                                                                                                                                                                                  Oakland    
Celia                         St    (0,2,-122.061,37.3,-122.062,37.299)                                                                                                                                                                                                                                                                                    Oakland    
Periwinkle                    Road  (0,2,-122.045,37.301,-122.045,37.2984)                                                                                                                                                                                                                                                                                 Oakland    
Bridgepointe                  Dr    (0,2,-122.051,37.305,-122.051,37.299)                                                                                                                                                                                                                                                                                  Oakland    
Crystaline                    Dr    (0,2,-121.926,37,-121.926,37.0053)                                                                                                                                                                                                                                                                                     Oakland    
Paseo Padre                   Pkwy  (0,2,-121.914,37.005,-121.914,37)                                                                                                                                                                                                                                                                                      Oakland    
Oakridge                      Road  (0,2,-121.832,37.049,-121.828,37)                                                                                                                                                                                                                                                                                      Oakland    
Railroad                      Ave   (0,3,-122.025,37.013,-122.023,37.003,-122.022,37.993)                                                                                                                                                                                                                                                                  Oakland    
Eden Creek                          (0,2,-122.022,37.0067,-122.022,37.998)                                                                                                                                                                                                                                                                                 Oakland    
I- 880                              (0,10,-122.083,37.312,-122.082,37.296,-122.081,37.285,-122.079,37.248,-122.078,37.24,-122.078,37.235,-122.077,37.2257,-122.077,37.2203,-122.076,37.215,-122.076,37.209)                                                                                                                                                Oakland    
I- 880                        Ramp  (0,5,-122.004,37.313,-122.004,37.308,-122.004,37.284,-122.001,37.287,-121.999,37.289)                                                                                                                                                                                                                                  Oakland    
I- 880                        Ramp  (0,2,-122.002,37.301,-122.002,37.293)                                                                                                                                                                                                                                                                                  Oakland    
I- 880                              (1,6,-121.967,37.075,-121.966,37.071,-121.966,37.065,-121.962,37.037,-121.957,37,-121.948,37.933)                                                                                                                                                                                                                      Oakland    
I- 680                              (1,16,-121.939,37.15,-121.939,37.145,-121.937,37.125,-121.934,37.0764,-121.934,37.0709,-121.934,37.068,-121.933,37.0614,-121.933,37.057,-121.932,37.0511,-121.932,37.0468,-121.93,37.027,-121.927,37,-121.927,37.998,-121.922,37.96,-121.92,37.949,-121.918,37.934)                                                    Oakland    
Wisconsin                     St    (0,3,-122.199,37.017,-122.198,37.998,-122.197,37.994)                                                                                                                                                                                                                                                                  Oakland    
Herrier                       St    (0,2,-122.194,37.006,-122.194,37.998)                                                                                                                                                                                                                                                                                  Oakland    
Skyline                       Blvd  (0,2,-122.174,37.01,-122.171,37.996)                                                                                                                                                                                                                                                                                   Oakland    
Coliseum                      Way   (0,2,-122.2,37.47,-122.198,37.516)                                                                                                                                                                                                                                                                                     Oakland    
Hegenberger                   Exwy  (0,2,-122.195,37.52,-122.195,37.497)                                                                                                                                                                                                                                                                                   Oakland    
Sp Railroad                         (0,2,-122.195,37.497,-122.193,37.4848)                                                                                                                                                                                                                                                                                 Oakland    
85th                          Ave   (0,2,-122.188,37.466,-122.186,37.476)                                                                                                                                                                                                                                                                                  Oakland    
E                             St    (0,3,-122.183,37.505,-122.183,37.498,-122.182,37.49)                                                                                                                                                                                                                                                                   Oakland    
D                             St    (0,2,-122.181,37.505,-122.18,37.497)                                                                                                                                                                                                                                                                                   Oakland    
Birch                         St    (0,2,-122.167,37.509,-122.166,37.492)                                                                                                                                                                                                                                                                                  Oakland    
Bancroft                      Ave   (0,3,-122.164,37.523,-122.163,37.508,-122.162,37.493)                                                                                                                                                                                                                                                                  Oakland    
Avenue 140th                        (0,2,-122.166,37.003,-122.169,37.988)                                                                                                                                                                                                                                                                                  Oakland    
Redwood                       Road  (0,2,-122.149,37.98,-122.144,37.001)                                                                                                                                                                                                                                                                                   Oakland    
98th                          Ave   (0,2,-122.157,37.498,-122.156,37.502)                                                                                                                                                                                                                                                                                  Oakland    
Cameron                       Ave   (0,2,-122.132,37.502,-122.133,37.481)                                                                                                                                                                                                                                                                                  Oakland    
Locust                        St    (0,2,-122.161,37.007,-122.159,37.987)                                                                                                                                                                                                                                                                                  Oakland    
McClure                       Ave   (0,2,-122.143,37.001,-122.144,37.998)                                                                                                                                                                                                                                                                                  Oakland    
Maubert                       Ave   (0,2,-122.111,37.009,-122.11,37.995)                                                                                                                                                                                                                                                                                   Oakland    
Ranspot                       Dr    (0,2,-122.097,37.999,-122.096,37)                                                                                                                                                                                                                                                                                      Oakland    
Butterfield                   Dr    (0,2,-122.084,37.002,-122.083,37.987)                                                                                                                                                                                                                                                                                  Oakland    
National                      Ave   (0,2,-122.119,37.5,-122.128,37.489)                                                                                                                                                                                                                                                                                    Oakland    
Broadmore                     Ave   (0,2,-122.095,37.522,-122.094,37.497)                                                                                                                                                                                                                                                                                  Oakland    
Skyline                       Dr    (0,2,-122.028,37.5,-122.028,37.498)                                                                                                                                                                                                                                                                                    Oakland    
Decoto                        Road  (0,3,-122.016,37.006,-122.016,37.002,-122.016,37.993)                                                                                                                                                                                                                                                                  Oakland    
Chapman                       Dr    (0,2,-122.042,37.504,-122.041,37.498)                                                                                                                                                                                                                                                                                  Oakland    
Charles                       St    (0,2,-122.025,37.505,-122.025,37.499)                                                                                                                                                                                                                                                                                  Oakland    
Mattos                        Dr    (0,2,-122.001,37.502,-122.001,37.4968)                                                                                                                                                                                                                                                                                 Oakland    
Sp Railroad                         (0,3,-122.138,37.003,-122.136,37.992,-122.131,37.9461)                                                                                                                                                                                                                                                                 Oakland    
Railroad                      Ave   (0,3,-122.025,37.013,-122.023,37.003,-122.022,37.993)                                                                                                                                                                                                                                                                  Oakland    
Eden Creek                          (0,2,-122.022,37.0067,-122.022,37.998)                                                                                                                                                                                                                                                                                 Oakland    
I- 880                              (0,19,-122.175,37.185,-122.175,37.178,-122.174,37.173,-122.169,37.126,-122.168,37.1159,-122.168,37.1144,-122.167,37.111,-122.165,37.1,-122.165,37.0981,-122.164,37.092,-122.16,37.061,-122.158,37.0528,-122.156,37.0366,-122.153,37.017,-122.148,37.98,-122.141,37.932,-122.139,37.924,-122.139,37.92,-122.138,37.91)  Oakland    
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   Oakland    
I- 880                              (0,7,-122.098,37.528,-122.096,37.496,-122.093,37.453,-122.093,37.4496,-122.09,37.4144,-122.09,37.405,-122.085,37.34)                                                                                                                                                                                                   Oakland    
I- 880                        Ramp  (0,3,-122.062,37.011,-122.063,37.982,-122.058,37.967)                                                                                                                                                                                                                                                                  Oakland    
I- 880                              (0,12,-122.061,37.003,-122.06,37.991,-122.06,37.982,-122.058,37.967,-122.058,37.961,-122.055,37.918,-122.054,37.8948,-122.051,37.8546,-122.05,37.844,-122.049,37.817,-122.048,37.813,-122.048,37.811)                                                                                                                  Oakland    
I- 880                              (0,12,-122.037,37.632,-122.036,37.619,-122.036,37.616,-122.035,37.6041,-122.032,37.5797,-122.031,37.5733,-122.03,37.5637,-122.029,37.557,-122.029,37.5493,-122.028,37.5391,-122.026,37.517,-122.024,37.491)                                                                                                            Oakland    
Cornell                       Ave   (0,3,-122.296,37.925,-122.295,37.906,-122.294,37.875)                                                                                                                                                                                                                                                                  Berkeley   
Euclid                        Ave   (0,2,-122.267,37.009,-122.267,37.987)                                                                                                                                                                                                                                                                                  Berkeley   
Marin                         Ave   (0,2,-122.274,37.894,-122.272,37.901)                                                                                                                                                                                                                                                                                  Berkeley   
Sacramento                    St    (0,2,-122.28,37.606,-122.28,37.597)                                                                                                                                                                                                                                                                                    Berkeley   
Martin Luther King Jr         Way   (0,2,-122.271,37.608,-122.271,37.599)                                                                                                                                                                                                                                                                                  Berkeley   
Shoreline                     Dr    (0,2,-122.266,37.603,-122.265,37.6)                                                                                                                                                                                                                                                                                    Berkeley   
Creston                       Road  (0,4,-122.264,37.002,-122.261,37.986,-122.26,37.978,-122.26,37.973)                                                                                                                                                                                                                                                    Berkeley   
Keeler                        Ave   (0,2,-122.258,37.906,-122.258,37.899)                                                                                                                                                                                                                                                                                  Berkeley   
Lakeshore                     Ave   (0,2,-122.259,37.99,-122.256,37.006)                                                                                                                                                                                                                                                                                   Berkeley   
Oakland Inner Harbor                (0,2,-122.263,37.913,-122.26,37.8948)                                                                                                                                                                                                                                                                                  Berkeley   
Wp Railroad                         (0,2,-122.254,37.902,-122.251,37.891)                                                                                                                                                                                                                                                                                  Berkeley   
Foothill                      Blvd  (0,2,-122.241,37.9,-122.24,37.893)                                                                                                                                                                                                                                                                                     Berkeley   
19th                          Ave   (0,2,-122.237,37.897,-122.236,37.905)                                                                                                                                                                                                                                                                                  Berkeley   
Dimond                        Ave   (0,2,-122.217,37.994,-122.216,37.006)                                                                                                                                                                                                                                                                                  Berkeley   
Champion                      St    (0,2,-122.214,37.991,-122.215,37.002)                                                                                                                                                                                                                                                                                  Berkeley   
Laguna                        Ave   (0,2,-122.21,37.989,-122.209,37)                                                                                                                                                                                                                                                                                       Berkeley   
Wisconsin                     St    (0,3,-122.199,37.017,-122.198,37.998,-122.197,37.994)                                                                                                                                                                                                                                                                  Berkeley   
Herrier                       St    (0,2,-122.194,37.006,-122.194,37.998)                                                                                                                                                                                                                                                                                  Berkeley   
Redding                       St    (0,2,-122.198,37.901,-122.198,37.895)                                                                                                                                                                                                                                                                                  Berkeley   
Carson                        St    (0,2,-122.185,37.9,-122.184,37.901)                                                                                                                                                                                                                                                                                    Berkeley   
Skyline                       Blvd  (0,2,-122.174,37.01,-122.171,37.996)                                                                                                                                                                                                                                                                                   Berkeley   
Campus                        Dr    (0,3,-122.17,37.905,-122.168,37.868,-122.167,37.865)                                                                                                                                                                                                                                                                   Berkeley   
Broadway                            (0,2,-122.241,37.586,-122.24,37.601)                                                                                                                                                                                                                                                                                   Berkeley   
Coliseum                      Way   (0,3,-122.211,37.626,-122.209,37.592,-122.206,37.568)                                                                                                                                                                                                                                                                  Berkeley   
82nd                          Ave   (0,2,-122.169,37.596,-122.168,37.603)                                                                                                                                                                                                                                                                                  Berkeley   
Avenue 140th                        (0,2,-122.166,37.003,-122.169,37.988)                                                                                                                                                                                                                                                                                  Berkeley   
Parkridge                     Dr    (0,2,-122.144,37.884,-122.143,37.9)                                                                                                                                                                                                                                                                                    Berkeley   
Cull Creek                          (0,2,-122.062,37.875,-122.058,37.527)                                                                                                                                                                                                                                                                                  Berkeley   
Locust                        St    (0,2,-122.161,37.007,-122.159,37.987)                                                                                                                                                                                                                                                                                  Berkeley   
McClure                       Ave   (0,2,-122.143,37.001,-122.144,37.998)                                                                                                                                                                                                                                                                                  Berkeley   
Maubert                       Ave   (0,2,-122.111,37.009,-122.11,37.995)                                                                                                                                                                                                                                                                                   Berkeley   
Ranspot                       Dr    (0,2,-122.097,37.999,-122.096,37)                                                                                                                                                                                                                                                                                      Berkeley   
Butterfield                   Dr    (0,2,-122.084,37.002,-122.083,37.987)                                                                                                                                                                                                                                                                                  Berkeley   
Crow Canyon Creek                   (0,2,-122.043,37.905,-122.037,37.71)                                                                                                                                                                                                                                                                                   Berkeley   
Skywest                       Dr    (0,2,-122.116,37.62,-122.112,37.586)                                                                                                                                                                                                                                                                                   Berkeley   
Hesperian                     Blvd  (0,2,-122.113,37.6,-122.112,37.586)                                                                                                                                                                                                                                                                                    Berkeley   
Sp Railroad                         (0,3,-122.091,37.601,-122.087,37.56,-122.086,37.5551)                                                                                                                                                                                                                                                                  Berkeley   
Jackson                       St    (0,2,-122.085,37.6,-122.084,37.606)                                                                                                                                                                                                                                                                                    Berkeley   
Joyce                         St    (0,2,-122.079,37.604,-122.077,37.581)                                                                                                                                                                                                                                                                                  Berkeley   
San Andreas                   Dr    (0,2,-122.061,37.9,-122.061,37.895)                                                                                                                                                                                                                                                                                    Berkeley   
West Loop                     Road  (0,2,-122.058,37.604,-122.06,37.586)                                                                                                                                                                                                                                                                                   Berkeley   
Parkside                      Dr    (0,2,-122.047,37.603,-122.044,37.596)                                                                                                                                                                                                                                                                                  Berkeley   
Arizona                       St    (0,2,-122.038,37.901,-122.037,37.898)                                                                                                                                                                                                                                                                                  Berkeley   
Decoto                        Road  (0,3,-122.016,37.006,-122.016,37.002,-122.016,37.993)                                                                                                                                                                                                                                                                  Berkeley   
Oneil                         Ave   (0,2,-122.077,37.6248,-122.075,37.595)                                                                                                                                                                                                                                                                                 Berkeley   
Sp Railroad                         (0,3,-122.138,37.003,-122.136,37.992,-122.131,37.9461)                                                                                                                                                                                                                                                                 Berkeley   
Railroad                      Ave   (0,3,-122.025,37.013,-122.023,37.003,-122.022,37.993)                                                                                                                                                                                                                                                                  Berkeley   
Lakehurst                     Cir   (0,2,-122.285,37.8903,-122.286,37.9036)                                                                                                                                                                                                                                                                                Berkeley   
Eden Creek                          (0,2,-122.022,37.0067,-122.022,37.998)                                                                                                                                                                                                                                                                                 Berkeley   
I- 880                              (0,17,-122.271,37.975,-122.269,37.972,-122.268,37.966,-122.267,37.962,-122.266,37.957,-122.265,37.952,-122.264,37.946,-122.263,37.935,-122.262,37.927,-122.261,37.921,-122.259,37.916,-122.258,37.911,-122.254,37.898,-122.243,37.858,-122.241,37.845,-122.239,37.827,-122.237,37.811)                                 Berkeley   
I- 880                        Ramp  (0,2,-122.254,37.898,-122.254,37.902)                                                                                                                                                                                                                                                                                  Berkeley   
I- 580                              (0,12,-122.22,37.99,-122.22,37.99,-122.222,37.9952,-122.223,37.998,-122.224,37.9996,-122.226,37.003,-122.228,37.007,-122.23,37.026,-122.232,37.043,-122.234,37.059,-122.235,37.0643,-122.237,37.07)                                                                                                                    Berkeley   
I- 880                              (0,13,-122.221,37.711,-122.22,37.699,-122.22,37.695,-122.219,37.682,-122.218,37.672,-122.217,37.652,-122.216,37.638,-122.214,37.616,-122.214,37.612,-122.213,37.609,-122.212,37.592,-122.212,37.586,-122.211,37.581)                                                                                                   Berkeley   
I- 880                              (0,19,-122.175,37.185,-122.175,37.178,-122.174,37.173,-122.169,37.126,-122.168,37.1159,-122.168,37.1144,-122.167,37.111,-122.165,37.1,-122.165,37.0981,-122.164,37.092,-122.16,37.061,-122.158,37.0528,-122.156,37.0366,-122.153,37.017,-122.148,37.98,-122.141,37.932,-122.139,37.924,-122.139,37.92,-122.138,37.91)  Berkeley   
I- 880                        Ramp  (0,8,-122.138,37.931,-122.138,37.9274,-122.137,37.925,-122.137,37.924,-122.137,37.914,-122.136,37.905,-122.136,37.908,-122.136,37.898)                                                                                                                                                                                 Berkeley   
I- 880                              (0,17,-122.136,37.902,-122.136,37.898,-122.133,37.881,-122.132,37.874,-122.131,37.866,-122.131,37.865,-122.131,37.864,-122.129,37.851,-122.128,37.843,-122.126,37.834,-122.123,37.812,-122.117,37.766,-122.11,37.72,-122.11,37.7109,-122.109,37.702,-122.108,37.6917,-122.108,37.681)                                  Berkeley   
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   Berkeley   
I- 580                        Ramp  (0,4,-122.109,37.003,-122.107,37.993,-122.107,37.992,-122.105,37.982)                                                                                                                                                                                                                                                  Berkeley   
I- 580                        Ramp  (0,3,-122.101,37.898,-122.1,37.902,-122.099,37.911)                                                                                                                                                                                                                                                                    Berkeley   
I- 580                        Ramp  (0,3,-122.096,37.888,-122.096,37.891,-122.096,37.9)                                                                                                                                                                                                                                                                    Berkeley   
I- 880                        Ramp  (0,3,-122.103,37.61,-122.101,37.587,-122.1,37.569)                                                                                                                                                                                                                                                                     Berkeley   
I- 880                              (0,12,-122.061,37.003,-122.06,37.991,-122.06,37.982,-122.058,37.967,-122.058,37.961,-122.055,37.918,-122.054,37.8948,-122.051,37.8546,-122.05,37.844,-122.049,37.817,-122.048,37.813,-122.048,37.811)                                                                                                                  Berkeley   
I- 880                        Ramp  (0,3,-122.059,37.982,-122.058,37.984,-122.061,37.003)                                                                                                                                                                                                                                                                  Berkeley   
I- 880                              (0,12,-122.037,37.632,-122.036,37.619,-122.036,37.616,-122.035,37.6041,-122.032,37.5797,-122.031,37.5733,-122.03,37.5637,-122.029,37.557,-122.029,37.5493,-122.028,37.5391,-122.026,37.517,-122.024,37.491)                                                                                                            Berkeley   
I- 580                        Ramp  (0,3,-122.093,37.9035,-122.094,37.8963,-122.094,37.8921)                                                                                                                                                                                                                                                               Berkeley   
State Hwy 13                        (0,9,-122.18,37.943,-122.18,37.9185,-122.18,37.9,-122.179,37.8661,-122.179,37.862,-122.178,37.851,-122.178,37.845,-122.177,37.839,-122.177,37.833)                                                                                                                                                                     Berkeley   
State Hwy 238                       (1,8,-122.098,37.908,-122.098,37.907,-122.099,37.905,-122.101,37.898,-122.102,37.8971,-122.103,37.8944,-122.105,37.892,-122.106,37.89)                                                                                                                                                                                 Berkeley   
Euclid                        Ave   (0,2,-122.267,37.009,-122.267,37.987)                                                                                                                                                                                                                                                                                  Lafayette  
Hollis                        St    (0,2,-122.288,37.397,-122.289,37.414)                                                                                                                                                                                                                                                                                  Lafayette  
5th                           St    (0,3,-122.278,37,-122.279,37.005,-122.28,37.009)                                                                                                                                                                                                                                                                       Lafayette  
Creston                       Road  (0,4,-122.264,37.002,-122.261,37.986,-122.26,37.978,-122.26,37.973)                                                                                                                                                                                                                                                    Lafayette  
Ada                           St    (0,2,-122.249,37.398,-122.25,37.401)                                                                                                                                                                                                                                                                                   Lafayette  
Sheridan                      Road  (0,3,-122.228,37.425,-122.225,37.411,-122.222,37.377)                                                                                                                                                                                                                                                                  Lafayette  
Proctor                       Ave   (0,2,-122.227,37.406,-122.225,37.386)                                                                                                                                                                                                                                                                                  Lafayette  
Capricorn                     Ave   (0,2,-122.218,37.404,-122.216,37.384)                                                                                                                                                                                                                                                                                  Lafayette  
Taurus                        Ave   (0,2,-122.216,37.416,-122.213,37.389)                                                                                                                                                                                                                                                                                  Lafayette  
Lakeshore                     Ave   (0,2,-122.259,37.99,-122.256,37.006)                                                                                                                                                                                                                                                                                   Lafayette  
Dimond                        Ave   (0,2,-122.217,37.994,-122.216,37.006)                                                                                                                                                                                                                                                                                  Lafayette  
Indian                        Way   (0,2,-122.207,37.398,-122.204,37.411)                                                                                                                                                                                                                                                                                  Lafayette  
Champion                      St    (0,2,-122.214,37.991,-122.215,37.002)                                                                                                                                                                                                                                                                                  Lafayette  
Laguna                        Ave   (0,2,-122.21,37.989,-122.209,37)                                                                                                                                                                                                                                                                                       Lafayette  
California                    St    (0,2,-122.203,37.005,-122.202,37.996)                                                                                                                                                                                                                                                                                  Lafayette  
Edgewater                     Dr    (0,2,-122.201,37.379,-122.204,37.41)                                                                                                                                                                                                                                                                                   Lafayette  
I- 880                        Ramp  (0,2,-122.277,37.002,-122.278,37)                                                                                                                                                                                                                                                                                      Lafayette  
I- 580                              (0,12,-122.22,37.99,-122.22,37.99,-122.222,37.9952,-122.223,37.998,-122.224,37.9996,-122.226,37.003,-122.228,37.007,-122.23,37.026,-122.232,37.043,-122.234,37.059,-122.235,37.0643,-122.237,37.07)                                                                                                                    Lafayette  
State Hwy 13                  Ramp  (0,4,-122.224,37.427,-122.223,37.414,-122.221,37.396,-122.221,37.388)                                                                                                                                                                                                                                                  Lafayette  
QUERY: SELECT * from iexit;
name                                thepath                                                                                                                                                                                                                                                                                                                exit                
----------------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ------------------- 
I- 880                        Ramp  (1,3,-121.948,37.91,-121.947,37.911,-121.946,37.911)                                                                                                                                                                                                                                                                   (-121.946,37.911)   
I- 880                        Ramp  (1,3,-121.948,37.91,-121.947,37.911,-121.946,37.911)                                                                                                                                                                                                                                                                   (-121.947,37.911)   
I- 580                        Ramp  (0,8,-121.937,37.986,-121.936,37.9883,-121.935,37.997,-121.935,37.0003,-121.935,37.006,-121.934,37.0003,-121.933,37.997,-121.932,37.989)                                                                                                                                                                               (-121.935,37.8507)  
I- 580                        Ramp  (0,8,-121.937,37.986,-121.936,37.9883,-121.935,37.997,-121.935,37.0003,-121.935,37.006,-121.934,37.0003,-121.933,37.997,-121.932,37.989)                                                                                                                                                                               (-121.935,37.8337)  
I- 580                        Ramp  (0,8,-121.937,37.986,-121.936,37.9883,-121.935,37.997,-121.935,37.0003,-121.935,37.006,-121.934,37.0003,-121.933,37.997,-121.932,37.989)                                                                                                                                                                               (-121.935,37.8354)  
I- 680                              (0,7,-121.91,37.715,-121.911,37.7468,-121.912,37.764,-121.912,37.776,-121.917,37.905,-121.919,37.957,-121.921,37.988)                                                                                                                                                                                                  (-121.919,37.9349)  
I- 680                        Ramp  (0,7,-121.927,37.998,-121.924,37.983,-121.922,37.9786,-121.92,37.975,-121.919,37.954,-121.919,37.941,-121.918,37.934)                                                                                                                                                                                                  (-121.922,37.9786)  
I- 680                              (0,7,-121.91,37.715,-121.911,37.7468,-121.912,37.764,-121.912,37.776,-121.917,37.905,-121.919,37.957,-121.921,37.988)                                                                                                                                                                                                  (-121.92,37.9755)   
I- 680                        Ramp  (1,3,-121.925,37.932,-121.921,37.944,-121.92,37.944)                                                                                                                                                                                                                                                                   (-121.921,37.944)   
I- 580                        Ramp  (0,4,-121.904,37.998,-121.904,37.013,-121.903,37.0174,-121.903,37.018)                                                                                                                                                                                                                                                 (-121.904,37.6629)  
I- 580                        Ramp  (0,6,-121.658,37.2009,-121.658,37.2009,-121.66,37.1972,-121.66,37.1965,-121.662,37.19,-121.662,37.1869)                                                                                                                                                                                                                (-121.658,37.2009)  
I- 580                              (0,18,-121.77,37.013,-121.769,37.015,-121.758,37.03,-121.756,37.03,-121.755,37.0297,-121.751,37.0281,-121.75,37.0274,-121.749,37.026,-121.745,37.024,-121.744,37.024,-121.741,37.024,-121.74,37.0251,-121.739,37.0272,-121.738,37.028,-121.736,37.0328,-121.736,37.033,-121.736,37.034,-121.733,37.046)                (-121.744,37.024)   
I- 580                        Ramp  (0,5,-121.74,37.034,-121.741,37.034,-121.74,37.029,-121.738,37.032,-121.736,37.034)                                                                                                                                                                                                                                    (-121.741,37.034)   
I- 580                        Ramp  (1,3,-121.74,37.036,-121.739,37.033,-121.738,37.032)                                                                                                                                                                                                                                                                   (-121.738,37.032)   
I- 580                              (0,18,-121.77,37.013,-121.769,37.015,-121.758,37.03,-121.756,37.03,-121.755,37.0297,-121.751,37.0281,-121.75,37.0274,-121.749,37.026,-121.745,37.024,-121.744,37.024,-121.741,37.024,-121.74,37.0251,-121.739,37.0272,-121.738,37.028,-121.736,37.0328,-121.736,37.033,-121.736,37.034,-121.733,37.046)                (-121.741,37.024)   
I- 580                        Ramp  (1,3,-121.74,37.036,-121.739,37.033,-121.738,37.032)                                                                                                                                                                                                                                                                   (-121.739,37.033)   
I- 580                        Ramp  (0,3,-121.723,37.103,-121.722,37.103,-121.722,37.0986)                                                                                                                                                                                                                                                                 (-121.722,37.103)   
I- 80                         Ramp  (0,5,-122.299,37.518,-122.299,37.5,-122.299,37.488,-122.299,37.477,-122.297,37.452)                                                                                                                                                                                                                                    (-122.299,37.5)     
I- 80                         Ramp  (0,5,-122.299,37.518,-122.299,37.5,-122.299,37.488,-122.299,37.477,-122.297,37.452)                                                                                                                                                                                                                                    (-122.297,37.452)   
I- 80                         Ramp  (0,2,-122.304,37.25,-122.308,37.249)                                                                                                                                                                                                                                                                                   (-122.304,37.25)    
I- 80                         Ramp  (0,2,-122.304,37.25,-122.305,37.254)                                                                                                                                                                                                                                                                                   (-122.304,37.25)    
I- 580                              (1,9,-122.274,37.262,-122.275,37.263,-122.277,37.27,-122.278,37.271,-122.279,37.274,-122.281,37.275,-122.282,37.276,-122.283,37.276,-122.284,37.276)                                                                                                                                                                   (-122.284,37.276)   
I- 580                              (0,6,-122.274,37.262,-122.273,37.259,-122.269,37.247,-122.269,37.2449,-122.268,37.2443,-122.268,37.244)                                                                                                                                                                                                                (-122.268,37.244)   
I- 580                        Ramp  (0,2,-122.268,37.243,-122.269,37.243)                                                                                                                                                                                                                                                                                  (-122.268,37.243)   
I- 580                        Ramp  (1,3,-122.265,37.242,-122.266,37.245,-122.267,37.245)                                                                                                                                                                                                                                                                  (-122.267,37.245)   
I- 580                              (0,3,-122.267,37.243,-122.268,37.243,-122.268,37.244)                                                                                                                                                                                                                                                                  (-122.267,37.243)   
I- 580                        Ramp  (1,3,-122.265,37.242,-122.266,37.245,-122.267,37.245)                                                                                                                                                                                                                                                                  (-122.267,37.245)   
I- 580                        Ramp  (1,3,-122.265,37.242,-122.266,37.245,-122.267,37.245)                                                                                                                                                                                                                                                                  (-122.266,37.245)   
I- 580                              (0,6,-122.261,37.23,-122.26,37.2283,-122.261,37.231,-122.264,37.238,-122.265,37.241,-122.265,37.242)                                                                                                                                                                                                                   (-122.264,37.238)   
I- 580                        Ramp  (0,5,-122.264,37.238,-122.266,37.239,-122.266,37.238,-122.268,37.231,-122.268,37.227)                                                                                                                                                                                                                                  (-122.266,37.239)   
I- 580                              (0,5,-122.261,37.23,-122.263,37.2331,-122.265,37.2349,-122.266,37.236,-122.266,37.238)                                                                                                                                                                                                                                 (-122.266,37.238)   
I- 580                        Ramp  (1,3,-122.265,37.242,-122.266,37.245,-122.267,37.245)                                                                                                                                                                                                                                                                  (-122.266,37.245)   
I- 580                        Ramp  (1,3,-122.265,37.241,-122.265,37.244,-122.266,37.245)                                                                                                                                                                                                                                                                  (-122.265,37.244)   
I- 580                        Ramp  (0,4,-122.255,37.205,-122.254,37.205,-122.254,37.202,-122.254,37.196)                                                                                                                                                                                                                                                  (-122.254,37.205)   
I- 580                        Ramp  (0,4,-122.255,37.205,-122.254,37.205,-122.254,37.202,-122.254,37.196)                                                                                                                                                                                                                                                  (-122.254,37.205)   
I- 880                              (0,17,-122.271,37.975,-122.269,37.972,-122.268,37.966,-122.267,37.962,-122.266,37.957,-122.265,37.952,-122.264,37.946,-122.263,37.935,-122.262,37.927,-122.261,37.921,-122.259,37.916,-122.258,37.911,-122.254,37.898,-122.243,37.858,-122.241,37.845,-122.239,37.827,-122.237,37.811)                                 (-122.258,37.911)   
I- 580                              (0,12,-122.22,37.99,-122.22,37.99,-122.222,37.9952,-122.223,37.998,-122.224,37.9996,-122.226,37.003,-122.228,37.007,-122.23,37.026,-122.232,37.043,-122.234,37.059,-122.235,37.0643,-122.237,37.07)                                                                                                                    (-122.22,37.99)     
I- 580                              (0,12,-122.22,37.99,-122.22,37.99,-122.222,37.9952,-122.223,37.998,-122.224,37.9996,-122.226,37.003,-122.228,37.007,-122.23,37.026,-122.232,37.043,-122.234,37.059,-122.235,37.0643,-122.237,37.07)                                                                                                                    (-122.22,37.99)     
I- 580                        Ramp  (0,6,-122.216,37.985,-122.217,37.989,-122.218,37.991,-122.218,37.9907,-122.219,37.9902,-122.22,37.99)                                                                                                                                                                                                                  (-122.22,37.99)     
I- 880                        Ramp  (1,3,-122.235,37.767,-122.236,37.768,-122.236,37.768)                                                                                                                                                                                                                                                                  (-122.236,37.768)   
I- 880                        Ramp  (0,4,-122.232,37.746,-122.232,37.751,-122.232,37.752,-122.233,37.752)                                                                                                                                                                                                                                                  (-122.232,37.752)   
I- 880                        Ramp  (0,4,-122.22,37.695,-122.219,37.697,-122.22,37.7,-122.22,37.699)                                                                                                                                                                                                                                                       (-122.219,37.697)   
I- 880                        Ramp  (1,3,-122.209,37.532,-122.209,37.535,-122.207,37.535)                                                                                                                                                                                                                                                                  (-122.207,37.535)   
I- 880                        Ramp  (1,3,-122.209,37.532,-122.209,37.535,-122.207,37.535)                                                                                                                                                                                                                                                                  (-122.209,37.535)   
I- 880                        Ramp  (0,4,-122.196,37.407,-122.196,37.396,-122.195,37.396,-122.195,37.394)                                                                                                                                                                                                                                                  (-122.195,37.396)   
I- 880                        Ramp  (0,3,-122.195,37.405,-122.194,37.411,-122.195,37.411)                                                                                                                                                                                                                                                                  (-122.194,37.411)   
I- 580                        Ramp  (0,3,-122.174,37.817,-122.175,37.822,-122.177,37.833)                                                                                                                                                                                                                                                                  (-122.175,37.822)   
I- 880                        Ramp  (0,5,-122.187,37.32,-122.187,37.322,-122.187,37.321,-122.188,37.319,-122.188,37.317)                                                                                                                                                                                                                                   (-122.187,37.322)   
I- 880                        Ramp  (1,2,-122.186,37.322,-122.187,37.322)                                                                                                                                                                                                                                                                                  (-122.187,37.322)   
I- 880                        Ramp  (0,5,-122.187,37.32,-122.187,37.322,-122.187,37.321,-122.188,37.319,-122.188,37.317)                                                                                                                                                                                                                                   (-122.187,37.322)   
I- 880                        Ramp  (0,6,-122.176,37.193,-122.175,37.191,-122.174,37.194,-122.174,37.192,-122.174,37.196,-122.172,37.198)                                                                                                                                                                                                                  (-122.174,37.196)   
I- 880                        Ramp  (0,5,-122.168,37.09,-122.167,37.089,-122.166,37.0897,-122.165,37.09,-122.164,37.092)                                                                                                                                                                                                                                   (-122.167,37.089)   
I- 580                        Ramp  (0,3,-122.152,37.529,-122.151,37.524,-122.151,37.509)                                                                                                                                                                                                                                                                  (-122.151,37.524)   
I- 580                        Ramp  (1,2,-122.152,37.526,-122.151,37.524)                                                                                                                                                                                                                                                                                  (-122.151,37.524)   
I- 580                        Ramp  (0,3,-122.152,37.529,-122.151,37.524,-122.151,37.509)                                                                                                                                                                                                                                                                  (-122.151,37.524)   
I- 880                              (0,19,-122.175,37.185,-122.175,37.178,-122.174,37.173,-122.169,37.126,-122.168,37.1159,-122.168,37.1144,-122.167,37.111,-122.165,37.1,-122.165,37.0981,-122.164,37.092,-122.16,37.061,-122.158,37.0528,-122.156,37.0366,-122.153,37.017,-122.148,37.98,-122.141,37.932,-122.139,37.924,-122.139,37.92,-122.138,37.91)  (-122.15,37.5392)   
I- 880                        Ramp  (1,2,-122.133,37.901,-122.136,37.905)                                                                                                                                                                                                                                                                                  (-122.136,37.905)   
I- 880                        Ramp  (0,3,-122.129,37.842,-122.128,37.839,-122.126,37.834)                                                                                                                                                                                                                                                                  (-122.128,37.839)   
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   (-122.107,37.844)   
I- 580                        Ramp  (0,2,-122.108,37.007,-122.109,37.02)                                                                                                                                                                                                                                                                                   (-122.109,37.0128)  
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   (-122.099,37.911)   
I- 580                              (0,7,-122.098,37.908,-122.097,37.904,-122.096,37.903,-122.095,37.903,-122.094,37.902,-122.094,37.903,-122.093,37.9035)                                                                                                                                                                                                 (-122.095,37.903)   
I- 580                              (0,9,-122.091,37.906,-122.09,37.908,-122.088,37.908,-122.086,37.909,-122.078,37.909,-122.073,37.909,-122.071,37.91,-122.068,37.9114,-122.065,37.914)                                                                                                                                                                   (-122.065,37.914)   
I- 580                        Ramp  (0,3,-122.065,37.914,-122.062,37.916,-122.06,37.92)                                                                                                                                                                                                                                                                    (-122.062,37.916)   
I- 580                        Ramp  (0,3,-122.019,37.012,-122.018,37.009,-122.018,37.019)                                                                                                                                                                                                                                                                  (-122.019,37.012)   
I- 580                        Ramp  (0,3,-122.019,37.012,-122.02,37.015,-122.021,37.02)                                                                                                                                                                                                                                                                    (-122.019,37.012)   
I- 580                        Ramp  (0,8,-121.937,37.986,-121.936,37.9883,-121.935,37.997,-121.935,37.0003,-121.935,37.006,-121.934,37.0003,-121.933,37.997,-121.932,37.989)                                                                                                                                                                               (-121.935,37.9796)  
I- 880                        Ramp  (0,6,-121.934,37.85,-121.937,37.852,-121.937,37.836,-121.936,37.835,-121.936,37.826,-121.935,37.813)                                                                                                                                                                                                                   (-121.935,37.8507)  
I- 880                              (0,10,-121.936,37.83,-121.936,37.826,-121.935,37.819,-121.935,37.813,-121.934,37.788,-121.933,37.767,-121.923,37.57,-121.923,37.563,-121.923,37.561,-121.922,37.5541)                                                                                                                                                  (-121.933,37.7817)  
I- 580                        Ramp  (0,4,-121.936,37.986,-121.934,37.971,-121.933,37.979,-121.932,37.989)                                                                                                                                                                                                                                                  (-121.935,37.9796)  
I- 680                              (0,10,-121.923,37.039,-121.924,37.057,-121.929,37.106,-121.929,37.1133,-121.93,37.119,-121.932,37.148,-121.934,37.1711,-121.936,37.193,-121.936,37.2019,-121.938,37.219)                                                                                                                                               (-121.934,37.1683)  
I- 680                              (1,16,-121.939,37.15,-121.939,37.145,-121.937,37.125,-121.934,37.0764,-121.934,37.0709,-121.934,37.068,-121.933,37.0614,-121.933,37.057,-121.932,37.0511,-121.932,37.0468,-121.93,37.027,-121.927,37,-121.927,37.998,-121.922,37.96,-121.92,37.949,-121.918,37.934)                                                    (-121.935,37.0895)  
I- 580                              (0,3,-121.932,37.989,-121.924,37.006,-121.922,37.014)                                                                                                                                                                                                                                                                  (-121.924,37.0087)  
I- 580/I-680                  Ramp  (0,4,-121.924,37.006,-121.924,37.005,-121.922,37.008,-121.922,37.0104)                                                                                                                                                                                                                                                 (-121.924,37.006)   
I- 680                        Ramp  (1,5,-121.921,37.965,-121.92,37.96,-121.921,37.957,-121.92,37.951,-121.919,37.941)                                                                                                                                                                                                                                     (-121.921,37.9574)  
I- 680                              (1,16,-121.939,37.15,-121.939,37.145,-121.937,37.125,-121.934,37.0764,-121.934,37.0709,-121.934,37.068,-121.933,37.0614,-121.933,37.057,-121.932,37.0511,-121.932,37.0468,-121.93,37.027,-121.927,37,-121.927,37.998,-121.922,37.96,-121.92,37.949,-121.918,37.934)                                                    (-121.921,37.9517)  
I- 580                              (0,6,-121.921,37.015,-121.919,37.02,-121.918,37.02,-121.909,37.017,-121.906,37.018,-121.906,37.018)                                                                                                                                                                                                                    (-121.909,37.017)   
I- 680                        Ramp  (0,3,-121.905,37.702,-121.905,37.667,-121.903,37.6588)                                                                                                                                                                                                                                                                 (-121.904,37.6629)  
I- 580                        Ramp  (1,3,-121.903,37.018,-121.904,37.022,-121.906,37.029)                                                                                                                                                                                                                                                                  (-121.904,37.0217)  
I- 580                        Ramp  (0,4,-121.904,37.998,-121.904,37.013,-121.903,37.0174,-121.903,37.018)                                                                                                                                                                                                                                                 (-121.904,37.0217)  
I- 580                        Ramp  (0,3,-121.874,37.014,-121.872,37.999,-121.871,37.999)                                                                                                                                                                                                                                                                  (-121.872,37.999)   
I- 680                        Ramp  (0,2,-121.87,37.01,-121.871,37.038)                                                                                                                                                                                                                                                                                    (-121.87,37.0126)   
I- 580                              (0,12,-121.859,37.013,-121.852,37.011,-121.849,37.011,-121.846,37.011,-121.846,37.011,-121.842,37.011,-121.841,37.011,-121.834,37.0104,-121.829,37.01,-121.829,37.009,-121.823,37.0083,-121.821,37.008)                                                                                                                (-121.852,37.011)   
I- 580                        Ramp  (0,5,-121.852,37.011,-121.848,37.999,-121.848,37.999,-121.846,37.01,-121.846,37.011)                                                                                                                                                                                                                                   (-121.848,37.999)   
I- 580                              (0,12,-121.859,37.013,-121.852,37.011,-121.849,37.011,-121.846,37.011,-121.846,37.011,-121.842,37.011,-121.841,37.011,-121.834,37.0104,-121.829,37.01,-121.829,37.009,-121.823,37.0083,-121.821,37.008)                                                                                                                (-121.852,37.011)   
I- 580                              (0,12,-121.859,37.013,-121.852,37.011,-121.849,37.011,-121.846,37.011,-121.846,37.011,-121.842,37.011,-121.841,37.011,-121.834,37.0104,-121.829,37.01,-121.829,37.009,-121.823,37.0083,-121.821,37.008)                                                                                                                (-121.846,37.011)   
I- 580                              (0,12,-121.859,37.013,-121.852,37.011,-121.849,37.011,-121.846,37.011,-121.846,37.011,-121.842,37.011,-121.841,37.011,-121.834,37.0104,-121.829,37.01,-121.829,37.009,-121.823,37.0083,-121.821,37.008)                                                                                                                (-121.821,37.008)   
I- 580                        Ramp  (0,3,-121.774,37.006,-121.773,37.013,-121.77,37.013)                                                                                                                                                                                                                                                                   (-121.773,37.013)   
I- 580                        Ramp  (0,3,-121.774,37.006,-121.773,37.013,-121.77,37.013)                                                                                                                                                                                                                                                                   (-121.77,37.013)    
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   (-122.107,37.6771)  
I- 880                        Ramp  (0,3,-122.103,37.557,-122.1,37.548,-122.098,37.528)                                                                                                                                                                                                                                                                    (-122.1,37.548)     
I- 880                              (0,12,-122.061,37.003,-122.06,37.991,-122.06,37.982,-122.058,37.967,-122.058,37.961,-122.055,37.918,-122.054,37.8948,-122.051,37.8546,-122.05,37.844,-122.049,37.817,-122.048,37.813,-122.048,37.811)                                                                                                                  (-122.058,37.9539)  
I- 880                        Ramp  (1,5,-122.058,37.967,-122.058,37.974,-122.055,37.966,-122.055,37.9683,-122.058,37.984)                                                                                                                                                                                                                                 (-122.058,37.9737)  
I- 880                        Ramp  (0,5,-122.039,37.65,-122.039,37.625,-122.039,37.617,-122.036,37.6161,-122.036,37.616)                                                                                                                                                                                                                                  (-122.039,37.625)   
I- 880                        Ramp  (0,5,-122.024,37.488,-122.023,37.458,-122.023,37.458,-122.022,37.452,-122.02,37.447)                                                                                                                                                                                                                                   (-122.02,37.447)    
I- 880                        Ramp  (0,5,-122.024,37.488,-122.023,37.458,-122.023,37.458,-122.022,37.452,-122.02,37.447)                                                                                                                                                                                                                                   (-122.023,37.458)   
I- 880                        Ramp  (0,3,-122.023,37.474,-122.021,37.473,-122.022,37.466)                                                                                                                                                                                                                                                                  (-122.021,37.473)   
I- 880                              (0,17,-121.999,37.289,-121.999,37.2856,-121.998,37.282,-121.997,37.2761,-121.993,37.255,-121.992,37.252,-121.991,37.248,-121.99,37.2437,-121.99,37.2402,-121.988,37.233,-121.987,37.229,-121.987,37.226,-121.985,37.216,-121.982,37.196,-121.981,37.186,-121.976,37.1472,-121.971,37.107)                              (-121.987,37.226)   
I- 680                        Ramp  (0,5,-121.898,37.545,-121.9,37.565,-121.9,37.571,-121.901,37.572,-121.903,37.586)                                                                                                                                                                                                                                      (-121.9,37.571)     
I- 580                        Ramp  (0,4,-121.87,37.013,-121.871,37.011,-121.872,37.001,-121.871,37.001)                                                                                                                                                                                                                                                   (-121.871,37.011)   
I- 580                        Ramp  (0,2,-121.867,37.0138,-121.871,37.0261)                                                                                                                                                                                                                                                                                (-121.871,37.0252)  
I- 580                        Ramp  (0,4,-121.87,37.013,-121.871,37.011,-121.872,37.001,-121.871,37.001)                                                                                                                                                                                                                                                   (-121.87,37.0126)   
I- 680                        Ramp  (0,3,-121.923,37.394,-121.923,37.392,-121.925,37.392)                                                                                                                                                                                                                                                                  (-121.923,37.392)   
I- 680                              (1,16,-121.939,37.15,-121.939,37.145,-121.937,37.125,-121.934,37.0764,-121.934,37.0709,-121.934,37.068,-121.933,37.0614,-121.933,37.057,-121.932,37.0511,-121.932,37.0468,-121.93,37.027,-121.927,37,-121.927,37.998,-121.922,37.96,-121.92,37.949,-121.918,37.934)                                                    (-121.937,37.125)   
I- 580                        Ramp  (0,3,-121.906,37.018,-121.906,37.0239,-121.906,37.023)                                                                                                                                                                                                                                                                 (-121.906,37.0233)  
I- 680                        Ramp  (0,2,-121.871,37.01,-121.871,37.047)                                                                                                                                                                                                                                                                                   (-121.871,37.0252)  
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   (-122.107,37.8937)  
I- 580                        Ramp  (0,4,-122.109,37.003,-122.107,37.993,-122.107,37.992,-122.105,37.982)                                                                                                                                                                                                                                                  (-122.107,37.8943)  
I- 580                              (0,14,-122.111,37.023,-122.11,37.02,-122.108,37.0076,-122.108,37.007,-122.107,37.998,-122.106,37.994,-122.105,37.982,-122.105,37.977,-122.103,37.958,-122.103,37.953,-122.101,37.938,-122.099,37.911,-122.098,37.91,-122.098,37.908)                                                                                   (-122.107,37.8846)  
I- 580                        Ramp  (0,4,-122.109,37.003,-122.107,37.993,-122.107,37.992,-122.105,37.982)                                                                                                                                                                                                                                                  (-122.107,37.8842)  
QUERY: SELECT * from toyemp where name='sharon';
name    age  location  annualsal  
------- ---- --------- ---------- 
sharon  25   (15,12)   12000      
QUERY: SELECT avg(four) AS avg_1 FROM onek;
avg_1  
------ 
1      
QUERY: SELECT avg(a) AS avg_49 FROM aggtest WHERE a < 100;
avg_49  
------- 
0       
QUERY: SELECT avg(b) AS avg_107_943 FROM aggtest;
avg_107_943  
------------ 
0            
QUERY: SELECT avg(gpa) AS avg_3_4 FROM student;
avg_3_4  
-------- 
3.4      
QUERY: SELECT sum(four) AS sum_1500 FROM onek;
sum_1500  
--------- 
1500      
QUERY: SELECT sum(a) AS sum_198 FROM aggtest;
sum_198  
-------- 
0        
QUERY: SELECT sum(b) AS avg_431_773 FROM aggtest;
avg_431_773  
------------ 
0            
QUERY: SELECT sum(gpa) AS avg_6_8 FROM student;
avg_6_8  
-------- 
6.8      
QUERY: SELECT max(four) AS max_3 FROM onek;
max_3  
------ 
3      
QUERY: SELECT max(a) AS max_100 FROM aggtest;
max_100  
-------- 
         
QUERY: SELECT max(aggtest.b) AS max_324_78 FROM aggtest;
max_324_78  
----------- 
            
QUERY: SELECT max(student.gpa) AS max_3_7 FROM student;
max_3_7  
-------- 
3.7      
QUERY: SELECT count(four) AS cnt_1000 FROM onek;
cnt_1000  
--------- 
1000      
QUERY: SELECT newavg(four) AS avg_1 FROM onek;
avg_1  
------ 
1      
QUERY: SELECT newsum(four) AS sum_1500 FROM onek;
sum_1500  
--------- 
1500      
QUERY: SELECT newcnt(four) AS cnt_1000 FROM onek;
cnt_1000  
--------- 
1000      
QUERY: SELECT * FROM a_star*;
class  a   
------ --- 
a      1   
a      2   
a          
b      3   
b      4   
b          
b          
c      5   
c      6   
c          
c          
e      15  
e      16  
e      17  
e          
e      18  
e          
e          
d      7   
d      8   
d      9   
d      10  
d          
d      11  
d      12  
d      13  
d          
d          
d          
d      14  
d          
d          
d          
d          
f      19  
f      20  
f      21  
f      22  
f          
f      24  
f      25  
f      26  
f          
f          
f          
f      27  
f          
f          
f          
f          
QUERY: SELECT *
   FROM b_star* x
   WHERE x.b = 'bumble'::text or x.a < 3;
class  a  b       
------ -- ------- 
b         bumble  
QUERY: SELECT class, a
   FROM c_star* x
   WHERE x.c ~ 'hi'::text;
class  a   
------ --- 
c      5   
c          
d      7   
d      8   
d      10  
d          
d      12  
d          
d          
d          
e      15  
e      16  
e          
e          
f      19  
f      20  
f      21  
f          
f      24  
f          
f          
f          
QUERY: SELECT class, b, c
   FROM d_star* x
   WHERE x.a < 100;
class  b        c           
------ -------- ----------- 
d      grumble  hi sunita   
d      stumble  hi koko     
d      rumble               
d               hi kristin  
d      fumble               
d               hi avi      
d                           
d                           
QUERY: SELECT class, c FROM e_star* x WHERE x.c NOTNULL;
class  c            
------ ------------ 
e      hi carol     
e      hi bob       
e      hi michelle  
e      hi elisa     
f      hi claire    
f      hi mike      
f      hi marcel    
f      hi keith     
f      hi marc      
f      hi allison   
f      hi jeff      
f      hi carl      
QUERY: SELECT * FROM f_star* x WHERE x.c ISNULL;
class  a   c  e    f                                                                                                          
------ --- -- ---- ---------------------------------------------------------------------------------------------------------- 
f      22     -7   (         111,         222,         333,         444,         555,         666,         777,         888)  
f      25     -9                                                                                                              
f      26          (       11111,       22222,       33333,       44444)                                                      
f             -11  ( 1.11111e+06, 2.22222e+06, 3.33333e+06, 4.44444e+06)                                                      
f      27                                                                                                                     
f             -12                                                                                                             
f                  ( 1.11111e+07, 2.22222e+07, 3.33333e+07, 4.44444e+07)                                                      
f                                                                                                                             
QUERY: ALTER TABLE f_star RENAME COLUMN f TO ff;
QUERY: ALTER TABLE e_star* RENAME COLUMN e TO ee;
QUERY: ALTER TABLE d_star* RENAME COLUMN d TO dd;
QUERY: ALTER TABLE c_star* RENAME COLUMN c TO cc;
QUERY: ALTER TABLE b_star* RENAME COLUMN b TO bb;
QUERY: ALTER TABLE a_star* RENAME COLUMN a TO aa;
QUERY: SELECT class, aa
   FROM a_star* x
   WHERE aa ISNULL;
class  aa  
------ --- 
a          
b          
b          
c          
c          
e          
e          
e          
d          
d          
d          
d          
d          
d          
d          
d          
f          
f          
f          
f          
f          
f          
f          
f          
QUERY: ALTER TABLE a_star RENAME COLUMN aa TO foo;
QUERY: SELECT class, foo
   FROM a_star x
   WHERE x.foo >= 2;
class  foo  
------ ---- 
a      2    
QUERY: ALTER TABLE a_star RENAME COLUMN foo TO aa;
QUERY: SELECT *
   from a_star*
   WHERE aa < 1000;
class  aa  
------ --- 
a      1   
a      2   
b      3   
b      4   
c      5   
c      6   
e      15  
e      16  
e      17  
e      18  
d      7   
d      8   
d      9   
d      10  
d      11  
d      12  
d      13  
d      14  
f      19  
f      20  
f      21  
f      22  
f      24  
f      25  
f      26  
f      27  
QUERY: ALTER TABLE f_star ADD COLUMN f int4;
QUERY: UPDATE f_star SET f = 10;
QUERY: ALTER TABLE e_star* ADD COLUMN e int4;
QUERY: UPDATE e_star* SET e = 42;
WARN:parser: syntax error at or near "*"

QUERY: SELECT * FROM e_star*;
class  aa  cc           ee   e  
------ --- ------------ ---- -- 
e      15  hi carol     -1      
e      16  hi bob               
e      17               -2      
e          hi michelle  -3      
e      18                       
e          hi elisa             
e                       -4      
f      19  hi claire    -5      
f      20  hi mike      -6      
f      21  hi marcel            
f      22               -7      
f          hi keith     -8      
f      24  hi marc              
f      25               -9      
f      26                       
f          hi allison   -10     
f          hi jeff              
f                       -11     
f      27                       
f          hi carl              
f                       -12     
f                               
f                               
QUERY: ALTER TABLE a_star* ADD COLUMN a text;
QUERY: UPDATE b_star*
   SET a = 'gazpacho'::text
   WHERE aa > 4;
WARN:parser: syntax error at or near "*"

QUERY: SELECT class, aa, a FROM a_star*;
class  aa  a  
------ --- -- 
a      1      
a      2      
a             
b      3      
b      4      
b             
b             
c      5      
c      6      
c             
c             
e      15     
e      16     
e      17     
e             
e      18     
e             
e             
d      7      
d      8      
d      9      
d      10     
d             
d      11     
d      12     
d      13     
d             
d             
d             
d      14     
d             
d             
d             
d             
f      19     
f      20     
f      21     
f      22     
f             
f      24     
f      25     
f      26     
f             
f             
f             
f      27     
f             
f             
f             
f             
QUERY: SELECT p.name, p.hobbies.name FROM person p;
name   name         
------ ------------ 
mike   posthacking  
joe    basketball   
sally  basketball   
QUERY: SELECT p.name, p.hobbies.name FROM person* p;
name   name         
------ ------------ 
mike   posthacking  
joe    basketball   
sally  basketball   
jeff   posthacking  
QUERY: SELECT DISTINCT hobbies_r.name, hobbies_r.equipment.name FROM hobbies_r;
name         name           
------------ -------------- 
basketball   hightops       
posthacking  advil          
posthacking  peet's coffee  
skywalking   guts           
QUERY: SELECT hobbies_r.name, hobbies_r.equipment.name FROM hobbies_r;
name         name           
------------ -------------- 
posthacking  advil          
posthacking  peet's coffee  
posthacking  advil          
posthacking  peet's coffee  
basketball   hightops       
basketball   hightops       
skywalking   guts           
QUERY: SELECT p.name, p.hobbies.name, p.hobbies.equipment.name FROM person p;
name   name         name           
------ ------------ -------------- 
mike   posthacking  advil          
joe    basketball   peet's coffee  
sally  basketball   hightops       
QUERY: SELECT p.name, p.hobbies.name, p.hobbies.equipment.name FROM person* p;
name   name         name           
------ ------------ -------------- 
mike   posthacking  advil          
joe    basketball   peet's coffee  
sally  basketball   hightops       
jeff   posthacking  advil          
QUERY: SELECT p.hobbies.equipment.name, p.name, p.hobbies.name FROM person p;
name      name   name         
--------- ------ ------------ 
advil     mike   posthacking  
hightops  joe    basketball   
hightops  sally  basketball   
QUERY: SELECT p.hobbies.equipment.name, p.name, p.hobbies.name FROM person* p;
name      name   name         
--------- ------ ------------ 
advil     mike   posthacking  
hightops  joe    basketball   
hightops  sally  basketball   
advil     jeff   posthacking  
QUERY: SELECT p.hobbies.equipment.name, p.hobbies.name, p.name FROM person p;
name           name         name   
-------------- ------------ ------ 
advil          posthacking  mike   
peet's coffee  basketball   joe    
hightops       basketball   sally  
QUERY: SELECT p.hobbies.equipment.name, p.hobbies.name, p.name FROM person* p;
name           name         name   
-------------- ------------ ------ 
advil          posthacking  mike   
peet's coffee  basketball   joe    
hightops       basketball   sally  
advil          posthacking  jeff   
QUERY: SELECT user_relns() AS user_relns
   ORDER BY user_relns;
user_relns     
-------------- 
ABSTIME_TBL    
BOOLTBL1       
BOOLTBL2       
BOX_TBL        
Bprime         
CHAR16_TBL     
CHAR2_TBL      
CHAR4_TBL      
CHAR8_TBL      
CHAR_TBL       
FLOAT4_TBL     
FLOAT8_TBL     
INT2_TBL       
INT4_TBL       
OIDINT2_TBL    
OIDINT4_TBL    
OIDNAME_TBL    
OID_TBL        
POINT_TBL      
POLYGON_TBL    
RELTIME_TBL    
TINTERVAL_TBL  
a,276956       
a_star         
aggtest        
arrtest        
b_star         
bt_c16_heap    
bt_f8_heap     
bt_i4_heap     
bt_txt_heap    
c_star         
city           
d_star         
dept           
e_star         
emp            
equipment_r    
f_star         
fast_emp4000   
hash_c16_heap  
hash_f8_heap   
hash_i4_heap   
hash_txt_heap  
hobbies_r      
iexit          
ihighway       
iportaltest    
onek           
onek2          
person         
ramp           
real_city      
road           
shighway       
slow_emp4000   
street         
stud_emp       
student        
tenk1          
tenk2          
toyemp         
xacttest       
QUERY: SELECT * FROM arrtest;
a            b                      c              d                  e              
------------ ---------------------- -------------- ------------------ -------------- 
{1,2,3,4,5}  {{{0,0}},{{1,2}}}      {}             {}                                
{11,12,23}   {{{3},{4}},{{4},{5}}}  {"foobar"}     {{"elt1","elt2"}}  {"3.4","6.7"}  
{}           {{{3,4},{0,0}}}        {"foo","bar"}  {{"bar"},{"foo"}}                 
QUERY: SELECT arrtest.a[1],
          arrtest.b[1][1][1],
          arrtest.c[1],
          arrtest.d[1][1],
          arrtest.e[0]
   FROM arrtest;
a   b  c       d     e  
--- -- ------- ----- -- 
1   0                   
11  3  foobar  elt1     
    3  foo     bar      
QUERY: SELECT arrtest.a[1:3],
          arrtest.b[1:1][1:2][1:2],
          arrtest.c[1:2],
          arrtest.d[1:1][1:2]
   FROM arrtest;
a           b                c              d                  
----------- ---------------- -------------- ------------------ 
{1,2,3}                                                        
{11,12,23}                                  {{"elt1","elt2"}}  
            {{{3,4},{0,0}}}  {"foo","bar"}                     
QUERY: SELECT array_dims(arrtest.b) AS x;
x                
---------------- 
[1:2][1:1][1:2]  
[1:2][1:2][1:1]  
[1:1][1:2][1:2]  
QUERY: SELECT *
   FROM arrtest
   WHERE arrtest.a[1] < 5 and
         arrtest.c = '{"foobar"}'::_char16;
a  b  c  d  e  
-- -- -- -- -- 
QUERY: SELECT arrtest.a[1:3],
          arrtest.b[1:1][1:2][1:2],
          arrtest.c[1:2],
          arrtest.d[1:1][1:2]
   FROM arrtest;
a           b                c              d                  
----------- ---------------- -------------- ------------------ 
{1,2,3}                                                        
{11,12,23}                                  {{"elt1","elt2"}}  
            {{{3,4},{0,0}}}  {"foo","bar"}                     
=============== running error queries ... =================
QUERY: select 1
select
select * from nonesuch;
WARN:parser: syntax error at or near "select"

QUERY: select nonesuch from pg_database;
WARN:attribute "nonesuch" not found
QUERY: select * from pg_database where nonesuch = pg_database.datname;
WARN:attribute "nonesuch" not found
QUERY: select * from pg_database where pg_database.datname = nonesuch;
WARN:attribute "nonesuch" not found
QUERY: select distinct on foobar from pg_database;
WARN:parser: syntax error at or near "from"

QUERY: select distinct on foobar * from pg_database;
WARN:The field specified in the UNIQUE ON clause is not in the targetlist
QUERY: delete from;
WARN:parser: syntax error at or near ";"

QUERY: delete from nonesuch;
WARN:nonesuch: Either no such class or insufficient privilege
QUERY: drop table;
WARN:parser: syntax error at or near ";"

QUERY: drop table nonesuch;
WARN:Relation nonesuch Does Not Exist!
QUERY: alter table rename;
WARN:parser: syntax error at or near "rename"

QUERY: alter table nonesuch rename to newnonesuch;
WARN:renamerel: relation "nonesuch" does not exist
QUERY: alter table nonesuch rename to stud_emp;
WARN:renamerel: relation "nonesuch" does not exist
QUERY: alter table stud_emp rename to pg_stud_emp;
WARN:renamerel: Illegal class name: "pg_stud_emp" -- pg_ is reserved for system catalogs
QUERY: alter table stud_emp rename to aggtest;
WARN:renamerel: relation "aggtest" exists
QUERY: alter table stud_emp rename to stud_emp;
WARN:renamerel: relation "stud_emp" exists
QUERY: alter table nonesuchrel rename column nonesuchatt to newnonesuchatt;
WARN:renameatt: relation "nonesuchrel" nonexistent
QUERY: alter table emp rename column nonesuchatt to newnonesuchatt;
WARN:renameatt: attribute "nonesuchatt" nonexistent
QUERY: alter table emp rename column salary to manager;
WARN:renameatt: attribute "manager" exists
QUERY: alter table emp rename column salary to oid;
WARN:renameatt: attribute "oid" exists
QUERY: abort;
NOTICE:UserAbortTransactionBlock and not inprogress state
QUERY: end;
NOTICE:EndTransactionBlock and not inprogress/abort state 
QUERY: create aggregate newavg1 (sfunc1 = int4pl,
			  basetype = int4,
			  stype1 = int4,
			  sfunc2 = int4inc,
			  stype2 = int4,
			  initcond1 = '0',
			  initcond2 = '0');
WARN:AggregateCreate: Aggregate must have final function with both transition functions
QUERY: create aggregate newavg2 (sfunc1 = int4pl,
			  basetype = int4,
			  stype1 = int4,
			  sfunc2 = int2inc,
			  stype2 = int2,
			  finalfunc = int4div,
			  initcond1 = '0',
			  initcond2 = '0');
WARN:AggregateCreate: 'int4div'('int4','int2') does not exist
QUERY: create aggregate newavg3 (sfunc1 = int4pl,
			  basetype = int4,
			  stype1 = int4,
			  sfunc2 = int4inc,
			  stype2 = int4,
			  finalfunc = int2div,
			  initcond1 = '0',
			  initcond2 = '0');
WARN:AggregateCreate: 'int2div'('int4','int4') does not exist
QUERY: create aggregate newcnt1 (sfunc2 = int4inc,
			  stype2 = int4,
			initcond2 = '0');
WARN:Define: "basetype" unspecified
QUERY: create aggregate newcnt1 (sfunc2 = int4inc,
			  basetype = int4,
			  stype2 = int4);
WARN:AggregateCreate: transition function 2 MUST have an initial value
QUERY: drop index;
WARN:parser: syntax error at or near ";"

QUERY: drop index 314159;
WARN:parser: syntax error at or near "314159"

QUERY: drop index nonesuch;
WARN:index "nonesuch" nonexistant
QUERY: drop aggregate;
WARN:parser: syntax error at or near ";"

QUERY: drop aggregate 314159;
WARN:parser: syntax error at or near "314159"

QUERY: drop aggregate nonesuch;
WARN:RemoveAggregate: aggregate 'nonesuch' does not exist
QUERY: drop function ();
WARN:parser: syntax error at or near "("

QUERY: drop function 314159();
WARN:parser: syntax error at or near "314159"

QUERY: drop function nonesuch();
WARN:RemoveFunction: function nonesuch() does not exist
QUERY: drop type;
WARN:parser: syntax error at or near ";"

QUERY: drop type 314159;
WARN:parser: syntax error at or near "314159"

QUERY: drop type nonesuch;
WARN:RemoveType: type 'nonesuch' does not exist
QUERY: drop operator;
WARN:parser: syntax error at or near ";"

QUERY: drop operator equals;
WARN:parser: syntax error at or near "equals"

QUERY: drop operator ===;
WARN:parser: syntax error at or near ";"

QUERY: drop operator int4, int4;
WARN:parser: syntax error at or near "int4"

QUERY: drop operator (int4, int4);
WARN:parser: syntax error at or near "("

QUERY: drop operator === ();
WARN:parser: syntax error at or near ")"

QUERY: drop operator === (int4);
WARN:parser: argument type missing (use NONE for unary operators)
QUERY: drop operator === (int4, int4);
WARN:RemoveOperator: binary operator '===' taking 'int4' and 'int4' does not exist
QUERY: drop operator = (nonesuch);
WARN:parser: argument type missing (use NONE for unary operators)
QUERY: drop operator = ( , int4);
WARN:parser: syntax error at or near ","

QUERY: drop operator = (nonesuch, int4);
WARN:RemoveOperator: type 'nonesuch' does not exist
QUERY: drop operator = (int4, nonesuch);
WARN:RemoveOperator: type 'nonesuch' does not exist
QUERY: drop operator = (int4, );
WARN:parser: syntax error at or near ")"

QUERY: drop rule;
WARN:parser: syntax error at or near ";"

QUERY: drop rule 314159;
WARN:parser: syntax error at or near "314159"

QUERY: drop rule nonesuch;
WARN:RewriteGetRuleEventRel: rule "nonesuch" not found
QUERY: drop tuple rule nonesuch;
WARN:parser: syntax error at or near "tuple"

QUERY: drop instance rule nonesuch;
WARN:parser: syntax error at or near "instance"

QUERY: drop rewrite rule nonesuch;
WARN:parser: syntax error at or near "rewrite"

=============== clearing regression database... =================
QUERY: UPDATE pg_user
   SET usesuper = 't'::bool
   WHERE usename = 'jolly';
QUERY: DROP FUNCTION hobbies(person);
QUERY: DROP FUNCTION hobby_construct(text,text);
QUERY: DROP FUNCTION equipment(hobbies_r);
QUERY: DROP FUNCTION user_relns();
QUERY: DROP FUNCTION circle_in(opaque);
QUERY: DROP FUNCTION circle_out(opaque);
QUERY: DROP FUNCTION pt_in_circle(point,circle);
QUERY: DROP FUNCTION overpaid(emp);
QUERY: DROP FUNCTION boxarea(box);
QUERY: DROP FUNCTION interpt_pp(path,path);
QUERY: DROP FUNCTION reverse_c16(char16);
QUERY: DROP OPERATOR ## (path, path);
QUERY: DROP OPERATOR <% (point, circle);
QUERY: DROP OPERATOR @#@ (none, int4);
QUERY: DROP OPERATOR #@# (int4, none);
QUERY: DROP OPERATOR #%# (int4, none);
QUERY: DROP TYPE city_budget;
QUERY: DROP TYPE circle;
QUERY: DROP AGGREGATE newavg;
QUERY: DROP AGGREGATE newsum;
QUERY: DROP AGGREGATE newcnt;
QUERY: DROP INDEX onek_unique1;
QUERY: DROP INDEX onek_unique2;
QUERY: DROP INDEX onek_hundred;
QUERY: DROP INDEX onek_stringu1;
QUERY: DROP INDEX tenk1_unique1;
QUERY: DROP INDEX tenk1_unique2;
QUERY: DROP INDEX tenk1_hundred;
QUERY: DROP INDEX tenk2_unique1;
QUERY: DROP INDEX tenk2_unique2;
QUERY: DROP INDEX tenk2_hundred;
QUERY: DROP INDEX rect2ind;
QUERY: DROP INDEX rix;
QUERY: DROP INDEX iix;
QUERY: DROP INDEX six;
QUERY: DROP INDEX hash_i4_index;
QUERY: DROP INDEX hash_c16_index;
QUERY: DROP INDEX hash_txt_index;
QUERY: DROP INDEX hash_f8_index;
QUERY: DROP INDEX bt_i4_index;
QUERY: DROP INDEX bt_c16_index;
QUERY: DROP INDEX bt_txt_index;
QUERY: DROP INDEX bt_f8_index;
QUERY: DROP TABLE  onek;
QUERY: DROP TABLE  onek2;
QUERY: DROP TABLE  tenk1;
QUERY: DROP TABLE  tenk2;
QUERY: DROP TABLE  Bprime;
QUERY: DROP TABLE  hobbies_r;
QUERY: DROP TABLE  equipment_r;
QUERY: DROP TABLE  aggtest;
QUERY: DROP TABLE  xacttest;
QUERY: DROP TABLE  arrtest;
QUERY: DROP TABLE  iportaltest;
QUERY: DROP TABLE  f_star;
QUERY: DROP TABLE  e_star;
QUERY: DROP TABLE  d_star;
QUERY: DROP TABLE  c_star;
QUERY: DROP TABLE  b_star;
QUERY: DROP TABLE  a_star;
QUERY: DROP TABLE  stud_emp;
QUERY: DROP TABLE  student;
QUERY: DROP TABLE  slow_emp4000;
QUERY: DROP TABLE  fast_emp4000;
QUERY: DROP TABLE  emp;
QUERY: DROP TABLE  person;
QUERY: DROP TABLE  ramp;
QUERY: DROP TABLE  real_city;
QUERY: DROP TABLE  dept;
QUERY: DROP TABLE  ihighway;
QUERY: DROP TABLE  shighway;
QUERY: DROP TABLE  road;
QUERY: DROP TABLE  city;
QUERY: DROP TABLE  hash_i4_heap;
QUERY: DROP TABLE  hash_c16_heap;
QUERY: DROP TABLE  hash_txt_heap;
QUERY: DROP TABLE  hash_f8_heap;
QUERY: DROP TABLE  bt_i4_heap;
QUERY: DROP TABLE  bt_c16_heap;
QUERY: DROP TABLE  bt_txt_heap;
QUERY: DROP TABLE  bt_f8_heap;
QUERY: DROP TABLE  BOOLTBL1;
QUERY: DROP TABLE  BOOLTBL2;
QUERY: DROP TABLE  ABSTIME_TBL;
QUERY: DROP TABLE  RELTIME_TBL;
QUERY: DROP TABLE  TINTERVAL_TBL;
QUERY: DROP TABLE  BOX_TBL;
QUERY: DROP TABLE  CHAR_TBL;
QUERY: DROP TABLE  CHAR2_TBL;
QUERY: DROP TABLE  CHAR4_TBL;
QUERY: DROP TABLE  CHAR8_TBL;
QUERY: DROP TABLE  CHAR16_TBL;
QUERY: DROP TABLE  FLOAT4_TBL;
QUERY: DROP TABLE  FLOAT8_TBL;
QUERY: DROP TABLE  INT2_TBL;
QUERY: DROP TABLE  INT4_TBL;
QUERY: DROP TABLE  OID_TBL;
QUERY: DROP TABLE  OIDNAME_TBL;
QUERY: DROP TABLE  OIDINT2_TBL;
QUERY: DROP TABLE  OIDINT4_TBL;
QUERY: DROP TABLE  POINT_TBL;
QUERY: DROP TABLE  POLYGON_TBL;
QUERY: DROP VIEW street;
QUERY: DROP VIEW iexit;
QUERY: DROP VIEW toyemp;
RESULTS OF REGRESSION ARE SAVED IN obj/regress.out
